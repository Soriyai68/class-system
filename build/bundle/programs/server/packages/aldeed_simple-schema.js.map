{"version":3,"sources":["meteor://💻app/packages/aldeed:simple-schema/lib/main.js","meteor://💻app/packages/aldeed:simple-schema/lib/SimpleSchema.js","meteor://💻app/packages/aldeed:simple-schema/lib/SimpleSchemaGroup.js","meteor://💻app/packages/aldeed:simple-schema/lib/ValidationContext.js","meteor://💻app/packages/aldeed:simple-schema/lib/clean.js","meteor://💻app/packages/aldeed:simple-schema/lib/defaultMessages.js","meteor://💻app/packages/aldeed:simple-schema/lib/doValidation.js","meteor://💻app/packages/aldeed:simple-schema/lib/expandShorthand.js","meteor://💻app/packages/aldeed:simple-schema/lib/humanize.js","meteor://💻app/packages/aldeed:simple-schema/lib/regExp.js","meteor://💻app/packages/aldeed:simple-schema/lib/clean/AutoValueRunner.js","meteor://💻app/packages/aldeed:simple-schema/lib/clean/convertToProperType.js","meteor://💻app/packages/aldeed:simple-schema/lib/clean/getPositionsForAutoValue.js","meteor://💻app/packages/aldeed:simple-schema/lib/clean/setAutoValues.js","meteor://💻app/packages/aldeed:simple-schema/lib/utility/appendAffectedKey.js","meteor://💻app/packages/aldeed:simple-schema/lib/utility/dateToDateString.js","meteor://💻app/packages/aldeed:simple-schema/lib/utility/forEachKeyAncestor.js","meteor://💻app/packages/aldeed:simple-schema/lib/utility/getKeysWithValueInObj.js","meteor://💻app/packages/aldeed:simple-schema/lib/utility/getLastPartOfKey.js","meteor://💻app/packages/aldeed:simple-schema/lib/utility/getParentOfKey.js","meteor://💻app/packages/aldeed:simple-schema/lib/utility/index.js","meteor://💻app/packages/aldeed:simple-schema/lib/utility/isEmptyObject.js","meteor://💻app/packages/aldeed:simple-schema/lib/utility/isObjectWeShouldTraverse.js","meteor://💻app/packages/aldeed:simple-schema/lib/utility/looksLikeModifier.js","meteor://💻app/packages/aldeed:simple-schema/lib/utility/merge.js","meteor://💻app/packages/aldeed:simple-schema/lib/validation/allowedValuesValidator.js","meteor://💻app/packages/aldeed:simple-schema/lib/validation/requiredValidator.js","meteor://💻app/packages/aldeed:simple-schema/lib/validation/typeValidator/doArrayChecks.js","meteor://💻app/packages/aldeed:simple-schema/lib/validation/typeValidator/doDateChecks.js","meteor://💻app/packages/aldeed:simple-schema/lib/validation/typeValidator/doNumberChecks.js","meteor://💻app/packages/aldeed:simple-schema/lib/validation/typeValidator/doStringChecks.js","meteor://💻app/packages/aldeed:simple-schema/lib/validation/typeValidator/index.js"],"names":["SimpleSchema","ValidationContext","module","link","v","__reifyWaitForDeps__","exportDefault","__reify_async_result__","_reifyError","self","async","_objectWithoutProperties","default","_objectSpread","_excluded","export","schemaDefinitionOptions","clone","MessageBox","MongoObject","humanize","SimpleSchemaGroup","regExpObj","clean","expandShorthand","forEachKeyAncestor","isEmptyObject","merge","defaultMessages","oneOfProps","propsThatCanBeFunction","constructor","schema","arguments","length","undefined","options","pick","getPickOrOmit","omit","_constructorOptions","_constructorOptionDefaults","_cleanOptions","_validators","_docValidators","_validationContexts","_schema","_depsLabels","extend","_rawDefinition","keepRawDefinition","messageBox","version","rawDefinition","forEachAncestorSimpleSchema","key","func","genericKey","makeKeyGeneric","ancestor","def","type","definitions","forEach","typeDef","isSimpleSchema","slice","obj","reactiveLabelDependency","tracker","Dependency","depend","simpleSchema","subSchemaKey","nearestSimpleSchemaInstance","innerKey","keySchema","found","mergedSchema","_schemaKeys","childSchema","Object","keys","subKey","concat","getDefinition","propList","functionContext","defs","getPropIterator","newObj","prop","Array","isArray","includes","val","indexOf","call","inflectedLabel","humanizeAutoLabels","result","map","newTypeDef","getQuickTypeForKey","fieldSchema","fieldType","singleType","String","Number","Integer","Boolean","Date","arrayItemFieldSchema","arrayItemFieldType","getObjectSchema","newSchemaDef","searchString","k","_copyWithSchema","autoValueFunctions","_autoValues","_ref","fieldName","closestSubschemaFieldName","blackboxKeys","Set","_blackboxKeys","blackboxKey","add","from","keyIsInBlackBox","isInBlackBox","remainder","has","testKeySchema","allowsKey","some","loopKey","compare1","compare2","allowed","objectKeys","keyPrefix","_firstLevelSchemaKeys","setObjectKeys","curSchema","schemaParentKey","definition","parentKey","lastIndexOf","parentKeyWithDot","push","_ref2","cl","Error","schemaObj","assign","schemaKeys","combinedKeys","standardizeDefinition","prototype","hasOwnProperty","definitionWithoutType","checkAndScrubDefinition","checkSchemaOverlap","parentFieldName","oneOfDef","blackbox","Any","autoValue","getAllowedValuesForKey","allowedValues","get","newContext","namedContext","name","addValidator","addDocValidator","validate","check","e","objects","oneObj","validationContext","isValid","errors","validationErrors","message","messageForError","error","errorType","details","errorDetail","validationErrorTransform","validateAndReturnErrorsPromise","Promise","resolve","validator","optionsClone","mongoObject","returnErrorsPromise","getFormValidator","_len","args","_key","labels","label","schemaInstance","changed","schemaKey","find","props","defaultValue","errorInfo","context","extendOptions","option","defineValidationErrorTransform","transform","oneOf","_len2","_key2","constructorOptionDefaults","RegEx","autoConvert","extendAutoValueContext","filter","getAutoValues","removeEmptyStrings","removeNullsFromArrays","trimStrings","requiredByDefault","ErrorTypes","REQUIRED","MIN_STRING","MAX_STRING","MIN_NUMBER","MAX_NUMBER","MIN_NUMBER_EXCLUSIVE","MAX_NUMBER_EXCLUSIVE","MIN_DATE","MAX_DATE","BAD_DATE","MIN_COUNT","MAX_COUNT","MUST_BE_INTEGER","VALUE_NOT_ALLOWED","EXPECTED_TYPE","FAILED_REGULAR_EXPRESSION","KEY_NOT_IN_SCHEMA","_makeGeneric","setDefaultMessages","messages","newKey","shouldHumanize","pieces","split","pop","getDefaultAutoValueFunction","defaultAutoValueFunction","isSet","operator","parentField","isUpsert","$setOnInsert","standardizedDef","reduce","newDef","groupProps","allKeys","couldBeArray","_ref3","isDefault","console","warn","endsWith","optional","required","requiredFn","_len3","_key3","apply","defaultLabel","pickOrOmit","_len4","_key4","newSchema","includeIt","wantedField","isBasicObject","RegExp","regEx","otherGroup","index","otherDef","doValidation","ss","_simpleSchema","_validationErrors","_deps","_depsAny","_markKeyChanged","_markKeysChanged","setValidationErrors","previousValidationErrors","o","newValidationErrors","changedKeys","addValidationErrors","reset","getErrorForKey","errorForKey","_keyIsInvalid","keyIsInvalid","keyErrorMessage","errorObj","extendedCustomContext","ignore","ignoreTypes","keysToValidate","modifier","isModifier","upsert","wasValidated","startsWith","looksLikeModifier","convertToProperType","setAutoValues","typeValidator","operatorsToIgnoreValue","doc","cleanDoc","mutate","removedPositions","forEachNode","eachNode","gKey","value","p","isArrayItem","position","removeValueForPosition","remove","debug","info","outerDef","isValidType","valueShouldBeChecked","newVal","updateValue","trim","match","replace","setValueForPosition","endPointsOnly","removedPosition","lastBrace","removedPositionParent","getValueForPosition","removeArrayItems","op","operatorValue","regExpMessages","exp","Email","msg","EmailWithTLD","Domain","WeakDomain","IP","IPv4","IPv6","Url","Id","ZipCode","Phone","initialLanguage","en","minString","maxString","minNumber","maxNumber","minNumberExclusive","maxNumberExclusive","minDate","maxDate","badDate","minCount","maxCount","noDecimal","notAllowed","expectedType","regExp","msgObj","toString","regExpMessage","keyNotInSchema","appendAffectedKey","getParentOfKey","isObjectWeShouldTraverse","requiredValidator","allowedValuesValidator","shouldCheck","getFieldInfo","keyInfo","getInfoForKey","affectedKey","affectedKeyGeneric","isInArrayItemObject","isInSubObject","fieldParentNameWithEndDot","fieldParentName","fieldValidationErrors","validatorContext","field","fName","siblingField","builtInValidators","validators","fieldIsValid","finalValidatorContext","fieldValidators","custom","splice","every","checkObj","shouldValidateKey","keyToValidate","functionsContext","childKeys","i","presentKeys","checkedKeys","checkModifier","mod","opObj","$each","docValidators","docValidatorContext","addedFieldNames","errObj","schemaClone","itemKey","capitalize","text","toUpperCase","substr","toLowerCase","underscore","extname","ext","substring","rxDomain","rxNameDomain","rxIPv4","rxIPv6","rxWeakDomain","join","isValidBound","lower","isSafeInteger","idOfLength","min","max","bounds","AutoValueRunner","doneKeys","runForPosition","extendedAutoValueContext","parentFieldInfo","doUnset","isNaN","unset","getObject","newValue","avOperator","avProp","numberVal","parsedDate","parse","getPositionsForAutoValue","getLastPartOfKey","positions","getPositionsInfoForGenericKey","getPositionsThatCreateGenericKey","parentPath","lastPart","lastPartWithBraces","parentPositions","childPosition","wouldBePosition","next","nextPieces","newPieces","shift","lastPart2","lastPartWithBraces2","_positionToKey","sortAutoValueFunctions","defaultFieldOrder","acc","sort","a","b","depthDiff","sortedAutoValueFunctions","avRunner","bind","dateToDateString","date","m","getUTCMonth","d","getUTCDate","getUTCFullYear","loopFunc","lastDot","getKeysWithValueInObj","matchKey","keysWithValue","keyAdjust","matchKeyPlusDot","ancestorKey","startString","withEndDot","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","destination","sources","source","isAllowed","keysWithValueInSet","$set","keysWithValueInSetOnInsert","fieldInfo","doArrayChecks","keyValue","dataType","doDateChecks","getTime","doNumberChecks","isInteger","isFinite","Math","floor","expectsInteger","exclusiveMax","exclusiveMin","doStringChecks","skipRegExCheckForEmptyStrings","test","regExError","re","Symbol","iterator","Function","dateTypeIsOkay","JSON","stringify"],"mappings":"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","file":"/packages/aldeed_simple-schema.js","sourcesContent":["import { SimpleSchema, ValidationContext } from './SimpleSchema';\nimport './clean';\n\nSimpleSchema.ValidationContext = ValidationContext;\n\nexport default SimpleSchema;\n","/* eslint-disable no-undef */\nimport clone from 'clone';\nimport MessageBox from 'message-box';\nimport MongoObject from 'mongo-object';\nimport humanize from './humanize';\nimport ValidationContext from './ValidationContext';\nimport SimpleSchemaGroup from './SimpleSchemaGroup';\nimport regExpObj from './regExp';\nimport clean from './clean';\nimport expandShorthand from './expandShorthand';\nimport { forEachKeyAncestor, isEmptyObject, merge } from './utility';\nimport defaultMessages from './defaultMessages';\n\n// Exported for tests\nexport const schemaDefinitionOptions = [\n  'autoValue',\n  'defaultValue',\n  'label',\n  'optional',\n  'required',\n  'type',\n];\n\nconst oneOfProps = [\n  'allowedValues',\n  'blackbox',\n  'custom',\n  'exclusiveMax',\n  'exclusiveMin',\n  'max',\n  'maxCount',\n  'min',\n  'minCount',\n  'regEx',\n  'skipRegExCheckForEmptyStrings',\n  'trim',\n  'type',\n];\n\nconst propsThatCanBeFunction = [\n  'allowedValues',\n  'exclusiveMax',\n  'exclusiveMin',\n  'label',\n  'max',\n  'maxCount',\n  'min',\n  'minCount',\n  'optional',\n  'regEx',\n  'skipRegExCheckForEmptyStrings',\n];\n\nclass SimpleSchema {\n  constructor(schema = {}, options = {}) {\n    // Stash the options object\n    this._constructorOptions = {\n      ...SimpleSchema._constructorOptionDefaults,\n      ...options,\n    };\n    delete this._constructorOptions.clean; // stored separately below\n\n    // Schema-level defaults for cleaning\n    this._cleanOptions = {\n      ...SimpleSchema._constructorOptionDefaults.clean,\n      ...(options.clean || {}),\n    };\n\n    // Custom validators for this instance\n    this._validators = [];\n    this._docValidators = [];\n\n    // Named validation contexts\n    this._validationContexts = {};\n\n    // Clone, expanding shorthand, and store the schema object in this._schema\n    this._schema = {};\n    this._depsLabels = {};\n    this.extend(schema);\n\n    // Clone raw definition and save if keepRawDefinition is active\n    this._rawDefinition = this._constructorOptions.keepRawDefinition ? schema : null;\n\n    // Define default validation error messages\n    this.messageBox = new MessageBox(clone(defaultMessages));\n\n    this.version = SimpleSchema.version;\n  }\n\n  /**\n  /* @returns {Object} The entire raw schema definition passed in the constructor\n  */\n  get rawDefinition() {\n    return this._rawDefinition;\n  }\n\n  forEachAncestorSimpleSchema(key, func) {\n    const genericKey = MongoObject.makeKeyGeneric(key);\n\n    forEachKeyAncestor(genericKey, (ancestor) => {\n      const def = this._schema[ancestor];\n      if (!def) return;\n      def.type.definitions.forEach((typeDef) => {\n        if (SimpleSchema.isSimpleSchema(typeDef.type)) {\n          func(typeDef.type, ancestor, genericKey.slice(ancestor.length + 1));\n        }\n      });\n    });\n  }\n\n  /**\n   * Returns whether the obj is a SimpleSchema object.\n   * @param {Object} [obj] An object to test\n   * @returns {Boolean} True if the given object appears to be a SimpleSchema instance\n   */\n  static isSimpleSchema(obj) {\n    return (obj && (obj instanceof SimpleSchema || obj._schema));\n  }\n\n  /**\n   * For Meteor apps, add a reactive dependency on the label\n   * for a key.\n   */\n  reactiveLabelDependency(key, tracker = this._constructorOptions.tracker) {\n    if (!key || !tracker) return;\n\n    const genericKey = MongoObject.makeKeyGeneric(key);\n\n    // If in this schema\n    if (this._schema[genericKey]) {\n      if (!this._depsLabels[genericKey]) {\n        this._depsLabels[genericKey] = new tracker.Dependency();\n      }\n      this._depsLabels[genericKey].depend();\n      return;\n    }\n\n    // If in subschema\n    this.forEachAncestorSimpleSchema(key, (simpleSchema, ancestor, subSchemaKey) => {\n      // Pass tracker down so that we get reactivity even if the subschema\n      // didn't have tracker option set\n      simpleSchema.reactiveLabelDependency(subSchemaKey, tracker);\n    });\n  }\n\n  /**\n   * @param {String} key One specific or generic key for which to get the schema.\n   * @returns {[SimpleSchema, String]} Returns a 2-tuple.\n   *\n   *   First item: The SimpleSchema instance that actually defines the given key.\n   *\n   *   For example, if you have several nested objects, each their own SimpleSchema\n   *   instance, and you pass in 'outerObj.innerObj.innerestObj.name' as the key, you'll\n   *   get back the SimpleSchema instance for `outerObj.innerObj.innerestObj` key.\n   *\n   *   But if you pass in 'outerObj.innerObj.innerestObj.name' as the key and that key is\n   *   defined in the main schema without use of subschemas, then you'll get back the main schema.\n   *\n   *   Second item: The part of the key that is in the found schema.\n   *\n   *   Always returns a tuple (array) but the values may be `null`.\n   */\n  nearestSimpleSchemaInstance(key) {\n    if (!key) return [null, null];\n\n    const genericKey = MongoObject.makeKeyGeneric(key);\n    if (this._schema[genericKey]) return [this, genericKey];\n\n    // If not defined in this schema, see if it's defined in a subschema\n    let innerKey;\n    let nearestSimpleSchemaInstance;\n    this.forEachAncestorSimpleSchema(key, (simpleSchema, ancestor, subSchemaKey) => {\n      if (!nearestSimpleSchemaInstance && simpleSchema._schema[subSchemaKey]) {\n        nearestSimpleSchemaInstance = simpleSchema;\n        innerKey = subSchemaKey;\n      }\n    });\n\n    return innerKey ? [nearestSimpleSchemaInstance, innerKey] : [null, null];\n  }\n\n  /**\n   * @param {String} [key] One specific or generic key for which to get the schema.\n   * @returns {Object} The entire schema object or just the definition for one key.\n   *\n   * Note that this returns the raw, unevaluated definition object. Use `getDefinition`\n   * if you want the evaluated definition, where any properties that are functions\n   * have been run to produce a result.\n   */\n  schema(key) {\n    if (!key) return this._schema;\n\n    const genericKey = MongoObject.makeKeyGeneric(key);\n    let keySchema = this._schema[genericKey];\n\n    // If not defined in this schema, see if it's defined in a subschema\n    if (!keySchema) {\n      let found = false;\n      this.forEachAncestorSimpleSchema(key, (simpleSchema, ancestor, subSchemaKey) => {\n        if (!found) keySchema = simpleSchema.schema(subSchemaKey);\n        if (keySchema) found = true;\n      });\n    }\n\n    return keySchema;\n  }\n\n  /**\n   * @returns {Object} The entire schema object with subschemas merged. This is the\n   * equivalent of what schema() returned in SimpleSchema < 2.0\n   *\n   * Note that this returns the raw, unevaluated definition object. Use `getDefinition`\n   * if you want the evaluated definition, where any properties that are functions\n   * have been run to produce a result.\n   */\n  mergedSchema() {\n    const mergedSchema = {};\n\n    this._schemaKeys.forEach((key) => {\n      const keySchema = this._schema[key];\n      mergedSchema[key] = keySchema;\n\n      keySchema.type.definitions.forEach((typeDef) => {\n        if (!(SimpleSchema.isSimpleSchema(typeDef.type))) return;\n        const childSchema = typeDef.type.mergedSchema();\n        Object.keys(childSchema).forEach((subKey) => {\n          mergedSchema[`${key}.${subKey}`] = childSchema[subKey];\n        });\n      });\n    });\n\n    return mergedSchema;\n  }\n\n  /**\n   * Returns the evaluated definition for one key in the schema\n   *\n   * @param {String} key Generic or specific schema key\n   * @param {Array(String)} [propList] Array of schema properties you need; performance optimization\n   * @param {Object} [functionContext] The context to use when evaluating schema options that are functions\n   * @returns {Object} The schema definition for the requested key\n   */\n  getDefinition(key, propList, functionContext = {}) {\n    const defs = this.schema(key);\n    if (!defs) return;\n\n    const getPropIterator = (obj, newObj) => {\n      return (prop) => {\n        if (Array.isArray(propList) && !propList.includes(prop)) return;\n        const val = obj[prop];\n        // For any options that support specifying a function, evaluate the functions\n        if (propsThatCanBeFunction.indexOf(prop) > -1 && typeof val === 'function') {\n          newObj[prop] = val.call({\n            key,\n            ...functionContext,\n          });\n          // Inflect label if undefined\n          if (prop === 'label' && typeof newObj[prop] !== 'string') newObj[prop] = inflectedLabel(key, this._constructorOptions.humanizeAutoLabels);\n        } else {\n          newObj[prop] = val;\n        }\n      };\n    };\n\n    const result = {};\n    Object.keys(defs).forEach(getPropIterator(defs, result));\n\n    // Resolve all the types and convert to a normal array to make it easier\n    // to use.\n    if (defs.type) {\n      result.type = defs.type.definitions.map((typeDef) => {\n        const newTypeDef = {};\n        Object.keys(typeDef).forEach(getPropIterator(typeDef, newTypeDef));\n        return newTypeDef;\n      });\n    }\n\n    return result;\n  }\n\n  /**\n   * Returns a string identifying the best guess data type for a key. For keys\n   * that allow multiple types, the first type is used. This can be useful for\n   * building forms.\n   *\n   * @param {String} key Generic or specific schema key\n   * @returns {String} A type string. One of:\n   *  string, number, boolean, date, object, stringArray, numberArray, booleanArray,\n   *  dateArray, objectArray\n   */\n  getQuickTypeForKey(key) {\n    let type;\n\n    const fieldSchema = this.schema(key);\n    if (!fieldSchema) return;\n\n    const fieldType = fieldSchema.type.singleType;\n\n    if (fieldType === String) {\n      type = 'string';\n    } else if (fieldType === Number || fieldType === SimpleSchema.Integer) {\n      type = 'number';\n    } else if (fieldType === Boolean) {\n      type = 'boolean';\n    } else if (fieldType === Date) {\n      type = 'date';\n    } else if (fieldType === Array) {\n      const arrayItemFieldSchema = this.schema(`${key}.$`);\n      if (!arrayItemFieldSchema) return;\n\n      const arrayItemFieldType = arrayItemFieldSchema.type.singleType;\n      if (arrayItemFieldType === String) {\n        type = 'stringArray';\n      } else if (arrayItemFieldType === Number || arrayItemFieldType === SimpleSchema.Integer) {\n        type = 'numberArray';\n      } else if (arrayItemFieldType === Boolean) {\n        type = 'booleanArray';\n      } else if (arrayItemFieldType === Date) {\n        type = 'dateArray';\n      } else if (arrayItemFieldType === Object || SimpleSchema.isSimpleSchema(arrayItemFieldType)) {\n        type = 'objectArray';\n      }\n    } else if (fieldType === Object) {\n      type = 'object';\n    }\n\n    return type;\n  }\n\n  /**\n   * Given a key that is an Object, returns a new SimpleSchema instance scoped to that object.\n   *\n   * @param {String} key Generic or specific schema key\n   */\n  getObjectSchema(key) {\n    const newSchemaDef = {};\n    const genericKey = MongoObject.makeKeyGeneric(key);\n    const searchString = `${genericKey}.`;\n\n    const mergedSchema = this.mergedSchema();\n    Object.keys(mergedSchema).forEach((k) => {\n      if (k.indexOf(searchString) === 0) {\n        newSchemaDef[k.slice(searchString.length)] = mergedSchema[k];\n      }\n    });\n\n    return this._copyWithSchema(newSchemaDef);\n  }\n\n  // Returns an array of all the autovalue functions, including those in subschemas all the\n  // way down the schema tree\n  autoValueFunctions() {\n    let result = [].concat(this._autoValues);\n\n    this._schemaKeys.forEach((key) => {\n      this._schema[key].type.definitions.forEach((typeDef) => {\n        if (!(SimpleSchema.isSimpleSchema(typeDef.type))) return;\n        result = result.concat(typeDef.type.autoValueFunctions().map(({\n          func,\n          fieldName,\n          closestSubschemaFieldName,\n        }) => {\n          return {\n            func,\n            fieldName: `${key}.${fieldName}`,\n            closestSubschemaFieldName: closestSubschemaFieldName.length ? `${key}.${closestSubschemaFieldName}` : key,\n          };\n        }));\n      });\n    });\n\n    return result;\n  }\n\n  // Returns an array of all the blackbox keys, including those in subschemas\n  blackboxKeys() {\n    const blackboxKeys = new Set(this._blackboxKeys);\n\n    this._schemaKeys.forEach((key) => {\n      this._schema[key].type.definitions.forEach((typeDef) => {\n        if (!(SimpleSchema.isSimpleSchema(typeDef.type))) return;\n        typeDef.type.blackboxKeys().forEach((blackboxKey) => {\n          blackboxKeys.add(`${key}.${blackboxKey}`);\n        });\n      });\n    });\n\n    return Array.from(blackboxKeys);\n  }\n\n  // Check if the key is a nested dot-syntax key inside of a blackbox object\n  keyIsInBlackBox(key) {\n    let isInBlackBox = false;\n    forEachKeyAncestor(MongoObject.makeKeyGeneric(key), (ancestor, remainder) => {\n      if (this._blackboxKeys.has(ancestor)) {\n        isInBlackBox = true;\n      } else {\n        const testKeySchema = this.schema(ancestor);\n        if (testKeySchema) {\n          testKeySchema.type.definitions.forEach((typeDef) => {\n            if (!(SimpleSchema.isSimpleSchema(typeDef.type))) return;\n            if (typeDef.type.keyIsInBlackBox(remainder)) isInBlackBox = true;\n          });\n        }\n      }\n    });\n    return isInBlackBox;\n  }\n\n  // Returns true if key is explicitly allowed by the schema or implied\n  // by other explicitly allowed keys.\n  // The key string should have $ in place of any numeric array positions.\n  allowsKey(key) {\n    // Loop through all keys in the schema\n    return this._schemaKeys.some((loopKey) => {\n      // If the schema key is the test key, it's allowed.\n      if (loopKey === key) return true;\n\n      const fieldSchema = this.schema(loopKey);\n      const compare1 = key.slice(0, loopKey.length + 2);\n      const compare2 = compare1.slice(0, -1);\n\n      // Blackbox and subschema checks are needed only if key starts with\n      // loopKey + a dot\n      if (compare2 !== `${loopKey}.`) return false;\n\n      // Black box handling\n      if (this._blackboxKeys.has(loopKey)) {\n        // If the test key is the black box key + \".$\", then the test\n        // key is NOT allowed because black box keys are by definition\n        // only for objects, and not for arrays.\n        return compare1 !== `${loopKey}.$`;\n      }\n\n      // Subschemas\n      let allowed = false;\n      const subKey = key.slice(loopKey.length + 1);\n      fieldSchema.type.definitions.forEach((typeDef) => {\n        if (!(SimpleSchema.isSimpleSchema(typeDef.type))) return;\n        if (typeDef.type.allowsKey(subKey)) allowed = true;\n      });\n      return allowed;\n    });\n  }\n\n  /**\n   * Returns all the child keys for the object identified by the generic prefix,\n   * or all the top level keys if no prefix is supplied.\n   *\n   * @param {String} [keyPrefix] The Object-type generic key for which to get child keys. Omit for\n   *   top-level Object-type keys\n   * @returns {[[Type]]} [[Description]]\n   */\n  objectKeys(keyPrefix) {\n    if (!keyPrefix) return this._firstLevelSchemaKeys;\n\n    const objectKeys = [];\n    const setObjectKeys = (curSchema, schemaParentKey) => {\n      Object.keys(curSchema).forEach((fieldName) => {\n        const definition = curSchema[fieldName];\n        fieldName = schemaParentKey ? `${schemaParentKey}.${fieldName}` : fieldName;\n        if (fieldName.indexOf('.') > -1 && fieldName.slice(-2) !== '.$') {\n          const parentKey = fieldName.slice(0, fieldName.lastIndexOf('.'));\n          const parentKeyWithDot = `${parentKey}.`;\n          objectKeys[parentKeyWithDot] = objectKeys[parentKeyWithDot] || [];\n          objectKeys[parentKeyWithDot].push(fieldName.slice(fieldName.lastIndexOf('.') + 1));\n        }\n\n        // If the current field is a nested SimpleSchema,\n        // iterate over the child fields and cache their properties as well\n        definition.type.definitions.forEach(({ type }) => {\n          if (SimpleSchema.isSimpleSchema(type)) {\n            setObjectKeys(type._schema, fieldName);\n          }\n        });\n      });\n    };\n\n    setObjectKeys(this._schema);\n\n    return objectKeys[`${keyPrefix}.`] || [];\n  }\n\n  /**\n   * Copies this schema into a new instance with the same validators, messages,\n   * and options, but with different keys as defined in `schema` argument\n   *\n   * @param {Object} schema\n   * @returns The new SimpleSchema instance (chainable)\n   */\n  _copyWithSchema(schema) {\n    const cl = new SimpleSchema(schema, { ...this._constructorOptions });\n    cl._cleanOptions = this._cleanOptions;\n    cl.messageBox = this.messageBox.clone();\n    return cl;\n  }\n\n  /**\n   * Clones this schema into a new instance with the same schema keys, validators,\n   * and options.\n   *\n   * @returns The new SimpleSchema instance (chainable)\n   */\n  clone() {\n    return this._copyWithSchema(this._schema);\n  }\n\n  /**\n   * Extends (mutates) this schema with another schema, key by key.\n   *\n   * @param {SimpleSchema|Object} schema\n   * @returns The SimpleSchema instance (chainable)\n   */\n  extend(schema = {}) {\n    if (Array.isArray(schema)) throw new Error('You may not pass an array of schemas to the SimpleSchema constructor or to extend()');\n\n    let schemaObj;\n    if (SimpleSchema.isSimpleSchema(schema)) {\n      schemaObj = schema._schema;\n      this._validators = this._validators.concat(schema._validators);\n      this._docValidators = this._docValidators.concat(schema._docValidators);\n      Object.assign(this._cleanOptions, schema._cleanOptions);\n      Object.assign(this._constructorOptions, schema._constructorOptions);\n    } else {\n      schemaObj = expandShorthand(schema);\n    }\n\n    const schemaKeys = Object.keys(schemaObj);\n    const combinedKeys = new Set([...Object.keys(this._schema), ...schemaKeys]);\n\n    // Update all of the information cached on the instance\n    schemaKeys.forEach((fieldName) => {\n      const definition = standardizeDefinition(schemaObj[fieldName]);\n\n      // Merge/extend with any existing definition\n      if (this._schema[fieldName]) {\n        if (!Object.prototype.hasOwnProperty.call(this._schema, fieldName)) {\n          // fieldName is actually a method from Object itself!\n          throw new Error(`${fieldName} key is actually the name of a method on Object, please rename it`);\n        }\n\n        const { type, ...definitionWithoutType } = definition; // eslint-disable-line no-unused-vars\n\n        this._schema[fieldName] = {\n          ...this._schema[fieldName],\n          ...definitionWithoutType,\n        };\n\n        if (definition.type) this._schema[fieldName].type.extend(definition.type);\n      } else {\n        this._schema[fieldName] = definition;\n      }\n\n      checkAndScrubDefinition(fieldName, this._schema[fieldName], this._constructorOptions, combinedKeys);\n    });\n\n    checkSchemaOverlap(this._schema);\n\n    // Set/Reset all of these\n    this._schemaKeys = Object.keys(this._schema);\n    this._autoValues = [];\n    this._blackboxKeys = new Set();\n    this._firstLevelSchemaKeys = [];\n\n    // Update all of the information cached on the instance\n    this._schemaKeys.forEach((fieldName) => {\n      // Make sure parent has a definition in the schema. No implied objects!\n      if (fieldName.indexOf('.') > -1) {\n        const parentFieldName = fieldName.slice(0, fieldName.lastIndexOf('.'));\n        if (!Object.prototype.hasOwnProperty.call(this._schema, parentFieldName)) throw new Error(`\"${fieldName}\" is in the schema but \"${parentFieldName}\" is not`);\n      }\n\n      const definition = this._schema[fieldName];\n\n      // Keep list of all top level keys\n      if (fieldName.indexOf('.') === -1) this._firstLevelSchemaKeys.push(fieldName);\n\n      // Keep list of all blackbox keys for passing to MongoObject constructor\n      // XXX For now if any oneOf type is blackbox, then the whole field is.\n      /* eslint-disable no-restricted-syntax */\n      for (const oneOfDef of definition.type.definitions) {\n        // XXX If the type is SS.Any, also consider it a blackbox\n        if (oneOfDef.blackbox === true || oneOfDef.type === SimpleSchema.Any) {\n          this._blackboxKeys.add(fieldName);\n          break;\n        }\n      }\n      /* eslint-enable no-restricted-syntax */\n\n      // Keep list of autoValue functions\n      if (typeof definition.autoValue === 'function') {\n        this._autoValues.push({\n          closestSubschemaFieldName: '',\n          fieldName,\n          func: definition.autoValue,\n        });\n      }\n    });\n\n    return this;\n  }\n\n  getAllowedValuesForKey(key) {\n    // For array fields, `allowedValues` is on the array item definition\n    if (this.allowsKey(`${key}.$`)) {\n      key = `${key}.$`;\n    }\n    const allowedValues = this.get(key, 'allowedValues');\n\n    if (Array.isArray(allowedValues) || allowedValues instanceof Set) {\n      return [...allowedValues];\n    }\n\n    return null;\n  }\n\n  newContext() {\n    return new ValidationContext(this);\n  }\n\n  namedContext(name) {\n    if (typeof name !== 'string') name = 'default';\n    if (!this._validationContexts[name]) {\n      this._validationContexts[name] = new ValidationContext(this, name);\n    }\n    return this._validationContexts[name];\n  }\n\n  addValidator(func) {\n    this._validators.push(func);\n  }\n\n  addDocValidator(func) {\n    this._docValidators.push(func);\n  }\n\n  /**\n   * @param obj {Object|Object[]} Object or array of objects to validate.\n   * @param [options] {Object} Same options object that ValidationContext#validate takes\n   *\n   * Throws an Error with name `ClientError` and `details` property containing the errors.\n   */\n  validate(obj, options = {}) {\n    // For Meteor apps, `check` option can be passed to silence audit-argument-checks\n    const check = options.check || this._constructorOptions.check;\n    if (typeof check === 'function') {\n      // Call check but ignore the error\n      try { check(obj); } catch (e) { /* ignore error */ }\n    }\n\n    // obj can be an array, in which case we validate each object in it and\n    // throw as soon as one has an error\n    const objects = Array.isArray(obj) ? obj : [obj];\n    objects.forEach((oneObj) => {\n      const validationContext = this.newContext();\n      const isValid = validationContext.validate(oneObj, options);\n\n      if (isValid) return;\n\n      const errors = validationContext.validationErrors();\n\n      // In order for the message at the top of the stack trace to be useful,\n      // we set it to the first validation error message.\n      const message = this.messageForError(errors[0]);\n\n      const error = new Error(message);\n\n      error.errorType = 'ClientError';\n      error.name = 'ClientError';\n      error.error = 'validation-error';\n\n      // Add meaningful error messages for each validation error.\n      // Useful for display messages when using 'mdg:validated-method'.\n      error.details = errors.map((errorDetail) => ({ ...errorDetail, message: this.messageForError(errorDetail) }));\n\n      // The primary use for the validationErrorTransform is to convert the\n      // vanilla Error into a Meteor.Error until DDP is able to pass\n      // vanilla errors back to the client.\n      if (typeof SimpleSchema.validationErrorTransform === 'function') {\n        throw SimpleSchema.validationErrorTransform(error);\n      } else {\n        throw error;\n      }\n    });\n  }\n\n  /**\n   * @param obj {Object} Object to validate.\n   * @param [options] {Object} Same options object that ValidationContext#validate takes\n   *\n   * Returns a Promise that resolves with the errors\n   */\n  validateAndReturnErrorsPromise(obj, options) {\n    const validationContext = this.newContext();\n    const isValid = validationContext.validate(obj, options);\n\n    if (isValid) return Promise.resolve([]);\n\n    // Add the `message` prop\n    const errors = validationContext.validationErrors().map((errorDetail) => {\n      return { ...errorDetail, message: this.messageForError(errorDetail) };\n    });\n\n    return Promise.resolve(errors);\n  }\n\n  validator(options = {}) {\n    return (obj) => {\n      const optionsClone = { ...options };\n      if (options.clean === true) {\n        // Do this here and pass into both functions for better performance\n        optionsClone.mongoObject = new MongoObject(obj, this.blackboxKeys());\n        this.clean(obj, optionsClone);\n      }\n      if (options.returnErrorsPromise) {\n        return this.validateAndReturnErrorsPromise(obj, optionsClone);\n      }\n      return this.validate(obj, optionsClone);\n    };\n  }\n\n  getFormValidator(options = {}) {\n    return this.validator({ ...options, returnErrorsPromise: true });\n  }\n\n  clean(...args) {\n    return clean(this, ...args);\n  }\n\n  /**\n   * Change schema labels on the fly, causing mySchema.label computation\n   * to rerun. Useful when the user changes the language.\n   *\n   * @param {Object} labels A dictionary of all the new label values, by schema key.\n   */\n  labels(labels) {\n    Object.keys(labels).forEach((key) => {\n      const label = labels[key];\n      if (typeof label !== 'string' && typeof label !== 'function') return;\n\n      const [schemaInstance, innerKey] = this.nearestSimpleSchemaInstance(key);\n      if (!schemaInstance) return;\n\n      schemaInstance._schema[innerKey].label = label;\n      schemaInstance._depsLabels[innerKey] && schemaInstance._depsLabels[innerKey].changed();\n    });\n  }\n\n  /**\n   * Gets a field's label or all field labels reactively.\n   *\n   * @param {String} [key] The schema key, specific or generic.\n   *   Omit this argument to get a dictionary of all labels.\n   * @returns {String} The label\n   */\n  label(key) {\n    // Get all labels\n    if (key === null || key === undefined) {\n      const result = {};\n      this._schemaKeys.forEach((schemaKey) => {\n        result[schemaKey] = this.label(schemaKey);\n      });\n      return result;\n    }\n\n    // Get label for one field\n    const label = this.get(key, 'label');\n    if (label) this.reactiveLabelDependency(key);\n    return label || null;\n  }\n\n  /**\n   * Gets a field's property\n   *\n   * @param {String} key The schema key, specific or generic.\n   * @param {String} prop Name of the property to get for that schema key\n   * @param {Object} [functionContext] The `this` context to use if prop is a function\n   * @returns {any} The property value\n   */\n  get(key, prop, functionContext) {\n    const def = this.getDefinition(key, ['type', prop], functionContext);\n\n    if (!def) return undefined;\n\n    if (schemaDefinitionOptions.includes(prop)) {\n      return def[prop];\n    }\n\n    return (def.type.find((props) => props[prop]) || {})[prop];\n  }\n\n  // shorthand for getting defaultValue\n  defaultValue(key) {\n    return this.get(key, 'defaultValue');\n  }\n\n  // Returns a string message for the given error type and key. Passes through\n  // to message-box pkg.\n  messageForError(errorInfo) {\n    const { name } = errorInfo;\n\n    return this.messageBox.message(errorInfo, {\n      context: {\n        key: name, // backward compatibility\n\n        // The call to this.label() establishes a reactive dependency, too\n        label: this.label(name),\n      },\n    });\n  }\n\n  /**\n   * @method SimpleSchema#pick\n   * @param {[fields]} The list of fields to pick to instantiate the subschema\n   * @returns {SimpleSchema} The subschema\n   */\n  pick = getPickOrOmit('pick');\n\n  /**\n   * @method SimpleSchema#omit\n   * @param {[fields]} The list of fields to omit to instantiate the subschema\n   * @returns {SimpleSchema} The subschema\n   */\n  omit = getPickOrOmit('omit');\n\n  static version = 2;\n\n  // If you need to allow properties other than those listed above, call this from your app or package\n  static extendOptions(options) {\n    // For backwards compatibility we still take an object here, but we only care about the names\n    if (!Array.isArray(options)) options = Object.keys(options);\n    options.forEach((option) => {\n      schemaDefinitionOptions.push(option);\n    });\n  }\n\n  static defineValidationErrorTransform(transform) {\n    if (typeof transform !== 'function') {\n      throw new Error('SimpleSchema.defineValidationErrorTransform must be passed a function that accepts an Error and returns an Error');\n    }\n    SimpleSchema.validationErrorTransform = transform;\n  }\n\n  static validate(obj, schema, options) {\n    // Allow passing just the schema object\n    if (!(SimpleSchema.isSimpleSchema(schema))) {\n      schema = new SimpleSchema(schema);\n    }\n\n    return schema.validate(obj, options);\n  }\n\n  static oneOf(...definitions) {\n    return new SimpleSchemaGroup(...definitions);\n  }\n\n  static Any = '___Any___';\n\n  static RegEx = regExpObj;\n\n  // Global custom validators\n  static _validators = [];\n\n  static addValidator(func) {\n    SimpleSchema._validators.push(func);\n  }\n\n  static _docValidators = [];\n\n  static addDocValidator(func) {\n    SimpleSchema._docValidators.push(func);\n  }\n\n  // Global constructor options\n  static _constructorOptionDefaults = {\n    clean: {\n      autoConvert: true,\n      extendAutoValueContext: {},\n      filter: true,\n      getAutoValues: true,\n      removeEmptyStrings: true,\n      removeNullsFromArrays: false,\n      trimStrings: true,\n    },\n    humanizeAutoLabels: true,\n    requiredByDefault: true,\n  };\n\n  /**\n   * @summary Get/set default values for SimpleSchema constructor options\n   */\n  static constructorOptionDefaults(options) {\n    if (!options) return SimpleSchema._constructorOptionDefaults;\n\n    SimpleSchema._constructorOptionDefaults = {\n      ...SimpleSchema._constructorOptionDefaults,\n      ...options,\n      clean: {\n        ...SimpleSchema._constructorOptionDefaults.clean,\n        ...(options.clean || {}),\n      },\n    };\n  }\n\n  static ErrorTypes = {\n    REQUIRED: 'required',\n    MIN_STRING: 'minString',\n    MAX_STRING: 'maxString',\n    MIN_NUMBER: 'minNumber',\n    MAX_NUMBER: 'maxNumber',\n    MIN_NUMBER_EXCLUSIVE: 'minNumberExclusive',\n    MAX_NUMBER_EXCLUSIVE: 'maxNumberExclusive',\n    MIN_DATE: 'minDate',\n    MAX_DATE: 'maxDate',\n    BAD_DATE: 'badDate',\n    MIN_COUNT: 'minCount',\n    MAX_COUNT: 'maxCount',\n    MUST_BE_INTEGER: 'noDecimal',\n    VALUE_NOT_ALLOWED: 'notAllowed',\n    EXPECTED_TYPE: 'expectedType',\n    FAILED_REGULAR_EXPRESSION: 'regEx',\n    KEY_NOT_IN_SCHEMA: 'keyNotInSchema',\n  };\n\n  static Integer = 'SimpleSchema.Integer';\n\n  // Backwards compatibility\n  static _makeGeneric = MongoObject.makeKeyGeneric;\n\n  static ValidationContext = ValidationContext;\n\n  static setDefaultMessages = (messages) => {\n    merge(defaultMessages, messages);\n  };\n}\n\n/*\n * PRIVATE\n */\n\n// Throws an error if any fields are `type` SimpleSchema but then also\n// have subfields defined outside of that.\nfunction checkSchemaOverlap(schema) {\n  Object.keys(schema).forEach((key) => {\n    const val = schema[key];\n    if (!val.type) throw new Error(`${key} key is missing \"type\"`);\n    val.type.definitions.forEach((def) => {\n      if (!(SimpleSchema.isSimpleSchema(def.type))) return;\n\n      Object.keys(def.type._schema).forEach((subKey) => {\n        const newKey = `${key}.${subKey}`;\n        if (Object.prototype.hasOwnProperty.call(schema, newKey)) {\n          throw new Error(`The type for \"${key}\" is set to a SimpleSchema instance that defines \"${key}.${subKey}\", but the parent SimpleSchema instance also tries to define \"${key}.${subKey}\"`);\n        }\n      });\n    });\n  });\n}\n\n/**\n * @param {String} fieldName The full generic schema key\n * @param {Boolean} shouldHumanize Humanize it\n * @returns {String} A label based on the key\n */\nfunction inflectedLabel(fieldName, shouldHumanize) {\n  const pieces = fieldName.split('.');\n  let label;\n  do {\n    label = pieces.pop();\n  } while (label === '$' && pieces.length);\n  return shouldHumanize ? humanize(label) : label;\n}\n\nfunction getDefaultAutoValueFunction(defaultValue) {\n  return function defaultAutoValueFunction() {\n    if (this.isSet) return;\n    if (this.operator === null) return defaultValue;\n\n    // Handle the case when pulling an object from an array the object contains a field\n    // which has a defaultValue. We don't want the default value to be returned in this case\n    if (this.operator === '$pull') return;\n\n    // Handle the case where we are $pushing an object into an array of objects and we\n    // want any fields missing from that object to be added if they have default values\n    if (this.operator === '$push') return defaultValue;\n\n    // If parent is set, we should update this position instead of $setOnInsert\n    if (this.parentField().isSet) return defaultValue;\n\n    // Make sure the default value is added on upsert insert\n    if (this.isUpsert) return { $setOnInsert: defaultValue };\n  };\n}\n\n// Mutates def into standardized object with SimpleSchemaGroup type\nfunction standardizeDefinition(def) {\n  const standardizedDef = Object.keys(def).reduce((newDef, prop) => {\n    if (!oneOfProps.includes(prop)) {\n      newDef[prop] = def[prop];\n    }\n    return newDef;\n  }, {});\n\n  // Internally, all definition types are stored as groups for simplicity of access.\n  // If we are extending, there may not actually be def.type, but it's okay because\n  // it will be added later when the two SimpleSchemaGroups are merged.\n  if (def.type && def.type instanceof SimpleSchemaGroup) {\n    standardizedDef.type = def.type.clone();\n  } else {\n    const groupProps = Object.keys(def).reduce((newDef, prop) => {\n      if (oneOfProps.includes(prop)) {\n        newDef[prop] = def[prop];\n      }\n      return newDef;\n    }, {});\n    standardizedDef.type = new SimpleSchemaGroup(groupProps);\n  }\n\n  return standardizedDef;\n}\n\n/**\n * @summary Checks and mutates definition. Clone it first.\n *   Throws errors if any problems are found.\n * @param {String} fieldName Name of field / key\n * @param {Object} definition Field definition\n * @param {Object} options Options\n * @param {Set} allKeys Set of all field names / keys in entire schema\n * @return {undefined} Void\n */\nfunction checkAndScrubDefinition(fieldName, definition, options, allKeys) {\n  if (!definition.type) throw new Error(`${fieldName} key is missing \"type\"`);\n\n  // Validate the field definition\n  Object.keys(definition).forEach((key) => {\n    if (schemaDefinitionOptions.indexOf(key) === -1) {\n      throw new Error(`Invalid definition for ${fieldName} field: \"${key}\" is not a supported property`);\n    }\n  });\n\n  // Make sure the `type`s are OK\n  let couldBeArray = false;\n  definition.type.definitions.forEach(({ type }) => {\n    if (!type) throw new Error(`Invalid definition for ${fieldName} field: \"type\" option is required`);\n\n    if (Array.isArray(type)) {\n      throw new Error(`Invalid definition for ${fieldName} field: \"type\" may not be an array. Change it to Array.`);\n    }\n\n    if (type.constructor === Object && isEmptyObject(type)) {\n      throw new Error(`Invalid definition for ${fieldName} field: \"type\" may not be an object. Change it to Object`);\n    }\n\n    if (type === Array) couldBeArray = true;\n\n    if (SimpleSchema.isSimpleSchema(type)) {\n      Object.keys(type._schema).forEach((subKey) => {\n        const newKey = `${fieldName}.${subKey}`;\n        if (allKeys.has(newKey)) {\n          throw new Error(`The type for \"${fieldName}\" is set to a SimpleSchema instance that defines \"${newKey}\", but the parent SimpleSchema instance also tries to define \"${newKey}\"`);\n        }\n      });\n    }\n  });\n\n  // If at least one of the possible types is Array, then make sure we have a\n  // definition for the array items, too.\n  if (couldBeArray && !allKeys.has(`${fieldName}.$`)) {\n    throw new Error(`\"${fieldName}\" is Array type but the schema does not include a \"${fieldName}.$\" definition for the array items\"`);\n  }\n\n  // defaultValue -> autoValue\n  // We support defaultValue shortcut by converting it immediately into an\n  // autoValue.\n\n  if ('defaultValue' in definition) {\n    if ('autoValue' in definition && !definition.autoValue.isDefault) {\n      console.warn(`SimpleSchema: Found both autoValue and defaultValue options for \"${fieldName}\". Ignoring defaultValue.`);\n    } else {\n      if (fieldName.endsWith('.$')) {\n        throw new Error('An array item field (one that ends with \".$\") cannot have defaultValue.');\n      }\n      definition.autoValue = getDefaultAutoValueFunction(definition.defaultValue);\n      definition.autoValue.isDefault = true;\n    }\n  }\n\n  // REQUIREDNESS\n  if (fieldName.endsWith('.$')) {\n    definition.optional = true;\n  } else if (!Object.prototype.hasOwnProperty.call(definition, 'optional')) {\n    if (Object.prototype.hasOwnProperty.call(definition, 'required')) {\n      if (typeof definition.required === 'function') {\n        // Save a reference to the `required` fn because\n        // we are going to delete it from `definition` below\n        const requiredFn = definition.required;\n        definition.optional = function optional(...args) {\n          return !requiredFn.apply(this, args);\n        };\n      } else {\n        definition.optional = !definition.required;\n      }\n    } else {\n      definition.optional = (options.requiredByDefault === false);\n    }\n  }\n\n  delete definition.required;\n\n  // LABELS\n  if (!Object.prototype.hasOwnProperty.call(definition, 'label')) {\n    if (options.defaultLabel) {\n      definition.label = options.defaultLabel;\n    } else if (SimpleSchema.defaultLabel) {\n      definition.label = SimpleSchema.defaultLabel;\n    } else {\n      definition.label = inflectedLabel(fieldName, options.humanizeAutoLabels);\n    }\n  }\n}\n\nfunction getPickOrOmit(type) {\n  return function pickOrOmit(...args) {\n    // If they are picking/omitting an object or array field, we need to also include everything under it\n    const newSchema = {};\n    this._schemaKeys.forEach((key) => {\n      // Pick/omit it if it IS in the array of keys they want OR if it\n      // STARTS WITH something that is in the array plus a period\n      const includeIt = args.some((wantedField) => key === wantedField || key.indexOf(`${wantedField}.`) === 0);\n\n      if ((includeIt && type === 'pick') || (!includeIt && type === 'omit')) {\n        newSchema[key] = this._schema[key];\n      }\n    });\n\n    return this._copyWithSchema(newSchema);\n  };\n}\n\nexport { SimpleSchema, ValidationContext };\n","import MongoObject from 'mongo-object';\n\nclass SimpleSchemaGroup {\n  constructor(...definitions) {\n    this.definitions = definitions.map((definition) => {\n      if (MongoObject.isBasicObject(definition)) {\n        return { ...definition };\n      }\n\n      if (definition instanceof RegExp) {\n        return {\n          type: String,\n          regEx: definition,\n        };\n      }\n\n      return { type: definition };\n    });\n  }\n\n  get singleType() {\n    return this.definitions[0].type;\n  }\n\n  clone() {\n    return new SimpleSchemaGroup(...this.definitions);\n  }\n\n  extend(otherGroup) {\n    // We extend based on index being the same. No better way I can think of at the moment.\n    this.definitions = this.definitions.map((def, index) => {\n      const otherDef = otherGroup.definitions[index];\n      if (!otherDef) return def;\n      return { ...def, ...otherDef };\n    });\n  }\n}\n\nexport default SimpleSchemaGroup;\n","import MongoObject from 'mongo-object';\nimport doValidation from './doValidation';\n\nexport default class ValidationContext {\n  /**\n   * @param {SimpleSchema} ss SimpleSchema instance to use for validation\n   * @param {String} [name] Optional context name, accessible on context.name.\n   */\n  constructor(ss, name) {\n    this.name = name;\n    this._simpleSchema = ss;\n    this._schema = ss.schema();\n    this._schemaKeys = Object.keys(this._schema);\n    this._validationErrors = [];\n\n    // Set up validation dependencies\n    this._deps = {};\n    const { tracker } = ss._constructorOptions;\n    if (tracker) {\n      this._depsAny = new tracker.Dependency();\n      this._schemaKeys.forEach((key) => {\n        this._deps[key] = new tracker.Dependency();\n      });\n    }\n  }\n\n  _markKeyChanged(key) {\n    const genericKey = MongoObject.makeKeyGeneric(key);\n    if (Object.prototype.hasOwnProperty.call(this._deps, genericKey)) this._deps[genericKey].changed();\n  }\n\n  _markKeysChanged(keys) {\n    if (!keys || !Array.isArray(keys) || !keys.length) return;\n\n    keys.forEach((key) => this._markKeyChanged(key));\n\n    this._depsAny && this._depsAny.changed();\n  }\n\n  setValidationErrors(errors) {\n    const previousValidationErrors = this._validationErrors.map((o) => o.name);\n    const newValidationErrors = errors.map((o) => o.name);\n\n    this._validationErrors = errors;\n\n    // Mark all previous plus all new as changed\n    const changedKeys = previousValidationErrors.concat(newValidationErrors);\n    this._markKeysChanged(changedKeys);\n  }\n\n  addValidationErrors(errors) {\n    const newValidationErrors = errors.map((o) => o.name);\n\n    errors.forEach((error) => this._validationErrors.push(error));\n\n    // Mark all new as changed\n    this._markKeysChanged(newValidationErrors);\n  }\n\n  // Reset the validationErrors array\n  reset() {\n    this.setValidationErrors([]);\n  }\n\n  getErrorForKey(key, genericKey = MongoObject.makeKeyGeneric(key)) {\n    const errors = this._validationErrors;\n    const errorForKey = errors.find((error) => error.name === key);\n    if (errorForKey) return errorForKey;\n\n    return errors.find((error) => error.name === genericKey);\n  }\n\n  _keyIsInvalid(key, genericKey) {\n    return !!this.getErrorForKey(key, genericKey);\n  }\n\n  // Like the internal one, but with deps\n  keyIsInvalid(key, genericKey = MongoObject.makeKeyGeneric(key)) {\n    if (Object.prototype.hasOwnProperty.call(this._deps, genericKey)) this._deps[genericKey].depend();\n\n    return this._keyIsInvalid(key, genericKey);\n  }\n\n  keyErrorMessage(key, genericKey = MongoObject.makeKeyGeneric(key)) {\n    if (Object.prototype.hasOwnProperty.call(this._deps, genericKey)) this._deps[genericKey].depend();\n\n    const errorObj = this.getErrorForKey(key, genericKey);\n    if (!errorObj) return '';\n\n    return this._simpleSchema.messageForError(errorObj);\n  }\n\n  /**\n   * Validates the object against the simple schema and sets a reactive array of error objects\n   */\n  validate(obj, {\n    extendedCustomContext = {},\n    ignore: ignoreTypes = [],\n    keys: keysToValidate,\n    modifier: isModifier = false,\n    mongoObject,\n    upsert: isUpsert = false,\n  } = {}) {\n    const validationErrors = doValidation({\n      extendedCustomContext,\n      ignoreTypes,\n      isModifier,\n      isUpsert,\n      keysToValidate,\n      mongoObject,\n      obj,\n      schema: this._simpleSchema,\n      validationContext: this,\n    });\n\n    if (keysToValidate) {\n      // We have only revalidated the listed keys, so if there\n      // are any other existing errors that are NOT in the keys list,\n      // we should keep these errors.\n      /* eslint-disable no-restricted-syntax */\n      for (const error of this._validationErrors) {\n        const wasValidated = keysToValidate.some((key) => key === error.name || error.name.startsWith(`${key}.`));\n        if (!wasValidated) validationErrors.push(error);\n      }\n      /* eslint-enable no-restricted-syntax */\n    }\n\n    this.setValidationErrors(validationErrors);\n\n    // Return true if it was valid; otherwise, return false\n    return !validationErrors.length;\n  }\n\n  isValid() {\n    this._depsAny && this._depsAny.depend();\n    return this._validationErrors.length === 0;\n  }\n\n  validationErrors() {\n    this._depsAny && this._depsAny.depend();\n    return this._validationErrors;\n  }\n\n  clean(...args) {\n    return this._simpleSchema.clean(...args);\n  }\n}\n","import clone from 'clone';\nimport MongoObject from 'mongo-object';\nimport { isEmptyObject, looksLikeModifier } from './utility';\nimport { SimpleSchema } from './SimpleSchema';\nimport convertToProperType from './clean/convertToProperType';\nimport setAutoValues from './clean/setAutoValues';\nimport typeValidator from './validation/typeValidator';\n\nconst operatorsToIgnoreValue = ['$unset', '$currentDate'];\n\n/**\n * @param {SimpleSchema} ss - A SimpleSchema instance\n * @param {Object} doc - Document or modifier to clean. Referenced object will be modified in place.\n * @param {Object} [options]\n * @param {Boolean} [options.mutate=false] - Mutate doc. Set this to true to improve performance if you don't mind mutating the object you're cleaning.\n * @param {Boolean} [options.filter=true] - Do filtering?\n * @param {Boolean} [options.autoConvert=true] - Do automatic type converting?\n * @param {Boolean} [options.removeEmptyStrings=true] - Remove keys in normal object or $set where the value is an empty string?\n * @param {Boolean} [options.removeNullsFromArrays=false] - Remove all null items from all arrays\n * @param {Boolean} [options.trimStrings=true] - Trim string values?\n * @param {Boolean} [options.getAutoValues=true] - Inject automatic and default values?\n * @param {Boolean} [options.isModifier=false] - Is doc a modifier object?\n * @param {Boolean} [options.isUpsert=false] - Will the modifier object be used to do an upsert? This is used\n *   to determine whether $setOnInsert should be added to it for defaultValues.\n * @param {Boolean} [options.mongoObject] - If you already have the mongoObject instance, pass it to improve performance\n * @param {Object} [options.extendAutoValueContext] - This object will be added to the `this` context of autoValue functions.\n * @returns {Object} The modified doc.\n *\n * Cleans a document or modifier object. By default, will filter, automatically\n * type convert where possible, and inject automatic/default values. Use the options\n * to skip one or more of these.\n */\nfunction clean(ss, doc, options = {}) {\n  // By default, doc will be filtered and autoconverted\n  options = {\n    isModifier: looksLikeModifier(doc),\n    isUpsert: false,\n    ...ss._cleanOptions,\n    ...options,\n  };\n\n  // Clone so we do not mutate\n  const cleanDoc = options.mutate ? doc : clone(doc);\n\n  const mongoObject = options.mongoObject || new MongoObject(cleanDoc, ss.blackboxKeys());\n\n  // Clean loop\n  if (\n    options.filter\n    || options.autoConvert\n    || options.removeEmptyStrings\n    || options.trimStrings\n  ) {\n    const removedPositions = []; // For removing now-empty objects after\n\n    mongoObject.forEachNode(\n      function eachNode() {\n        // The value of a $unset is irrelevant, so no point in cleaning it.\n        // Also we do not care if fields not in the schema are unset.\n        // Other operators also have values that we wouldn't want to clean.\n        if (operatorsToIgnoreValue.includes(this.operator)) return;\n\n        const gKey = this.genericKey;\n        if (!gKey) return;\n\n        let val = this.value;\n        if (val === undefined) return;\n\n        let p;\n\n        // Filter out props if necessary\n        if (\n          (options.filter && !ss.allowsKey(gKey))\n          || (options.removeNullsFromArrays && this.isArrayItem && val === null)\n        ) {\n          // XXX Special handling for $each; maybe this could be made nicer\n          if (this.position.slice(-7) === '[$each]') {\n            mongoObject.removeValueForPosition(this.position.slice(0, -7));\n            removedPositions.push(this.position.slice(0, -7));\n          } else {\n            this.remove();\n            removedPositions.push(this.position);\n          }\n          if (SimpleSchema.debug) {\n            console.info(\n              `SimpleSchema.clean: filtered out value that would have affected key \"${gKey}\", which is not allowed by the schema`,\n            );\n          }\n          return; // no reason to do more\n        }\n\n        const outerDef = ss.schema(gKey);\n        const defs = outerDef && outerDef.type.definitions;\n        const def = defs && defs[0];\n\n        // Autoconvert values if requested and if possible\n        if (options.autoConvert && def) {\n          const isValidType = defs.some((definition) => {\n            const errors = typeValidator.call({\n              valueShouldBeChecked: true,\n              definition,\n              value: val,\n            });\n            return errors === undefined;\n          });\n\n          if (!isValidType) {\n            const newVal = convertToProperType(val, def.type);\n            if (newVal !== undefined && newVal !== val) {\n              SimpleSchema.debug\n                && console.info(\n                  `SimpleSchema.clean: autoconverted value ${val} from ${typeof val} to ${typeof newVal} for ${gKey}`,\n                );\n              val = newVal;\n              this.updateValue(newVal);\n            }\n          }\n        }\n\n        // Trim strings if\n        // 1. The trimStrings option is `true` AND\n        // 2. The field is not in the schema OR is in the schema with `trim` !== `false` AND\n        // 3. The value is a string.\n        if (\n          options.trimStrings\n          && (!def || def.trim !== false)\n          && typeof val === 'string'\n        ) {\n          val = val.trim();\n          this.updateValue(val);\n        }\n\n        // Remove empty strings if\n        // 1. The removeEmptyStrings option is `true` AND\n        // 2. The value is in a normal object or in the $set part of a modifier\n        // 3. The value is an empty string.\n        if (\n          options.removeEmptyStrings\n          && (!this.operator || this.operator === '$set')\n          && typeof val === 'string'\n          && !val.length\n        ) {\n          // For a document, we remove any fields that are being set to an empty string\n          this.remove();\n          // For a modifier, we $unset any fields that are being set to an empty string.\n          // But only if we're not already within an entire object that is being set.\n          if (\n            this.operator === '$set'\n            && this.position.match(/\\[/g).length < 2\n          ) {\n            p = this.position.replace('$set', '$unset');\n            mongoObject.setValueForPosition(p, '');\n          }\n        }\n      },\n      { endPointsOnly: false },\n    );\n\n    // Remove any objects that are now empty after filtering\n    removedPositions.forEach((removedPosition) => {\n      const lastBrace = removedPosition.lastIndexOf('[');\n      if (lastBrace !== -1) {\n        const removedPositionParent = removedPosition.slice(0, lastBrace);\n        const value = mongoObject.getValueForPosition(removedPositionParent);\n        if (isEmptyObject(value)) mongoObject.removeValueForPosition(removedPositionParent);\n      }\n    });\n\n    mongoObject.removeArrayItems();\n  }\n\n  // Set automatic values\n  options.getAutoValues\n    && setAutoValues(\n      ss.autoValueFunctions(),\n      mongoObject,\n      options.isModifier,\n      options.isUpsert,\n      options.extendAutoValueContext,\n    );\n\n  // Ensure we don't have any operators set to an empty object\n  // since MongoDB 2.6+ will throw errors.\n  if (options.isModifier) {\n    Object.keys(cleanDoc || {}).forEach((op) => {\n      const operatorValue = cleanDoc[op];\n      if (\n        typeof operatorValue === 'object'\n        && operatorValue !== null\n        && isEmptyObject(operatorValue)\n      ) {\n        delete cleanDoc[op];\n      }\n    });\n  }\n\n  return cleanDoc;\n}\n\nexport default clean;\n","import regExpObj from './regExp';\n\nconst regExpMessages = [\n  { exp: regExpObj.Email, msg: 'must be a valid email address' },\n  { exp: regExpObj.EmailWithTLD, msg: 'must be a valid email address' },\n  { exp: regExpObj.Domain, msg: 'must be a valid domain' },\n  { exp: regExpObj.WeakDomain, msg: 'must be a valid domain' },\n  { exp: regExpObj.IP, msg: 'must be a valid IPv4 or IPv6 address' },\n  { exp: regExpObj.IPv4, msg: 'must be a valid IPv4 address' },\n  { exp: regExpObj.IPv6, msg: 'must be a valid IPv6 address' },\n  { exp: regExpObj.Url, msg: 'must be a valid URL' },\n  { exp: regExpObj.Id, msg: 'must be a valid alphanumeric ID' },\n  { exp: regExpObj.ZipCode, msg: 'must be a valid ZIP code' },\n  { exp: regExpObj.Phone, msg: 'must be a valid phone number' },\n];\n\nconst defaultMessages = {\n  initialLanguage: 'en',\n  messages: {\n    en: {\n      required: '{{{label}}} is required',\n      minString: '{{{label}}} must be at least {{min}} characters',\n      maxString: '{{{label}}} cannot exceed {{max}} characters',\n      minNumber: '{{{label}}} must be at least {{min}}',\n      maxNumber: '{{{label}}} cannot exceed {{max}}',\n      minNumberExclusive: '{{{label}}} must be greater than {{min}}',\n      maxNumberExclusive: '{{{label}}} must be less than {{max}}',\n      minDate: '{{{label}}} must be on or after {{min}}',\n      maxDate: '{{{label}}} cannot be after {{max}}',\n      badDate: '{{{label}}} is not a valid date',\n      minCount: 'You must specify at least {{minCount}} values',\n      maxCount: 'You cannot specify more than {{maxCount}} values',\n      noDecimal: '{{{label}}} must be an integer',\n      notAllowed: '{{{value}}} is not an allowed value',\n      expectedType: '{{{label}}} must be of type {{dataType}}',\n      regEx({\n        label,\n        regExp,\n      }) {\n        // See if there's one where exp matches this expression\n        let msgObj;\n        if (regExp) {\n          msgObj = regExpMessages.find((o) => o.exp && o.exp.toString() === regExp);\n        }\n\n        const regExpMessage = msgObj ? msgObj.msg : 'failed regular expression validation';\n\n        return `${label} ${regExpMessage}`;\n      },\n      keyNotInSchema: '{{name}} is not allowed by the schema',\n    },\n  },\n};\n\nexport default defaultMessages;\n","import MongoObject from 'mongo-object';\nimport { SimpleSchema } from './SimpleSchema';\nimport {\n  appendAffectedKey,\n  getParentOfKey,\n  looksLikeModifier,\n  isObjectWeShouldTraverse,\n} from './utility';\nimport typeValidator from './validation/typeValidator';\nimport requiredValidator from './validation/requiredValidator';\nimport allowedValuesValidator from './validation/allowedValuesValidator';\n\nfunction shouldCheck(key) {\n  if (key === '$pushAll') throw new Error('$pushAll is not supported; use $push + $each');\n  return ['$pull', '$pullAll', '$pop', '$slice'].indexOf(key) === -1;\n}\n\nfunction doValidation({\n  extendedCustomContext,\n  ignoreTypes,\n  isModifier,\n  isUpsert,\n  keysToValidate,\n  mongoObject,\n  obj,\n  schema,\n  validationContext,\n}) {\n  // First do some basic checks of the object, and throw errors if necessary\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new Error('The first argument of validate() must be an object');\n  }\n\n  if (!isModifier && looksLikeModifier(obj)) {\n    throw new Error('When the validation object contains mongo operators, you must set the modifier option to true');\n  }\n\n  function getFieldInfo(key) {\n    // Create mongoObject if necessary, cache for speed\n    if (!mongoObject) mongoObject = new MongoObject(obj, schema.blackboxKeys());\n\n    const keyInfo = mongoObject.getInfoForKey(key) || {};\n    return {\n      isSet: (keyInfo.value !== undefined),\n      value: keyInfo.value,\n      operator: keyInfo.operator || null,\n    };\n  }\n\n  let validationErrors = [];\n\n  // Validation function called for each affected key\n  function validate(val, affectedKey, affectedKeyGeneric, def, op, isInArrayItemObject, isInSubObject) {\n    // Get the schema for this key, marking invalid if there isn't one.\n    if (!def) {\n      // We don't need KEY_NOT_IN_SCHEMA error for $unset and we also don't need to continue\n      if (op === '$unset' || (op === '$currentDate' && affectedKey.endsWith('.$type'))) return;\n\n      validationErrors.push({\n        name: affectedKey,\n        type: SimpleSchema.ErrorTypes.KEY_NOT_IN_SCHEMA,\n        value: val,\n      });\n      return;\n    }\n\n    // For $rename, make sure that the new name is allowed by the schema\n    if (op === '$rename' && !schema.allowsKey(val)) {\n      validationErrors.push({\n        name: val,\n        type: SimpleSchema.ErrorTypes.KEY_NOT_IN_SCHEMA,\n        value: null,\n      });\n      return;\n    }\n\n    // Prepare the context object for the validator functions\n    const fieldParentNameWithEndDot = getParentOfKey(affectedKey, true);\n    const fieldParentName = fieldParentNameWithEndDot.slice(0, -1);\n\n    const fieldValidationErrors = [];\n\n    const validatorContext = {\n      addValidationErrors(errors) {\n        errors.forEach((error) => fieldValidationErrors.push(error));\n      },\n      field(fName) {\n        return getFieldInfo(fName);\n      },\n      genericKey: affectedKeyGeneric,\n      isInArrayItemObject,\n      isInSubObject,\n      isModifier,\n      isSet: (val !== undefined),\n      key: affectedKey,\n      obj,\n      operator: op,\n      parentField() {\n        return getFieldInfo(fieldParentName);\n      },\n      siblingField(fName) {\n        return getFieldInfo(fieldParentNameWithEndDot + fName);\n      },\n      validationContext,\n      value: val,\n      // Value checks are not necessary for null or undefined values, except\n      // for non-optional null array items, or for $unset or $rename values\n      valueShouldBeChecked: (\n        op !== '$unset' && op !== '$rename'\n        && ((val !== undefined && val !== null) || (affectedKeyGeneric.slice(-2) === '.$' && val === null && !def.optional))\n      ),\n      ...(extendedCustomContext || {}),\n    };\n\n    const builtInValidators = [\n      requiredValidator,\n      typeValidator,\n      allowedValuesValidator,\n    ];\n    const validators = builtInValidators\n      .concat(schema._validators)\n      .concat(SimpleSchema._validators);\n\n    // Loop through each of the definitions in the SimpleSchemaGroup.\n    // If any return true, we're valid.\n    const fieldIsValid = def.type.some((typeDef) => {\n      // If the type is SimpleSchema.Any, then it is valid:\n      if (typeDef === SimpleSchema.Any) return true;\n\n      const { type, ...definitionWithoutType } = def; // eslint-disable-line no-unused-vars\n\n      const finalValidatorContext = {\n        ...validatorContext,\n\n        // Take outer definition props like \"optional\" and \"label\"\n        // and add them to inner props like \"type\" and \"min\"\n        definition: {\n          ...definitionWithoutType,\n          ...typeDef,\n        },\n      };\n\n      // Add custom field validators to the list after the built-in\n      // validators but before the schema and global validators.\n      const fieldValidators = validators.slice(0);\n      if (typeof typeDef.custom === 'function') {\n        fieldValidators.splice(builtInValidators.length, 0, typeDef.custom);\n      }\n\n      // We use _.every just so that we don't continue running more validator\n      // functions after the first one returns false or an error string.\n      return fieldValidators.every((validator) => {\n        const result = validator.call(finalValidatorContext);\n\n        // If the validator returns a string, assume it is the\n        // error type.\n        if (typeof result === 'string') {\n          fieldValidationErrors.push({\n            name: affectedKey,\n            type: result,\n            value: val,\n          });\n          return false;\n        }\n\n        // If the validator returns an object, assume it is an\n        // error object.\n        if (typeof result === 'object' && result !== null) {\n          fieldValidationErrors.push({\n            name: affectedKey,\n            value: val,\n            ...result,\n          });\n          return false;\n        }\n\n        // If the validator returns false, assume they already\n        // called this.addValidationErrors within the function\n        if (result === false) return false;\n\n        // Any other return value we assume means it was valid\n        return true;\n      });\n    });\n\n    if (!fieldIsValid) {\n      validationErrors = validationErrors.concat(fieldValidationErrors);\n    }\n  }\n\n  // The recursive function\n  function checkObj({\n    val,\n    affectedKey,\n    operator,\n    isInArrayItemObject = false,\n    isInSubObject = false,\n  }) {\n    let affectedKeyGeneric;\n    let def;\n\n    if (affectedKey) {\n      // When we hit a blackbox key, we don't progress any further\n      if (schema.keyIsInBlackBox(affectedKey)) return;\n\n      // Make a generic version of the affected key, and use that\n      // to get the schema for this key.\n      affectedKeyGeneric = MongoObject.makeKeyGeneric(affectedKey);\n\n      const shouldValidateKey = !keysToValidate || keysToValidate.some((keyToValidate) => (\n        keyToValidate === affectedKey\n        || keyToValidate === affectedKeyGeneric\n        || affectedKey.startsWith(`${keyToValidate}.`)\n        || affectedKeyGeneric.startsWith(`${keyToValidate}.`)\n      ));\n\n      // Prepare the context object for the rule functions\n      const fieldParentNameWithEndDot = getParentOfKey(affectedKey, true);\n      const fieldParentName = fieldParentNameWithEndDot.slice(0, -1);\n\n      const functionsContext = {\n        field(fName) {\n          return getFieldInfo(fName);\n        },\n        genericKey: affectedKeyGeneric,\n        isInArrayItemObject,\n        isInSubObject,\n        isModifier,\n        isSet: (val !== undefined),\n        key: affectedKey,\n        obj,\n        operator,\n        parentField() {\n          return getFieldInfo(fieldParentName);\n        },\n        siblingField(fName) {\n          return getFieldInfo(fieldParentNameWithEndDot + fName);\n        },\n        validationContext,\n        value: val,\n        ...(extendedCustomContext || {}),\n      };\n\n      // Perform validation for this key\n      def = schema.getDefinition(affectedKey, null, functionsContext);\n      if (shouldValidateKey) {\n        validate(val, affectedKey, affectedKeyGeneric, def, operator, isInArrayItemObject, isInSubObject);\n      }\n    }\n\n    // If affectedKeyGeneric is undefined due to this being the first run of this\n    // function, objectKeys will return the top-level keys.\n    const childKeys = schema.objectKeys(affectedKeyGeneric);\n\n    // Temporarily convert missing objects to empty objects\n    // so that the looping code will be called and required\n    // descendent keys can be validated.\n    if ((val === undefined || val === null) && (!def || (!def.optional && childKeys && childKeys.length > 0))) {\n      val = {};\n    }\n\n    // Loop through arrays\n    if (Array.isArray(val)) {\n      val.forEach((v, i) => {\n        checkObj({\n          val: v,\n          affectedKey: `${affectedKey}.${i}`,\n          operator,\n        });\n      });\n    } else if (isObjectWeShouldTraverse(val) && (!def || !schema._blackboxKeys.has(affectedKey))) {\n      // Loop through object keys\n\n      // Get list of present keys\n      const presentKeys = Object.keys(val);\n\n      // If this object is within an array, make sure we check for\n      // required as if it's not a modifier\n      isInArrayItemObject = (affectedKeyGeneric && affectedKeyGeneric.slice(-2) === '.$');\n\n      const checkedKeys = [];\n\n      // Check all present keys plus all keys defined by the schema.\n      // This allows us to detect extra keys not allowed by the schema plus\n      // any missing required keys, and to run any custom functions for other keys.\n      /* eslint-disable no-restricted-syntax */\n      for (const key of [...presentKeys, ...childKeys]) {\n        // `childKeys` and `presentKeys` may contain the same keys, so make\n        // sure we run only once per unique key\n        if (checkedKeys.indexOf(key) !== -1) continue;\n        checkedKeys.push(key);\n\n        checkObj({\n          val: val[key],\n          affectedKey: appendAffectedKey(affectedKey, key),\n          operator,\n          isInArrayItemObject,\n          isInSubObject: true,\n        });\n      }\n      /* eslint-enable no-restricted-syntax */\n    }\n  }\n\n  function checkModifier(mod) {\n    // Loop through operators\n    Object.keys(mod).forEach((op) => {\n      const opObj = mod[op];\n      // If non-operators are mixed in, throw error\n      if (op.slice(0, 1) !== '$') {\n        throw new Error(`Expected '${op}' to be a modifier operator like '$set'`);\n      }\n      if (shouldCheck(op)) {\n        // For an upsert, missing props would not be set if an insert is performed,\n        // so we check them all with undefined value to force any 'required' checks to fail\n        if (isUpsert && (op === '$set' || op === '$setOnInsert')) {\n          const presentKeys = Object.keys(opObj);\n          schema.objectKeys().forEach((schemaKey) => {\n            if (!presentKeys.includes(schemaKey)) {\n              checkObj({\n                val: undefined,\n                affectedKey: schemaKey,\n                operator: op,\n              });\n            }\n          });\n        }\n        // Don't use forEach here because it will not properly handle an\n        // object that has a property named `length`\n        Object.keys(opObj).forEach((k) => {\n          let v = opObj[k];\n          if (op === '$push' || op === '$addToSet') {\n            if (typeof v === 'object' && '$each' in v) {\n              v = v.$each;\n            } else {\n              k = `${k}.0`;\n            }\n          }\n          checkObj({\n            val: v,\n            affectedKey: k,\n            operator: op,\n          });\n        });\n      }\n    });\n  }\n\n  // Kick off the validation\n  if (isModifier) {\n    checkModifier(obj);\n  } else {\n    checkObj({ val: obj });\n  }\n\n  // Custom whole-doc validators\n  const docValidators = schema._docValidators.concat(SimpleSchema._docValidators);\n  const docValidatorContext = {\n    ignoreTypes,\n    isModifier,\n    isUpsert,\n    keysToValidate,\n    mongoObject,\n    obj,\n    schema,\n    validationContext,\n    ...(extendedCustomContext || {}),\n  };\n  docValidators.forEach((func) => {\n    const errors = func.call(docValidatorContext, obj);\n    if (!Array.isArray(errors)) throw new Error('Custom doc validator must return an array of error objects');\n    if (errors.length) validationErrors = validationErrors.concat(errors);\n  });\n\n  const addedFieldNames = [];\n  validationErrors = validationErrors.filter((errObj) => {\n    // Remove error types the user doesn't care about\n    if (ignoreTypes.includes(errObj.type)) return false;\n    // Make sure there is only one error per fieldName\n    if (addedFieldNames.includes(errObj.name)) return false;\n\n    addedFieldNames.push(errObj.name);\n    return true;\n  });\n  return validationErrors;\n}\n\nexport default doValidation;\n","import MongoObject from 'mongo-object';\n\n/**\n * Clones a schema object, expanding shorthand as it does it.\n */\nfunction expandShorthand(schema) {\n  const schemaClone = {};\n\n  Object.keys(schema).forEach((key) => {\n    const definition = schema[key];\n    // CASE 1: Not shorthand. Just clone\n    if (MongoObject.isBasicObject(definition)) {\n      schemaClone[key] = { ...definition };\n      return;\n    }\n\n    // CASE 2: The definition is an array of some type\n    if (Array.isArray(definition)) {\n      if (Array.isArray(definition[0])) {\n        throw new Error(`Array shorthand may only be used to one level of depth (${key})`);\n      }\n      const type = definition[0];\n      schemaClone[key] = { type: Array };\n\n      // Also add the item key definition\n      const itemKey = `${key}.$`;\n      if (schema[itemKey]) {\n        throw new Error(`Array shorthand used for ${key} field but ${key}.$ key is already in the schema`);\n      }\n\n      if (type instanceof RegExp) {\n        schemaClone[itemKey] = { type: String, regEx: type };\n      } else {\n        schemaClone[itemKey] = { type };\n      }\n      return;\n    }\n\n    // CASE 3: The definition is a regular expression\n    if (definition instanceof RegExp) {\n      schemaClone[key] = {\n        type: String,\n        regEx: definition,\n      };\n      return;\n    }\n\n    // CASE 4: The definition is something, a type\n    schemaClone[key] = { type: definition };\n  });\n\n  return schemaClone;\n}\n\nexport default expandShorthand;\n","/*\n  Code source:\n    https://github.com/jxson/string-humanize\n    https://github.com/jxson/string-capitalize\n */\n\nfunction capitalize(text) {\n  text = text || '';\n  text = text.trim();\n\n  if (text[0]) {\n    text = text[0].toUpperCase() + text.substr(1).toLowerCase();\n  }\n\n  // Do \"ID\" instead of \"id\" or \"Id\"\n  text = text.replace(/\\bid\\b/g, 'ID');\n  text = text.replace(/\\bId\\b/g, 'ID');\n\n  return text;\n}\n\nfunction underscore(text) {\n  text = text || '';\n  text = text.toString(); // might be a number\n  text = text.trim();\n  text = text.replace(/([a-z\\d])([A-Z]+)/g, '$1_$2');\n  text = text.replace(/[-\\s]+/g, '_').toLowerCase();\n\n  return text;\n}\n\nfunction extname(text) {\n  const index = text.lastIndexOf('.');\n  const ext = text.substring(index, text.length);\n\n  return (index === -1) ? '' : ext;\n}\n\nfunction humanize(text) {\n  text = text || '';\n  text = text.toString(); // might be a number\n  text = text.trim();\n  text = text.replace(extname(text), '');\n  text = underscore(text);\n  text = text.replace(/[\\W_]+/g, ' ');\n\n  return capitalize(text);\n}\n\nexport default humanize;\n","// this domain regex matches all domains that have at least one .\n// sadly IPv4 Adresses will be caught too but technically those are valid domains\n// this expression is extracted from the original RFC 5322 mail expression\n// a modification enforces that the tld consists only of characters\nconst rxDomain = '(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z](?:[a-z-]*[a-z])?';\n// this domain regex matches everythign that could be a domain in intranet\n// that means \"localhost\" is a valid domain\nconst rxNameDomain = '(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?(?:\\\\.|$))+';\n// strict IPv4 expression which allows 0-255 per oktett\nconst rxIPv4 = '(?:(?:[0-1]?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])(?:\\\\.|$)){4}';\n// strict IPv6 expression which allows (and validates) all shortcuts\nconst rxIPv6 = '(?:(?:[\\\\dA-Fa-f]{1,4}(?::|$)){8}' // full adress\n  + '|(?=(?:[^:\\\\s]|:[^:\\\\s])*::(?:[^:\\\\s]|:[^:\\\\s])*$)' // or min/max one '::'\n  + '[\\\\dA-Fa-f]{0,4}(?:::?(?:[\\\\dA-Fa-f]{1,4}|$)){1,6})'; // and short adress\n// this allows domains (also localhost etc) and ip adresses\nconst rxWeakDomain = `(?:${[rxNameDomain, rxIPv4, rxIPv6].join('|')})`;\n// unique id from the random package also used by minimongo\n// min and max are used to set length boundaries\n// set both for explicit lower and upper bounds\n// set min as integer and max to null for explicit lower bound and arbitrary upper bound\n// set none for arbitrary length\n// set only min for fixed length\n// character list: https://github.com/meteor/meteor/blob/release/0.8.0/packages/random/random.js#L88\n// string length: https://github.com/meteor/meteor/blob/release/0.8.0/packages/random/random.js#L143\nconst isValidBound = (value, lower) => !value || (Number.isSafeInteger(value) && value > lower);\nconst idOfLength = (min, max) => {\n  if (!isValidBound(min, 0)) throw new Error(`Expected a non-negative safe integer, got ${min}`);\n  if (!isValidBound(max, min)) throw new Error(`Expected a non-negative safe integer greater than 1 and greater than min, got ${max}`);\n  let bounds;\n  if (min && max) bounds = `${min},${max}`;\n  else if (min && max === null) bounds = `${min},`;\n  else if (min && !max) bounds = `${min}`;\n  else if (!min && !max) bounds = '0,';\n  else throw new Error(`Unexpected state for min (${min}) and max (${max})`);\n  return new RegExp(`^[23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz]{${bounds}}$`);\n};\n\nconst regEx = {\n  // We use the RegExp suggested by W3C in http://www.w3.org/TR/html5/forms.html#valid-e-mail-address\n  // This is probably the same logic used by most browsers when type=email, which is our goal. It is\n  // a very permissive expression. Some apps may wish to be more strict and can write their own RegExp.\n  Email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n\n  // Like Email but requires the TLD (.com, etc)\n  EmailWithTLD: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n\n  Domain: new RegExp(`^${rxDomain}$`),\n  WeakDomain: new RegExp(`^${rxWeakDomain}$`),\n\n  IP: new RegExp(`^(?:${rxIPv4}|${rxIPv6})$`),\n  IPv4: new RegExp(`^${rxIPv4}$`),\n  IPv6: new RegExp(`^${rxIPv6}$`),\n  // URL RegEx from https://gist.github.com/dperini/729294\n  // DEPRECATED! Known 2nd degree polynomial ReDoS vulnerability.\n  // Use a custom validator such as this to validate URLs:\n  //   custom() {\n  //     if (!this.isSet) return;\n  //     try {\n  //       new URL(this.value);\n  //     } catch (err) {\n  //       return 'badUrl';\n  //     }\n  //   }\n  // eslint-disable-next-line redos/no-vulnerable\n  Url: /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i,\n  // default id is defined with exact 17 chars of length\n  Id: idOfLength(17),\n  idOfLength,\n  // allows for a 5 digit zip code followed by a whitespace or dash and then 4 more digits\n  // matches 11111 and 11111-1111 and 11111 1111\n  ZipCode: /^\\d{5}(?:[-\\s]\\d{4})?$/,\n  // taken from Google's libphonenumber library\n  // https://github.com/googlei18n/libphonenumber/blob/master/javascript/i18n/phonenumbers/phonenumberutil.js\n  // reference the VALID_PHONE_NUMBER_PATTERN key\n  // allows for common phone number symbols including + () and -\n  // DEPRECATED! Known 2nd degree polynomial ReDoS vulnerability.\n  // Instead, use a custom validation function, with a high quality\n  // phone number validation package that meets your needs.\n  // eslint-disable-next-line redos/no-vulnerable\n  Phone: /^[0-9０-９٠-٩۰-۹]{2}$|^[+＋]*(?:[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～*]*[0-9０-９٠-٩۰-۹]){3,}[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～*A-Za-z0-9０-９٠-٩۰-۹]*(?:;ext=([0-9０-９٠-٩۰-۹]{1,20})|[  \\t,]*(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|anexo)[:\\.．]?[  \\t,-]*([0-9０-９٠-٩۰-۹]{1,20})#?|[  \\t,]*(?:[xｘ#＃~～]|int|ｉｎｔ)[:\\.．]?[  \\t,-]*([0-9０-９٠-٩۰-۹]{1,9})#?|[- ]+([0-9０-９٠-٩۰-۹]{1,6})#|[  \\t]*(?:,{2}|;)[:\\.．]?[  \\t,-]*([0-9０-９٠-٩۰-۹]{1,15})#?|[  \\t]*(?:,)+[:\\.．]?[  \\t,-]*([0-9０-９٠-٩۰-۹]{1,9})#?)?$/i, // eslint-disable-line no-irregular-whitespace\n};\n\nexport default regEx;\n","import clone from 'clone';\nimport { getParentOfKey } from '../utility';\n\nfunction getFieldInfo(mongoObject, key) {\n  const keyInfo = mongoObject.getInfoForKey(key) || {};\n  return {\n    isSet: (keyInfo.value !== undefined),\n    value: keyInfo.value,\n    operator: keyInfo.operator || null,\n  };\n}\n\nexport default class AutoValueRunner {\n  constructor(options) {\n    this.options = options;\n    this.doneKeys = [];\n  }\n\n  runForPosition({\n    key: affectedKey,\n    operator,\n    position,\n    value,\n  }) {\n    const {\n      closestSubschemaFieldName,\n      extendedAutoValueContext,\n      func,\n      isModifier,\n      isUpsert,\n      mongoObject,\n    } = this.options;\n\n    // If already called for this key, skip it\n    if (this.doneKeys.includes(affectedKey)) return;\n\n    const fieldParentName = getParentOfKey(affectedKey, true);\n    const parentFieldInfo = getFieldInfo(mongoObject, fieldParentName.slice(0, -1));\n\n    let doUnset = false;\n\n    if (Array.isArray(parentFieldInfo.value)) {\n      if (isNaN(affectedKey.split('.').slice(-1).pop())) {\n        // parent is an array, but the key to be set is not an integer (see issue #80)\n        return;\n      }\n    }\n\n    const autoValue = func.call({\n      closestSubschemaFieldName: closestSubschemaFieldName.length ? closestSubschemaFieldName : null,\n      field(fName) {\n        return getFieldInfo(mongoObject, closestSubschemaFieldName + fName);\n      },\n      isModifier,\n      isUpsert,\n      isSet: (value !== undefined),\n      key: affectedKey,\n      operator,\n      parentField() {\n        return parentFieldInfo;\n      },\n      siblingField(fName) {\n        return getFieldInfo(mongoObject, fieldParentName + fName);\n      },\n      unset() {\n        doUnset = true;\n      },\n      value,\n      ...(extendedAutoValueContext || {}),\n    }, mongoObject.getObject());\n\n    // Update tracking of which keys we've run autovalue for\n    this.doneKeys.push(affectedKey);\n\n    if (doUnset && position) mongoObject.removeValueForPosition(position);\n\n    if (autoValue === undefined) return;\n\n    // If the user's auto value is of the pseudo-modifier format, parse it\n    // into operator and value.\n    if (isModifier) {\n      let op;\n      let newValue;\n      if (autoValue && typeof autoValue === 'object') {\n        const avOperator = Object.keys(autoValue).find((avProp) => avProp.substring(0, 1) === '$');\n        if (avOperator) {\n          op = avOperator;\n          newValue = autoValue[avOperator];\n        }\n      }\n\n      // Add $set for updates and upserts if necessary. Keep this\n      // above the \"if (op)\" block below since we might change op\n      // in this line.\n      if (!op && position.slice(0, 1) !== '$') {\n        op = '$set';\n        newValue = autoValue;\n      }\n\n      if (op) {\n        // Update/change value\n        mongoObject.removeValueForPosition(position);\n        mongoObject.setValueForPosition(`${op}[${affectedKey}]`, clone(newValue));\n        return;\n      }\n    }\n\n    // Update/change value. Cloning is necessary in case it's an object, because\n    // if we later set some keys within it, they'd be set on the original object, too.\n    mongoObject.setValueForPosition(position, clone(autoValue));\n  }\n}\n","import { SimpleSchema } from '../SimpleSchema';\n\n/**\n * Converts value to proper type\n *\n * @param {Any} value Value to try to convert\n * @param {Any} type  A type\n * @returns {Any} Value converted to type.\n */\nfunction convertToProperType(value, type) {\n  // Can't and shouldn't convert arrays or objects or null\n  if (\n    Array.isArray(value)\n    || (value && (typeof value === 'function' || typeof value === 'object') && !(value instanceof Date))\n    || value === null\n  ) return value;\n\n  // Convert to String type\n  if (type === String) {\n    if (value === null || value === undefined) return value;\n    return value.toString();\n  }\n\n  // Convert to Number type\n  if (type === Number || type === SimpleSchema.Integer) {\n    if (typeof value === 'string' && value.length > 0) {\n      // Try to convert numeric strings to numbers\n      const numberVal = Number(value);\n      if (!isNaN(numberVal)) return numberVal;\n    }\n    // Leave it; will fail validation\n    return value;\n  }\n\n  // If target type is a Date we can safely convert from either a\n  // number (Integer value representing the number of milliseconds\n  // since 1 January 1970 00:00:00 UTC) or a string that can be parsed\n  // by Date.\n  if (type === Date) {\n    if (typeof value === 'string') {\n      const parsedDate = Date.parse(value);\n      if (isNaN(parsedDate) === false) return new Date(parsedDate);\n    }\n    if (typeof value === 'number') return new Date(value);\n  }\n\n  // Convert to Boolean type\n  if (type === Boolean) {\n    if (typeof value === 'string') {\n      // Convert exact string 'true' and 'false' to true and false respectively\n      if (value.toLowerCase() === 'true') return true;\n      if (value.toLowerCase() === 'false') return false;\n    } else if (typeof value === 'number' && !isNaN(value)) { // NaN can be error, so skipping it\n      return Boolean(value);\n    }\n  }\n\n  // If an array is what you want, I'll give you an array\n  if (type === Array) return [value];\n\n  // Could not convert\n  return value;\n}\n\nexport default convertToProperType;\n","import MongoObject from 'mongo-object';\nimport { getLastPartOfKey, getParentOfKey } from '../utility';\n\n/**\n * A position is a place in the object where this field exists.\n * If no arrays are involved, then every field/key has at most 1 position.\n * If arrays are involved, then a field could have potentially unlimited positions.\n *\n * For example, the key 'a.b.$.c` would have these positions:\n *   `a[b][0][c]`\n *   `a[b][1][c]`\n *   `a[b][2][c]`\n *\n * For this object:\n * {\n *   a: {\n *     b: [\n *       { c: 1 },\n *       { c: 1 },\n *       { c: 1 },\n *     ],\n *   },\n * }\n *\n * To make matters more complicated, we want to include not only the existing positions\n * but also the positions that might exist due to their parent object existing or their\n * parent object being auto-created by a MongoDB modifier that implies it.\n */\nexport default function getPositionsForAutoValue({ fieldName, isModifier, mongoObject }) {\n  // Positions for this field\n  const positions = mongoObject.getPositionsInfoForGenericKey(fieldName);\n\n  // If the field is an object and will be created by MongoDB,\n  // we don't need (and can't have) a value for it\n  if (isModifier && mongoObject.getPositionsThatCreateGenericKey(fieldName).length > 0) {\n    return positions;\n  }\n\n  // For simple top-level fields, just add an undefined would-be position\n  // if there isn't a real position.\n  if (fieldName.indexOf('.') === -1 && positions.length === 0) {\n    positions.push({\n      key: fieldName,\n      value: undefined,\n      operator: isModifier ? '$set' : null,\n      position: isModifier ? `$set[${fieldName}]` : fieldName,\n    });\n    return positions;\n  }\n\n  const parentPath = getParentOfKey(fieldName);\n  const lastPart = getLastPartOfKey(fieldName, parentPath);\n  const lastPartWithBraces = lastPart.replace(/\\./g, '][');\n  const parentPositions = mongoObject.getPositionsInfoForGenericKey(parentPath);\n\n  if (parentPositions.length) {\n    parentPositions.forEach((info) => {\n      const childPosition = `${info.position}[${lastPartWithBraces}]`;\n      if (!positions.find((i) => i.position === childPosition)) {\n        positions.push({\n          key: `${info.key}.${lastPart}`,\n          value: undefined,\n          operator: info.operator,\n          position: childPosition,\n        });\n      }\n    });\n  } else if (parentPath.slice(-2) !== '.$') {\n    // positions that will create parentPath\n    mongoObject.getPositionsThatCreateGenericKey(parentPath).forEach((info) => {\n      const { operator, position } = info;\n      let wouldBePosition;\n      if (operator) {\n        const next = position.slice(position.indexOf('[') + 1, position.indexOf(']'));\n        const nextPieces = next.split('.');\n\n        const newPieces = [];\n        let newKey;\n        while (nextPieces.length && newKey !== parentPath) {\n          newPieces.push(nextPieces.shift());\n          newKey = newPieces.join('.');\n        }\n        newKey = `${newKey}.${fieldName.slice(newKey.length + 1)}`;\n        wouldBePosition = `$set[${newKey}]`;\n      } else {\n        const lastPart2 = getLastPartOfKey(fieldName, parentPath);\n        const lastPartWithBraces2 = lastPart2.replace(/\\./g, '][');\n        wouldBePosition = `${position.slice(0, position.lastIndexOf('['))}[${lastPartWithBraces2}]`;\n      }\n      if (!positions.find((i) => i.position === wouldBePosition)) {\n        positions.push({\n          key: MongoObject._positionToKey(wouldBePosition),\n          value: undefined,\n          operator: operator ? '$set' : null,\n          position: wouldBePosition,\n        });\n      }\n    });\n  }\n\n  return positions;\n}\n","import getPositionsForAutoValue from './getPositionsForAutoValue';\nimport AutoValueRunner from './AutoValueRunner';\n\n/**\n * @method sortAutoValueFunctions\n * @private\n * @param {Array} autoValueFunctions - Array of objects to be sorted\n * @returns {Array} Sorted array\n *\n * Stable sort of the autoValueFunctions (preserves order at the same field depth).\n */\nexport function sortAutoValueFunctions(autoValueFunctions) {\n  const defaultFieldOrder = autoValueFunctions.reduce((acc, { fieldName }, index) => {\n    acc[fieldName] = index;\n    return acc;\n  }, {});\n\n  // Sort by how many dots each field name has, asc, such that we can auto-create\n  // objects and arrays before we run the autoValues for properties within them.\n  // Fields of the same level (same number of dots) preserve should order from the original array.\n  return autoValueFunctions.sort((a, b) => {\n    const depthDiff = a.fieldName.split('.').length - b.fieldName.split('.').length;\n    return depthDiff === 0 ? defaultFieldOrder[a.fieldName] - defaultFieldOrder[b.fieldName] : depthDiff;\n  });\n}\n\n/**\n * @method setAutoValues\n * @private\n * @param {Array} autoValueFunctions - An array of objects with func, fieldName, and closestSubschemaFieldName props\n * @param {MongoObject} mongoObject\n * @param {Boolean} [isModifier=false] - Is it a modifier doc?\n * @param {Object} [extendedAutoValueContext] - Object that will be added to the context when calling each autoValue function\n * @returns {undefined}\n *\n * Updates doc with automatic values from autoValue functions or default\n * values from defaultValue. Modifies the referenced object in place.\n */\nfunction setAutoValues(autoValueFunctions, mongoObject, isModifier, isUpsert, extendedAutoValueContext) {\n  const sortedAutoValueFunctions = sortAutoValueFunctions(autoValueFunctions);\n\n  sortedAutoValueFunctions.forEach(({ func, fieldName, closestSubschemaFieldName }) => {\n    const avRunner = new AutoValueRunner({\n      closestSubschemaFieldName,\n      extendedAutoValueContext,\n      func,\n      isModifier,\n      isUpsert,\n      mongoObject,\n    });\n\n    const positions = getPositionsForAutoValue({ fieldName, isModifier, mongoObject });\n\n    // Run the autoValue function once for each place in the object that\n    // has a value or that potentially should.\n    positions.forEach(avRunner.runForPosition.bind(avRunner));\n  });\n}\n\nexport default setAutoValues;\n","export default function appendAffectedKey(affectedKey, key) {\n  if (key === '$each') return affectedKey;\n  return affectedKey ? `${affectedKey}.${key}` : key;\n}\n","/**\n * Given a Date instance, returns a date string of the format YYYY-MM-DD\n */\nexport default function dateToDateString(date) {\n  let m = (date.getUTCMonth() + 1);\n  if (m < 10) m = `0${m}`;\n  let d = date.getUTCDate();\n  if (d < 10) d = `0${d}`;\n  return `${date.getUTCFullYear()}-${m}-${d}`;\n}\n","/**\n * Run loopFunc for each ancestor key in a dot-delimited key. For example,\n * if key is \"a.b.c\", loopFunc will be called first with ('a.b', 'c') and then with ('a', 'b.c')\n */\nexport default function forEachKeyAncestor(key, loopFunc) {\n  let lastDot;\n\n  // Iterate the dot-syntax hierarchy\n  let ancestor = key;\n  do {\n    lastDot = ancestor.lastIndexOf('.');\n    if (lastDot !== -1) {\n      ancestor = ancestor.slice(0, lastDot);\n      const remainder = key.slice(ancestor.length + 1);\n      loopFunc(ancestor, remainder); // Remove last path component\n    }\n  } while (lastDot !== -1);\n}\n","/**\n * Returns an array of keys that are in obj, have a value\n * other than null or undefined, and start with matchKey\n * plus a dot.\n */\nexport default function getKeysWithValueInObj(obj, matchKey) {\n  const keysWithValue = [];\n\n  const keyAdjust = (k) => k.slice(0, matchKey.length + 1);\n  const matchKeyPlusDot = `${matchKey}.`;\n\n  Object.keys(obj || {}).forEach((key) => {\n    const val = obj[key];\n    if (val === undefined || val === null) return;\n    if (keyAdjust(key) === matchKeyPlusDot) {\n      keysWithValue.push(key);\n    }\n  });\n\n  return keysWithValue;\n}\n","/**\n * Returns the ending of key, after stripping out the beginning\n * ancestorKey and any array placeholders\n *\n * getLastPartOfKey('a.b.c', 'a') returns 'b.c'\n * getLastPartOfKey('a.b.$.c', 'a.b') returns 'c'\n */\nexport default function getLastPartOfKey(key, ancestorKey) {\n  let lastPart = '';\n  const startString = `${ancestorKey}.`;\n  if (key.indexOf(startString) === 0) {\n    lastPart = key.replace(startString, '');\n    if (lastPart.startsWith('$.')) lastPart = lastPart.slice(2);\n  }\n  return lastPart;\n}\n","/**\n * Returns the parent of a key. For example, returns 'a.b' when passed 'a.b.c'.\n * If no parent, returns an empty string. If withEndDot is true, the return\n * value will have a dot appended when it isn't an empty string.\n */\nexport default function getParentOfKey(key, withEndDot) {\n  const lastDot = key.lastIndexOf('.');\n  return lastDot === -1 ? '' : key.slice(0, lastDot + Number(!!withEndDot));\n}\n","export { default as appendAffectedKey } from './appendAffectedKey';\nexport { default as dateToDateString } from './dateToDateString';\nexport { default as forEachKeyAncestor } from './forEachKeyAncestor';\nexport { default as getKeysWithValueInObj } from './getKeysWithValueInObj';\nexport { default as getLastPartOfKey } from './getLastPartOfKey';\nexport { default as getParentOfKey } from './getParentOfKey';\nexport { default as isEmptyObject } from './isEmptyObject';\nexport { default as isObjectWeShouldTraverse } from './isObjectWeShouldTraverse';\nexport { default as looksLikeModifier } from './looksLikeModifier';\nexport { default as merge } from './merge';\n","/**\n * @summary Determines whether the object has any \"own\" properties\n * @param {Object} obj Object to test\n * @return {Boolean} True if it has no \"own\" properties\n */\nexport default function isEmptyObject(obj) {\n  /* eslint-disable no-restricted-syntax */\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  /* eslint-enable no-restricted-syntax */\n\n  return true;\n}\n","export default function isObjectWeShouldTraverse(val) {\n  // Some of these types don't exist in old browsers so we'll catch and return false in those cases\n  try {\n    if (val !== Object(val)) return false;\n    // There are some object types that we know we shouldn't traverse because\n    // they will often result in overflows and it makes no sense to validate them.\n    if (val instanceof Date) return false;\n    if (val instanceof Int8Array) return false;\n    if (val instanceof Uint8Array) return false;\n    if (val instanceof Uint8ClampedArray) return false;\n    if (val instanceof Int16Array) return false;\n    if (val instanceof Uint16Array) return false;\n    if (val instanceof Int32Array) return false;\n    if (val instanceof Uint32Array) return false;\n    if (val instanceof Float32Array) return false;\n    if (val instanceof Float64Array) return false;\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n","/**\n * Returns true if any of the keys of obj start with a $\n */\nexport default function looksLikeModifier(obj) {\n  return !!Object.keys(obj || {}).find((key) => key.substring(0, 1) === '$');\n}\n","/**\n * We have relatively simple deep merging requirements in this package.\n * We are only ever merging messages config, so we know the structure,\n * we know there are no arrays, and we know there are no constructors\n * or weirdly defined properties.\n *\n * Thus, we can write a very simplistic deep merge function to avoid\n * pulling in a large dependency.\n */\n\nexport default function merge(destination, ...sources) {\n  sources.forEach((source) => {\n    Object.keys(source).forEach((prop) => {\n      if (prop === '__proto__') return; // protect against prototype pollution\n      if (\n        source[prop]\n        && source[prop].constructor\n        && source[prop].constructor === Object\n      ) {\n        if (!destination[prop] || !destination[prop].constructor || destination[prop].constructor !== Object) {\n          destination[prop] = {};\n        }\n        merge(destination[prop], source[prop]);\n      } else {\n        destination[prop] = source[prop];\n      }\n    });\n  });\n\n  return destination;\n}\n","import { SimpleSchema } from '../SimpleSchema';\n\nexport default function allowedValuesValidator() {\n  if (!this.valueShouldBeChecked) return;\n\n  const { allowedValues } = this.definition;\n  if (!allowedValues) return;\n\n  let isAllowed;\n  // set defined in scope and allowedValues is its instance\n  if (typeof Set === 'function' && allowedValues instanceof Set) {\n    isAllowed = allowedValues.has(this.value);\n  } else {\n    isAllowed = allowedValues.includes(this.value);\n  }\n\n  return isAllowed ? true : SimpleSchema.ErrorTypes.VALUE_NOT_ALLOWED;\n}\n","import { SimpleSchema } from '../SimpleSchema';\nimport { getKeysWithValueInObj } from '../utility';\n\n// Check for missing required values. The general logic is this:\n// * If the operator is $unset or $rename, it's invalid.\n// * If the value is null, it's invalid.\n// * If the value is undefined and one of the following are true, it's invalid:\n//     * We're validating a key of a sub-object.\n//     * We're validating a key of an object that is an array item.\n//     * We're validating a document (as opposed to a modifier).\n//     * We're validating a key under the $set operator in a modifier, and it's an upsert.\nexport default function requiredValidator() {\n  const {\n    definition, isInArrayItemObject, isInSubObject, key, obj, operator, value,\n  } = this;\n  const { optional } = definition;\n\n  if (optional) return;\n\n  // If value is null, no matter what, we add required\n  if (value === null) return SimpleSchema.ErrorTypes.REQUIRED;\n\n  // If operator would remove, we add required\n  if (operator === '$unset' || operator === '$rename') return SimpleSchema.ErrorTypes.REQUIRED;\n\n  // The rest of these apply only if the value is undefined\n  if (value !== undefined) return;\n\n  // At this point, if it's a normal, non-modifier object, then a missing value is an error\n  if (!operator) return SimpleSchema.ErrorTypes.REQUIRED;\n\n  // Everything beyond this point deals with modifier objects only\n\n  // We can skip the required check for keys that are ancestors of those in $set or\n  // $setOnInsert because they will be created by MongoDB while setting.\n  const keysWithValueInSet = getKeysWithValueInObj(obj.$set, key);\n  if (keysWithValueInSet.length) return;\n  const keysWithValueInSetOnInsert = getKeysWithValueInObj(obj.$setOnInsert, key);\n  if (keysWithValueInSetOnInsert.length) return;\n\n  // In the case of $set and $setOnInsert, the value may be undefined here\n  // but it is set in another operator. So check that first.\n  const fieldInfo = this.field(key);\n  if (fieldInfo.isSet && fieldInfo.value !== null) return;\n\n  // Required if in an array or sub object\n  if (isInArrayItemObject || isInSubObject) return SimpleSchema.ErrorTypes.REQUIRED;\n\n  // If we've got this far with an undefined $set or $setOnInsert value, it's a required error.\n  if (operator === '$set' || operator === '$setOnInsert') return SimpleSchema.ErrorTypes.REQUIRED;\n}\n","import { SimpleSchema } from '../../SimpleSchema';\n\nexport default function doArrayChecks(def, keyValue) {\n  // Is it an array?\n  if (!Array.isArray(keyValue)) {\n    return { type: SimpleSchema.ErrorTypes.EXPECTED_TYPE, dataType: 'Array' };\n  }\n\n  // Are there fewer than the minimum number of items in the array?\n  if (def.minCount !== null && keyValue.length < def.minCount) {\n    return { type: SimpleSchema.ErrorTypes.MIN_COUNT, minCount: def.minCount };\n  }\n\n  // Are there more than the maximum number of items in the array?\n  if (def.maxCount !== null && keyValue.length > def.maxCount) {\n    return { type: SimpleSchema.ErrorTypes.MAX_COUNT, maxCount: def.maxCount };\n  }\n}\n","import { SimpleSchema } from '../../SimpleSchema';\nimport { dateToDateString } from '../../utility';\n\nexport default function doDateChecks(def, keyValue) {\n  // Is it an invalid date?\n  if (isNaN(keyValue.getTime())) return { type: SimpleSchema.ErrorTypes.BAD_DATE };\n\n  // Is it earlier than the minimum date?\n  if (def.min && typeof def.min.getTime === 'function' && def.min.getTime() > keyValue.getTime()) {\n    return { type: SimpleSchema.ErrorTypes.MIN_DATE, min: dateToDateString(def.min) };\n  }\n\n  // Is it later than the maximum date?\n  if (def.max && typeof def.max.getTime === 'function' && def.max.getTime() < keyValue.getTime()) {\n    return { type: SimpleSchema.ErrorTypes.MAX_DATE, max: dateToDateString(def.max) };\n  }\n}\n","import { SimpleSchema } from '../../SimpleSchema';\n\n// Polyfill to support IE11\nNumber.isInteger = Number.isInteger || function isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n};\n\nexport default function doNumberChecks(def, keyValue, op, expectsInteger) {\n  // Is it a valid number?\n  if (typeof keyValue !== 'number' || isNaN(keyValue)) {\n    return { type: SimpleSchema.ErrorTypes.EXPECTED_TYPE, dataType: expectsInteger ? 'Integer' : 'Number' };\n  }\n\n  // Assuming we are not incrementing, is the value less than the maximum value?\n  if (op !== '$inc' && def.max !== null && (def.exclusiveMax ? def.max <= keyValue : def.max < keyValue)) {\n    return { type: def.exclusiveMax ? SimpleSchema.ErrorTypes.MAX_NUMBER_EXCLUSIVE : SimpleSchema.ErrorTypes.MAX_NUMBER, max: def.max };\n  }\n\n  // Assuming we are not incrementing, is the value more than the minimum value?\n  if (op !== '$inc' && def.min !== null && (def.exclusiveMin ? def.min >= keyValue : def.min > keyValue)) {\n    return { type: def.exclusiveMin ? SimpleSchema.ErrorTypes.MIN_NUMBER_EXCLUSIVE : SimpleSchema.ErrorTypes.MIN_NUMBER, min: def.min };\n  }\n\n  // Is it an integer if we expect an integer?\n  if (expectsInteger && !Number.isInteger(keyValue)) {\n    return { type: SimpleSchema.ErrorTypes.MUST_BE_INTEGER };\n  }\n}\n","import { SimpleSchema } from '../../SimpleSchema';\n\nexport default function doStringChecks(def, keyValue) {\n  // Is it a String?\n  if (typeof keyValue !== 'string') {\n    return { type: SimpleSchema.ErrorTypes.EXPECTED_TYPE, dataType: 'String' };\n  }\n\n  // Is the string too long?\n  if (def.max !== null && def.max < keyValue.length) {\n    return { type: SimpleSchema.ErrorTypes.MAX_STRING, max: def.max };\n  }\n\n  // Is the string too short?\n  if (def.min !== null && def.min > keyValue.length) {\n    return { type: SimpleSchema.ErrorTypes.MIN_STRING, min: def.min };\n  }\n\n  // Does the string match the regular expression?\n  if (\n    (def.skipRegExCheckForEmptyStrings !== true || keyValue !== '')\n    && def.regEx instanceof RegExp && !def.regEx.test(keyValue)\n  ) {\n    return { type: SimpleSchema.ErrorTypes.FAILED_REGULAR_EXPRESSION, regExp: def.regEx.toString() };\n  }\n\n  // If regEx is an array of regular expressions, does the string match all of them?\n  if (Array.isArray(def.regEx)) {\n    let regExError;\n    def.regEx.every((re) => {\n      if (!re.test(keyValue)) {\n        regExError = { type: SimpleSchema.ErrorTypes.FAILED_REGULAR_EXPRESSION, regExp: re.toString() };\n        return false;\n      }\n      return true;\n    });\n    if (regExError) return regExError;\n  }\n}\n","import { SimpleSchema } from '../../SimpleSchema';\nimport doDateChecks from './doDateChecks';\nimport doNumberChecks from './doNumberChecks';\nimport doStringChecks from './doStringChecks';\nimport doArrayChecks from './doArrayChecks';\n\nexport default function typeValidator() {\n  if (!this.valueShouldBeChecked) return;\n\n  const def = this.definition;\n  const expectedType = def.type;\n  const keyValue = this.value;\n  const op = this.operator;\n\n  if (expectedType === String) return doStringChecks(def, keyValue);\n  if (expectedType === Number) return doNumberChecks(def, keyValue, op, false);\n  if (expectedType === SimpleSchema.Integer) return doNumberChecks(def, keyValue, op, true);\n\n  if (expectedType === Boolean) {\n    // Is it a boolean?\n    if (typeof keyValue === 'boolean') return;\n    return { type: SimpleSchema.ErrorTypes.EXPECTED_TYPE, dataType: 'Boolean' };\n  }\n\n  if (expectedType === Object || SimpleSchema.isSimpleSchema(expectedType)) {\n    // Is it an object?\n    if (\n      keyValue === Object(keyValue)\n      && typeof keyValue[Symbol.iterator] !== 'function'\n      && !(keyValue instanceof Date)\n    ) return;\n    return { type: SimpleSchema.ErrorTypes.EXPECTED_TYPE, dataType: 'Object' };\n  }\n\n  if (expectedType === Array) return doArrayChecks(def, keyValue);\n\n  if (expectedType instanceof Function) {\n    // Generic constructor checks\n    if (!(keyValue instanceof expectedType)) {\n      // https://docs.mongodb.com/manual/reference/operator/update/currentDate/\n      const dateTypeIsOkay = expectedType === Date\n        && op === '$currentDate'\n        && (keyValue === true || JSON.stringify(keyValue) === '{\"$type\":\"date\"}');\n\n      if (expectedType !== Date || !dateTypeIsOkay) {\n        return {\n          type: SimpleSchema.ErrorTypes.EXPECTED_TYPE,\n          dataType: expectedType.name,\n        };\n      }\n    }\n\n    // Date checks\n    if (expectedType === Date) {\n      // https://docs.mongodb.com/manual/reference/operator/update/currentDate/\n      if (op === '$currentDate') {\n        return doDateChecks(def, new Date());\n      }\n      return doDateChecks(def, keyValue);\n    }\n  }\n}\n"]}