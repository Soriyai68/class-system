Package["core-runtime"].queue("modules",function () {/* Imports */
var Meteor = Package.meteor.Meteor;
var global = Package.meteor.global;
var meteorEnv = Package.meteor.meteorEnv;
var EmitterPromise = Package.meteor.EmitterPromise;
var meteorInstall = Package['modules-runtime'].meteorInstall;
var verifyErrors = Package['modules-runtime'].verifyErrors;

var require = meteorInstall({"node_modules":{"meteor":{"modules":{"server.js":function module(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/modules/server.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
require("./install-packages.js");
require("./process.js");
require("./reify.js");

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"install-packages.js":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/modules/install-packages.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
function install(name, mainModule) {
  var meteorDir = {};

  // Given a package name <name>, install a stub module in the
  // /node_modules/meteor directory called <name>.js, so that
  // require.resolve("meteor/<name>") will always return
  // /node_modules/meteor/<name>.js instead of something like
  // /node_modules/meteor/<name>/index.js, in the rare but possible event
  // that the package contains a file called index.js (#6590).

  if (typeof mainModule === "string") {
    // Set up an alias from /node_modules/meteor/<package>.js to the main
    // module, e.g. meteor/<package>/index.js.
    meteorDir[name + ".js"] = mainModule;
  } else {
    // back compat with old Meteor packages
    meteorDir[name + ".js"] = function (r, e, module) {
      module.exports = Package[name];
    };
  }

  meteorInstall({
    node_modules: {
      meteor: meteorDir
    }
  });
}

// This file will be modified during computeJsOutputFilesMap to include
// install(<name>) calls for every Meteor package.

install("core-runtime");
install("meteor");
install("meteor-base");
install("mobile-experience");
install("npm-mongo");
install("modules-runtime");
install("modules", "meteor/modules/server.js");
install("react-fast-refresh");
install("ecmascript");
install("ecmascript-runtime");
install("babel-runtime", "meteor/babel-runtime/babel-runtime.js");
install("modern-browsers", "meteor/modern-browsers/modern.js");
install("promise", "meteor/promise/server.js");
install("fetch", "meteor/fetch/server.js");
install("inter-process-messaging", "meteor/inter-process-messaging/inter-process-messaging.js");
install("dynamic-import", "meteor/dynamic-import/server.js");
install("es5-shim");
install("ecmascript-runtime-client", "meteor/ecmascript-runtime-client/versions.js");
install("ecmascript-runtime-server", "meteor/ecmascript-runtime-server/runtime.js");
install("base64", "meteor/base64/base64.js");
install("ejson", "meteor/ejson/ejson.js");
install("diff-sequence", "meteor/diff-sequence/diff.js");
install("geojson-utils", "meteor/geojson-utils/main.js");
install("id-map", "meteor/id-map/id-map.js");
install("random", "meteor/random/main_server.js");
install("mongo-id", "meteor/mongo-id/id.js");
install("ordered-dict", "meteor/ordered-dict/ordered_dict.js");
install("tracker");
install("mongo-decimal", "meteor/mongo-decimal/decimal.js");
install("minimongo", "meteor/minimongo/minimongo_server.js");
install("check", "meteor/check/match.js");
install("retry", "meteor/retry/retry.js");
install("callback-hook", "meteor/callback-hook/hook.js");
install("ddp-common");
install("reload");
install("socket-stream-client", "meteor/socket-stream-client/node.js");
install("ddp-client", "meteor/ddp-client/server/server.js");
install("babel-compiler");
install("typescript");
install("rate-limit", "meteor/rate-limit/rate-limit.js");
install("ddp-rate-limiter", "meteor/ddp-rate-limiter/ddp-rate-limiter.js");
install("logging", "meteor/logging/logging.js");
install("routepolicy", "meteor/routepolicy/main.js");
install("boilerplate-generator", "meteor/boilerplate-generator/generator.js");
install("webapp-hashing");
install("webapp", "meteor/webapp/webapp_server.js");
install("ddp-server");
install("ddp");
install("allow-deny");
install("binary-heap", "meteor/binary-heap/binary-heap.js");
install("facts-base", "meteor/facts-base/facts_base_server.js");
install("mongo");
install("reactive-var");
install("minifier-css", "meteor/minifier-css/minifier.js");
install("standard-minifier-css");
install("standard-minifier-js");
install("shell-server", "meteor/shell-server/main.js");
install("static-html");
install("jorgenvatle:vite-bundler", "meteor/jorgenvatle:vite-bundler/src/server.ts");
install("mdg:validated-method", "meteor/mdg:validated-method/validated-method.js");
install("aldeed:simple-schema", "meteor/aldeed:simple-schema/lib/main.js");
install("ostrio:cookies", "meteor/ostrio:cookies/cookies.js");
install("ostrio:files", "meteor/ostrio:files/server.js");
install("url", "meteor/url/server.js");
install("accounts-base", "meteor/accounts-base/server_main.js");
install("sha");
install("email", "meteor/email/email.js");
install("accounts-password");
install("raix:eventemitter");
install("aldeed:collection2");
install("session");
install("hot-code-push");
install("launch-screen");
install("autoupdate", "meteor/autoupdate/autoupdate_server.js");

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"process.js":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/modules/process.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
if (! global.process) {
  try {
    // The application can run `npm install process` to provide its own
    // process stub; otherwise this module will provide a partial stub.
    global.process = require("process");
  } catch (missing) {
    global.process = {};
  }
}

var proc = global.process;

if (Meteor.isServer) {
  // Make require("process") work on the server in all versions of Node.
  meteorInstall({
    node_modules: {
      "process.js": function (r, e, module) {
        module.exports = proc;
      }
    }
  });
} else {
  proc.platform = "browser";
  proc.nextTick = proc.nextTick || Meteor._setImmediate;
}

if (typeof proc.env !== "object") {
  proc.env = {};
}

var hasOwn = Object.prototype.hasOwnProperty;
for (var key in meteorEnv) {
  if (hasOwn.call(meteorEnv, key)) {
    proc.env[key] = meteorEnv[key];
  }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reify.js":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// packages/modules/reify.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
require("@meteorjs/reify/lib/runtime").enable(
  module.constructor.prototype
);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"node_modules":{"@meteorjs":{"reify":{"lib":{"runtime":{"index.js":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/meteor/modules/node_modules/@meteorjs/reify/lib/runtime/index.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.useNode();
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}}}}}}},{
  "extensions": [
    ".js",
    ".json"
  ]
});
meteorInstall({"node_modules":{"element-plus":{"es":{"locale":{"lang":{"af.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/af.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => af
});
var af = {
  name: "af",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Bevestig",
      clear: "Maak skoon"
    },
    datepicker: {
      now: "Nou",
      today: "Vandag",
      cancel: "Kanselleer",
      clear: "Maak skoon",
      confirm: "Bevestig",
      selectDate: "Kies datum",
      selectTime: "Kies tyd",
      startDate: "Begindatum",
      startTime: "Begintyd",
      endDate: "Einddatum",
      endTime: "Eindtyd",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      year: "Jaar",
      month1: "Jan",
      month2: "Feb",
      month3: "Mrt",
      month4: "Apr",
      month5: "Mei",
      month6: "Jun",
      month7: "Jul",
      month8: "Aug",
      month9: "Sep",
      month10: "Okt",
      month11: "Nov",
      month12: "Des",
      weeks: {
        sun: "So",
        mon: "Ma",
        tue: "Di",
        wed: "Wo",
        thu: "Do",
        fri: "Vr",
        sat: "Sa"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mrt",
        apr: "Apr",
        may: "Mei",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Okt",
        nov: "Nov",
        dec: "Des"
      }
    },
    select: {
      loading: "Laai",
      noMatch: "Geen toepaslike data",
      noData: "Geen data",
      placeholder: "Kies"
    },
    mention: {
      loading: "Laai"
    },
    cascader: {
      noMatch: "Geen toepaslike data",
      loading: "Laai",
      placeholder: "Kies",
      noData: "Geen data"
    },
    pagination: {
      goto: "Gaan na",
      pagesize: "/page",
      total: "Totaal {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Boodskap",
      confirm: "Bevestig",
      cancel: "Kanselleer",
      error: "Ongeldige invoer"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "Verwyder",
      preview: "Voorskou",
      continue: "Gaan voort"
    },
    table: {
      emptyText: "Geen Data",
      confirmFilter: "Bevestig",
      resetFilter: "Herstel",
      clearFilter: "Alles",
      sumText: "Som"
    },
    tree: {
      emptyText: "Geen Data"
    },
    transfer: {
      noMatch: "Geen toepaslike data",
      noData: "Geen data",
      titles: ["Lys 1", "Lys 2"],
      filterPlaceholder: "Voer sleutelwoord in",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} gekies"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ar.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/ar.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => ar
});
var ar = {
  name: "ar",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u0645\u0648\u0627\u0641\u0642",
      clear: "\u0625\u0632\u0627\u0644\u0629",
      defaultLabel: "\u0625\u062E\u062A\u0631 \u0627\u0644\u0644\u0648\u0646",
      description: "\u0627\u0644\u0644\u0648\u0646 \u0627\u0644\u062D\u0627\u0644\u064A \u0647\u0648 {color}. \u0627\u0636\u0641\u0637 \u0627\u0646\u062A\u0631 \u0644\u0627\u062E\u062A\u064A\u0627\u0631 \u0644\u0648\u0646 \u062C\u062F\u064A\u062F"
    },
    datepicker: {
      now: "\u0627\u0644\u0622\u0646",
      today: "\u0627\u0644\u064A\u0648\u0645",
      cancel: "\u0625\u0644\u063A\u0627\u0621",
      clear: "\u0625\u0632\u0627\u0644\u0629",
      confirm: "\u0645\u0648\u0627\u0641\u0642",
      dateTablePrompt: "\u0627\u0633\u062A\u062E\u062F\u0645 \u0645\u0641\u0627\u062A\u064A\u062D \u0627\u0644\u0627\u0633\u0647\u0645 \u0648 \u0627\u0636\u063A\u0637 \u0627\u0646\u062A\u0631 \u0644\u0627\u062E\u062A\u064A\u0627\u0631 \u0627\u0644\u064A\u0648\u0645 \u0627\u0644\u0645\u0631\u0627\u062F \u0645\u0646 \u0627\u0644\u0634\u0647\u0631",
      monthTablePrompt: "\u0627\u0633\u062A\u062E\u062F\u0645 \u0645\u0641\u0627\u062A\u064A\u062D \u0627\u0644\u0627\u0633\u0647\u0645 \u0648\u0627\u0636\u063A\u0637 \u0627\u0646\u062A\u0631 \u0644\u0627\u062E\u062A\u064A\u0627\u0631 \u0627\u0644\u0634\u0647\u0631",
      yearTablePrompt: "\u0627\u0633\u062A\u062E\u062F\u0645 \u0645\u0641\u0627\u062A\u064A\u062D \u0627\u0644\u0627\u0633\u0647\u0645 \u0648\u0627\u0636\u063A\u0637 \u0627\u0646\u062A\u0631 \u0644\u0627\u062E\u062A\u064A\u0627\u0631 \u0627\u0644\u0633\u0646\u0629",
      selectDate: "\u0625\u062E\u062A\u0631 \u0627\u0644\u062A\u0627\u0631\u064A\u062E",
      selectTime: "\u0625\u062E\u062A\u0631 \u0627\u0644\u0648\u0642\u062A",
      startDate: "\u062A\u0627\u0631\u064A\u062E \u0627\u0644\u0628\u062F\u0621",
      startTime: "\u0648\u0642\u062A \u0627\u0644\u0628\u062F\u0621",
      endDate: "\u062A\u0627\u0631\u064A\u062E \u0627\u0644\u0625\u0646\u062A\u0647\u0627\u0621",
      endTime: "\u0648\u0642\u062A \u0627\u0644\u0625\u0646\u062A\u0647\u0627\u0621",
      prevYear: "\u0627\u0644\u0633\u0646\u0629 \u0627\u0644\u0633\u0627\u0628\u0642\u0629",
      nextYear: "\u0627\u0644\u0633\u0646\u0629 \u0627\u0644\u062A\u0627\u0644\u064A\u0629",
      prevMonth: "\u0627\u0644\u0634\u0647\u0631 \u0627\u0644\u0633\u0627\u0628\u0642",
      nextMonth: "\u0627\u0644\u0634\u0647\u0631 \u0627\u0644\u062A\u0627\u0644\u064A",
      year: "\u0633\u0646\u0629",
      month1: "\u0643\u0627\u0646\u0648\u0646 \u0627\u0644\u062B\u0627\u0646\u064A",
      month2: "\u0634\u0628\u0627\u0637",
      month3: "\u0627\u0630\u0627\u0631",
      month4: "\u0646\u064A\u0633\u0627\u0646",
      month5: "\u0623\u064A\u0627\u0631",
      month6: "\u062D\u0632\u064A\u0631\u0627\u0646",
      month7: "\u062A\u0645\u0648\u0632",
      month8: "\u0627\u0651\u0628",
      month9: "\u0627\u064A\u0644\u0648\u0644",
      month10: "\u062A\u0634\u0631\u064A\u0646 \u0627\u0644\u0627\u0648\u0644",
      month11: "\u062A\u0634\u0631\u064A\u0646 \u0627\u0644\u062B\u0627\u0646\u064A",
      month12: "\u0643\u0627\u0646\u0648\u0646 \u0627\u0644\u0627\u0648\u0644",
      week: "\u0623\u0633\u0628\u0648\u0639",
      weeks: {
        sun: "\u0627\u0644\u0623\u062D\u062F",
        mon: "\u0627\u0644\u0623\u062B\u0646\u064A\u0646",
        tue: "\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621",
        wed: "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621",
        thu: "\u0627\u0644\u062E\u0645\u064A\u0633",
        fri: "\u0627\u0644\u062C\u0645\u0639\u0629",
        sat: "\u0627\u0644\u0633\u0628\u062A"
      },
      months: {
        jan: "\u0643\u0627\u0646\u0648\u0646 \u0627\u0644\u062B\u0627\u0646\u064A",
        feb: "\u0634\u0628\u0627\u0637",
        mar: "\u0627\u0630\u0627\u0631",
        apr: "\u0646\u064A\u0633\u0627\u0646",
        may: "\u0627\u064A\u0627\u0631",
        jun: "\u062D\u0632\u064A\u0631\u0627\u0646",
        jul: "\u062A\u0645\u0648\u0631",
        aug: "\u0627\u0651\u0628",
        sep: "\u0627\u064A\u0644\u0648\u0644",
        oct: "\u062A\u0634\u0631\u064A\u0646 \u0627\u0644\u0627\u0648\u0644",
        nov: "\u062A\u0634\u0631\u064A\u0646 \u0627\u0644\u062B\u0627\u0646\u064A",
        dec: "\u0643\u0627\u0646\u0648\u0646 \u0627\u0644\u0627\u0648\u0644"
      }
    },
    inputNumber: {
      decrease: "\u0637\u0631\u062D \u0631\u0642\u0645",
      increase: "\u0632\u064A\u0627\u062F\u0629 \u0631\u0642\u0645"
    },
    select: {
      loading: "\u062C\u0627\u0631 \u0627\u0644\u062A\u062D\u0645\u064A\u0644",
      noMatch: "\u0644\u0627\u064A\u0648\u062C\u062F \u0628\u064A\u0627\u0646\u0627\u062A \u0645\u0637\u0627\u0628\u0642\u0629",
      noData: "\u0644\u0627\u064A\u0648\u062C\u062F \u0628\u064A\u0627\u0646\u0627\u062A",
      placeholder: "\u0625\u062E\u062A\u0631"
    },
    mention: {
      loading: "\u062C\u0627\u0631 \u0627\u0644\u062A\u062D\u0645\u064A\u0644"
    },
    dropdown: {
      toggleDropdown: "\u062A\u0628\u062F\u064A\u0644 \u0627\u0644\u0642\u0627\u0626\u0645\u0629"
    },
    cascader: {
      noMatch: "\u0644\u0627\u064A\u0648\u062C\u062F \u0628\u064A\u0627\u0646\u0627\u062A \u0645\u0637\u0627\u0628\u0642\u0629",
      loading: "\u062C\u0627\u0631 \u0627\u0644\u062A\u062D\u0645\u064A\u0644",
      placeholder: "\u0625\u062E\u062A\u0631",
      noData: "\u0644\u0627\u064A\u0648\u062C\u062F \u0628\u064A\u0627\u0646\u0627\u062A"
    },
    pagination: {
      goto: "\u0623\u0630\u0647\u0628 \u0625\u0644\u0649",
      pagesize: "/\u0635\u0641\u062D\u0629",
      total: "\u0627\u0644\u0643\u0644 {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    dialog: {
      close: "\u0623\u063A\u0644\u0642 \u0647\u0630\u0627 \u0627\u0644\u062A\u0628\u0648\u064A\u0628"
    },
    drawer: {
      close: "\u0623\u063A\u0644\u0642 \u0647\u0630\u0627 \u0627\u0644\u062A\u0628\u0648\u064A\u0628"
    },
    messagebox: {
      title: "\u0627\u0644\u0639\u0646\u0648\u0627\u0646",
      confirm: "\u0645\u0648\u0627\u0641\u0642",
      cancel: "\u0625\u0644\u063A\u0627\u0621",
      error: "\u0645\u062F\u062E\u0644 \u063A\u064A\u0631 \u0635\u062D\u064A\u062D",
      close: "\u0623\u063A\u0644\u0642 \u0647\u0630\u0627 \u0627\u0644\u062A\u0628\u0648\u064A\u0628"
    },
    upload: {
      deleteTip: "\u0627\u0636\u063A\u0637 \u0627\u0632\u0627\u0644\u0629 \u0644\u062D\u0630\u0641 \u0627\u0644\u0645\u062D\u062A\u0648\u0649",
      delete: "\u062D\u0630\u0641",
      preview: "\u0639\u0631\u0636",
      continue: "\u0625\u0633\u062A\u0645\u0631\u0627\u0631"
    },
    table: {
      emptyText: "\u0644\u0627\u064A\u0648\u062C\u062F \u0628\u064A\u0627\u0646\u0627\u062A",
      confirmFilter: "\u062A\u0623\u0643\u064A\u062F",
      resetFilter: "\u062D\u0630\u0641",
      clearFilter: "\u0627\u0644\u0643\u0644",
      sumText: "\u0627\u0644\u0645\u062C\u0645\u0648\u0639"
    },
    tree: {
      emptyText: "\u0644\u0627\u064A\u0648\u062C\u062F \u0628\u064A\u0627\u0646\u0627\u062A"
    },
    transfer: {
      noMatch: "\u0644\u0627\u064A\u0648\u062C\u062F \u0628\u064A\u0627\u0646\u0627\u062A \u0645\u0637\u0627\u0628\u0642\u0629",
      noData: "\u0644\u0627\u064A\u0648\u062C\u062F \u0628\u064A\u0627\u0646\u0627\u062A",
      titles: ["\u0642\u0627\u0626\u0645\u0629 1", "\u0642\u0627\u0626\u0645\u0629 2"],
      filterPlaceholder: "\u0627\u062F\u062E\u0644 \u0643\u0644\u0645\u0629",
      noCheckedFormat: "{total} \u0639\u0646\u0627\u0635\u0631",
      hasCheckedFormat: "{checked}/{total} \u0645\u062E\u062A\u0627\u0631"
    },
    image: {
      error: "\u0641\u0634\u0644"
    },
    pageHeader: {
      title: "\u0639\u0648\u062F\u0629"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"az.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/az.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => az
});
var az = {
  name: "az",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "T\u0259sdiql\u0259",
      clear: "T\u0259mizl\u0259"
    },
    datepicker: {
      now: "\u0130ndi",
      today: "Bug\xFCn",
      cancel: "\u0130mtina",
      clear: "T\u0259mizl\u0259",
      confirm: "T\u0259sdiql\u0259",
      selectDate: "Tarix se\xE7",
      selectTime: "Saat se\xE7",
      startDate: "Ba\u015Flan\u011F\u0131c Tarixi",
      startTime: "Ba\u015Flan\u011F\u0131c Saat\u0131",
      endDate: "Bitm\u0259 Tarixi",
      endTime: "Bitm\u0259 Saat\u0131",
      prevYear: "\xD6nc\u0259ki il",
      nextYear: "Sonrak\u0131 il",
      prevMonth: "\xD6nc\u0259ki ay",
      nextMonth: "Sonrak\u0131 ay",
      year: "",
      month1: "Yanvar",
      month2: "Fevral",
      month3: "Mart",
      month4: "Aprel",
      month5: "May",
      month6: "\u0130yun",
      month7: "\u0130yul",
      month8: "Avqust",
      month9: "Sentyabr",
      month10: "Oktyabr",
      month11: "Noyabr",
      month12: "Dekabr",
      week: "h\u0259ft\u0259",
      weeks: {
        sun: "Baz",
        mon: "B.e",
        tue: "\xC7.a",
        wed: "\xC7\u0259r",
        thu: "C.a",
        fri: "C\xFCm",
        sat: "\u015E\u0259n"
      },
      months: {
        jan: "Yan",
        feb: "Fev",
        mar: "Mar",
        apr: "Apr",
        may: "May",
        jun: "\u0130yn",
        jul: "\u0130yl",
        aug: "Avq",
        sep: "Sen",
        oct: "Okt",
        nov: "Noy",
        dec: "Dek"
      }
    },
    select: {
      loading: "Y\xFCkl\u0259nir",
      noMatch: "N\u0259tic\u0259 tap\u0131lmad\u0131",
      noData: "M\u0259lumat yoxdur",
      placeholder: "Se\xE7"
    },
    mention: {
      loading: "Y\xFCkl\u0259nir"
    },
    cascader: {
      noMatch: "N\u0259tic\u0259 tap\u0131lmad\u0131",
      loading: "Y\xFCkl\u0259nir",
      placeholder: "Se\xE7",
      noData: "M\u0259lumat yoxdur"
    },
    pagination: {
      goto: "Get",
      pagesize: "/s\u0259hif\u0259",
      total: "Toplam {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Mesaj",
      confirm: "T\u0259sdiql\u0259",
      cancel: "\u0130mtina",
      error: "S\u0259hv"
    },
    upload: {
      deleteTip: "S\xFCr\xFC\u015Fd\xFCrm\u0259d\u0259n sonra sil",
      delete: "Sil",
      preview: "\xD6n izl\u0259",
      continue: "Davam et"
    },
    table: {
      emptyText: "M\u0259lumat yoxdur",
      confirmFilter: "T\u0259sdiql\u0259",
      resetFilter: "S\u0131f\u0131rla",
      clearFilter: "B\xFCt\xFCn",
      sumText: "C\u0259mi"
    },
    tree: {
      emptyText: "M\u0259lumat yoxdur"
    },
    transfer: {
      noMatch: "N\u0259tic\u0259 tap\u0131lmad\u0131",
      noData: "M\u0259lumat yoxdur",
      titles: ["Siyah\u0131 1", "Siyah\u0131 2"],
      filterPlaceholder: "K\u0259lim\u0259l\u0259ri daxil et",
      noCheckedFormat: "{total} \u0259d\u0259d",
      hasCheckedFormat: "{checked}/{total} se\xE7ildi"
    },
    image: {
      error: "S\u018FHV"
    },
    pageHeader: {
      title: "Geri"
    },
    popconfirm: {
      confirmButtonText: "B\u0259li",
      cancelButtonText: "Xeyr"
    },
    empty: {
      description: "M\u0259lumat yoxdur"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"bg.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/bg.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => bg
});
var bg = {
  name: "bg",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "\u0418\u0437\u0447\u0438\u0441\u0442\u0438"
    },
    datepicker: {
      now: "\u0421\u0435\u0433\u0430",
      today: "\u0414\u043D\u0435\u0441",
      cancel: "\u041E\u0442\u043A\u0430\u0436\u0438",
      clear: "\u0418\u0437\u0447\u0438\u0441\u0442\u0438",
      confirm: "\u041E\u041A",
      selectDate: "\u0418\u0437\u0431\u0435\u0440\u0438 \u0434\u0430\u0442\u0430",
      selectTime: "\u0418\u0437\u0431\u0435\u0440\u0438 \u0447\u0430\u0441",
      startDate: "\u041D\u0430\u0447\u0430\u043B\u043D\u0430 \u0434\u0430\u0442\u0430",
      startTime: "\u041D\u0430\u0447\u0430\u043B\u0435\u043D \u0447\u0430\u0441",
      endDate: "\u041A\u0440\u0430\u0439\u043D\u0430 \u0434\u0430\u0442\u0430",
      endTime: "\u041A\u0440\u0430\u0435\u043D \u0447\u0430\u0441",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      year: "",
      month1: "\u042F\u043D\u0443\u0430\u0440\u0438",
      month2: "\u0424\u0435\u0432\u0440\u0443\u0430\u0440\u0438",
      month3: "\u041C\u0430\u0440\u0442",
      month4: "\u0410\u043F\u0440\u0438\u043B",
      month5: "\u041C\u0430\u0439",
      month6: "\u042E\u043D\u0438",
      month7: "\u042E\u043B\u0438",
      month8: "\u0410\u0432\u0433\u0443\u0441\u0442",
      month9: "\u0421\u0435\u043F\u0442\u0435\u043C\u0432\u0440\u0438",
      month10: "\u041E\u043A\u0442\u043E\u043C\u0432\u0440\u0438",
      month11: "\u041D\u043E\u0435\u043C\u0432\u0440\u0438",
      month12: "\u0414\u0435\u043A\u0435\u043C\u0432\u0440\u0438",
      weeks: {
        sun: "\u041D\u0435\u0434",
        mon: "\u041F\u043E\u043D",
        tue: "\u0412\u0442\u043E",
        wed: "\u0421\u0440\u044F",
        thu: "\u0427\u0435\u0442",
        fri: "\u041F\u0435\u0442",
        sat: "\u0421\u044A\u0431"
      },
      months: {
        jan: "\u042F\u043D\u0443",
        feb: "\u0424\u0435\u0432",
        mar: "\u041C\u0430\u0440",
        apr: "\u0410\u043F\u0440",
        may: "\u041C\u0430\u0439",
        jun: "\u042E\u043D\u0438",
        jul: "\u042E\u043B\u0438",
        aug: "\u0410\u0432\u0433",
        sep: "\u0421\u0435\u043F",
        oct: "\u041E\u043A\u0442",
        nov: "\u041D\u043E\u0435",
        dec: "\u0414\u0435\u043A"
      }
    },
    select: {
      loading: "\u0417\u0430\u0440\u0435\u0436\u0434\u0430\u043D\u0435",
      noMatch: "\u041D\u044F\u043C\u0430 \u043D\u0430\u043C\u0435\u0440\u0435\u043D\u0438",
      noData: "\u041D\u044F\u043C\u0430 \u0434\u0430\u043D\u043D\u0438",
      placeholder: "\u0418\u0437\u0431\u0435\u0440\u0438"
    },
    mention: {
      loading: "\u0417\u0430\u0440\u0435\u0436\u0434\u0430\u043D\u0435"
    },
    cascader: {
      noMatch: "\u041D\u044F\u043C\u0430 \u043D\u0430\u043C\u0435\u0440\u0435\u043D\u0438",
      loading: "\u0417\u0430\u0440\u0435\u0436\u0434\u0430\u043D\u0435",
      placeholder: "\u0418\u0437\u0431\u0435\u0440\u0438",
      noData: "\u041D\u044F\u043C\u0430 \u0434\u0430\u043D\u043D\u0438"
    },
    pagination: {
      goto: "\u0418\u0434\u0438 \u043D\u0430",
      pagesize: "/\u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0430",
      total: "\u041E\u0431\u0449\u043E {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u0421\u044A\u043E\u0431\u0449\u0435\u043D\u0438\u0435",
      confirm: "\u041E\u041A",
      cancel: "\u041E\u0442\u043A\u0430\u0436\u0438",
      error: "\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0438 \u0434\u0430\u043D\u043D\u0438"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "\u0418\u0437\u0442\u0440\u0438\u0439",
      preview: "\u041F\u0440\u0435\u0433\u043B\u0435\u0434\u0430\u0439",
      continue: "\u041F\u0440\u043E\u0434\u044A\u043B\u0436\u0438"
    },
    table: {
      emptyText: "\u041D\u044F\u043C\u0430 \u0434\u0430\u043D\u043D\u0438",
      confirmFilter: "\u041F\u043E\u0442\u0432\u044A\u0440\u0434\u0438",
      resetFilter: "\u0418\u0437\u0447\u0438\u0441\u0442\u0438",
      clearFilter: "\u0412\u0441\u0438\u0447\u043A\u0438",
      sumText: "Sum"
    },
    tree: {
      emptyText: "\u041D\u044F\u043C\u0430 \u0434\u0430\u043D\u043D\u0438"
    },
    transfer: {
      noMatch: "\u041D\u044F\u043C\u0430 \u043D\u0430\u043C\u0435\u0440\u0435\u043D\u0438",
      noData: "\u041D\u044F\u043C\u0430 \u0434\u0430\u043D\u043D\u0438",
      titles: ["List 1", "List 2"],
      filterPlaceholder: "Enter keyword",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} checked"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"bn.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/bn.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => bn
});
var bn = {
  name: "bn",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u09A0\u09BF\u0995 \u0986\u099B\u09C7",
      clear: "\u0995\u09CD\u09B2\u09BF\u09DF\u09BE\u09B0"
    },
    datepicker: {
      now: "\u098F\u0996\u09A8",
      today: "\u0986\u099C",
      cancel: "\u09AC\u09BE\u09A4\u09BF\u09B2",
      clear: "\u0995\u09CD\u09B2\u09BF\u09DF\u09BE\u09B0",
      confirm: "\u09A0\u09BF\u0995 \u0986\u099B\u09C7",
      selectDate: "\u09A4\u09BE\u09B0\u09BF\u0996 \u09A8\u09BF\u09B0\u09CD\u09AC\u09BE\u099A\u09A8 \u0995\u09B0\u09C1\u09A8",
      selectTime: "\u09B8\u09AE\u09DF \u09A8\u09BF\u09B0\u09CD\u09AC\u09BE\u099A\u09A8 \u0995\u09B0\u09C1\u09A8",
      startDate: "\u09AF\u09C7 \u09A4\u09BE\u09B0\u09BF\u0996 \u09A5\u09C7\u0995\u09C7",
      startTime: "\u09AF\u09C7 \u09B8\u09AE\u09DF \u09A5\u09C7\u0995\u09C7",
      endDate: "\u09AF\u09C7 \u09A4\u09BE\u09B0\u09BF\u0996 \u09AA\u09B0\u09CD\u09AF\u09A8\u09CD\u09A4",
      endTime: "\u09AF\u09C7 \u09B8\u09AE\u09DF \u09AA\u09B0\u09CD\u09AF\u09A8\u09CD\u09A4",
      prevYear: "\u09AA\u09C2\u09B0\u09CD\u09AC\u09AC\u09B0\u09CD\u09A4\u09C0 \u09AC\u099B\u09B0",
      nextYear: "\u09AA\u09B0\u09AC\u09B0\u09CD\u09A4\u09C0 \u09AC\u099B\u09B0",
      prevMonth: "\u09AA\u09C2\u09B0\u09CD\u09AC\u09AC\u09B0\u09CD\u09A4\u09C0 \u09AE\u09BE\u09B8",
      nextMonth: "\u09AA\u09B0\u09AC\u09B0\u09CD\u09A4\u09C0 \u09AE\u09BE\u09B8",
      year: "\u09B8\u09BE\u09B2",
      month1: "\u099C\u09BE\u09A8\u09C1\u09DF\u09BE\u09B0\u09BF",
      month2: "\u09AB\u09C7\u09AC\u09CD\u09B0\u09C1\u09DF\u09BE\u09B0\u09C0",
      month3: "\u09AE\u09BE\u09B0\u09CD\u099A",
      month4: "\u098F\u09AA\u09CD\u09B0\u09BF\u09B2",
      month5: "\u09AE\u09C7",
      month6: "\u099C\u09C1\u09A8",
      month7: "\u099C\u09C1\u09B2\u09BE\u0987",
      month8: "\u0986\u0997\u09B7\u09CD\u099F",
      month9: "\u09B8\u09C7\u09AA\u09CD\u099F\u09C7\u09AE\u09CD\u09AC\u09B0",
      month10: "\u0985\u0995\u09CD\u099F\u09CB\u09AC\u09B0",
      month11: "\u09A8\u09AD\u09C7\u09AE\u09CD\u09AC\u09B0",
      month12: "\u09A1\u09BF\u09B8\u09C7\u09AE\u09CD\u09AC\u09B0",
      week: "\u09B8\u09BE\u09AA\u09CD\u09A4\u09BE\u09B9",
      weeks: {
        sun: "\u09B0\u09AC\u09BF",
        mon: "\u09B8\u09CB\u09AE",
        tue: "\u09AE\u0999\u09CD\u0997\u09B2",
        wed: "\u09AC\u09C1\u09A7",
        thu: "\u09AC\u09C3\u09B9\u0983",
        fri: "\u09B6\u09C1\u0995\u09CD\u09B0",
        sat: "\u09B6\u09A8\u09BF"
      },
      months: {
        jan: "\u099C\u09BE\u09A8\u09C1",
        feb: "\u09AB\u09C7\u09AC\u09CD\u09B0\u09C1",
        mar: "\u09AE\u09BE\u09B0\u09CD\u099A",
        apr: "\u098F\u09AA\u09CD\u09B0\u09BF",
        may: "\u09AE\u09C7",
        jun: "\u099C\u09C1\u09A8",
        jul: "\u099C\u09C1\u09B2\u09BE",
        aug: "\u0986\u0997",
        sep: "\u09B8\u09C7\u09AA\u09CD\u099F\u09C7",
        oct: "\u0986\u0995\u09CD\u099F\u09CB",
        nov: "\u09A8\u09AD\u09C7",
        dec: "\u09A1\u09BF\u09B8\u09C7"
      }
    },
    select: {
      loading: "\u09B2\u09CB\u09A1 \u09B9\u099A\u09CD\u099B\u09C7",
      noMatch: "\u0995\u09CB\u09A8 \u09AE\u09BF\u09B2 \u09AA\u0993\u09DF\u09BE \u09AF\u09BE\u09DF\u09A8\u09BF",
      noData: "\u0995\u09CB\u09A8 \u09A1\u09BE\u099F\u09BE \u09A8\u09C7\u0987",
      placeholder: "\u09A8\u09BF\u09B0\u09CD\u09AC\u09BE\u099A\u09A8 \u0995\u09B0\u09C1\u09A8"
    },
    mention: {
      loading: "\u09B2\u09CB\u09A1 \u09B9\u099A\u09CD\u099B\u09C7"
    },
    cascader: {
      noMatch: "\u0995\u09CB\u09A8 \u09AE\u09BF\u09B2 \u09AA\u0993\u09DF\u09BE \u09AF\u09BE\u09DF\u09A8\u09BF",
      loading: "\u09B2\u09CB\u09A1 \u09B9\u099A\u09CD\u099B\u09C7",
      placeholder: "\u09A8\u09BF\u09B0\u09CD\u09AC\u09BE\u099A\u09A8 \u0995\u09B0\u09C1\u09A8",
      noData: "\u0995\u09CB\u09A8 \u09A1\u09BE\u099F\u09BE \u09A8\u09C7\u0987"
    },
    pagination: {
      goto: "\u09AF\u09BE\u09A8",
      pagesize: "/\u09AA\u09C7\u099C",
      total: "\u09AE\u09CB\u099F {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages",
      deprecationWarning: "\u0985\u09AA\u09CD\u09B0\u099A\u09B2\u09BF\u09A4 (Deprecated) \u09AC\u09CD\u09AF\u09BE\u09AC\u09B9\u09BE\u09B0 \u09AA\u0993\u09DF\u09BE \u0997\u09C7\u099B\u09C7, \u0986\u09B0\u0993 \u099C\u09BE\u09A8\u09A4\u09C7 \u099A\u09BE\u0987\u09B2\u09C7, \u09A6\u09DF\u09BE \u0995\u09B0\u09C7 el-pagination \u098F\u09B0 \u09A1\u0995\u09C1\u09AE\u09C7\u09A8\u09CD\u099F\u09C7\u09B6\u09A8 \u09A6\u09C7\u0996\u09C1\u09A8"
    },
    messagebox: {
      title: "\u09AC\u09BE\u09B0\u09CD\u09A4\u09BE",
      confirm: "\u09A0\u09BF\u0995 \u0986\u099B\u09C7",
      cancel: "\u09AC\u09BE\u09A4\u09BF\u09B2",
      error: "\u0987\u09A8\u09AA\u09C1\u099F \u09A1\u09BE\u099F\u09BE \u0997\u09CD\u09B0\u09B9\u09A8\u09AF\u09CB\u0997\u09CD\u09AF \u09A8\u09DF"
    },
    upload: {
      deleteTip: "\u0985\u09AA\u09B8\u09BE\u09B0\u09A3 \u0995\u09B0\u09A4\u09C7 \"\u09A1\u09BF\u09B2\u09BF\u099F\" \u098F \u0995\u09CD\u09B2\u09BF\u0995 \u0995\u09B0\u09C1\u09A8",
      delete: "\u09A1\u09BF\u09B2\u09BF\u099F",
      preview: "\u09AA\u09CD\u09B0\u09BF\u09AD\u09BF\u0989",
      continue: "\u099A\u09BE\u09B2\u09BF\u09DF\u09C7 \u09AF\u09BE\u09A8"
    },
    table: {
      emptyText: "\u0995\u09CB\u09A8 \u09A1\u09BE\u099F\u09BE \u09A8\u09C7\u0987",
      confirmFilter: "\u09A8\u09BF\u09B6\u09CD\u099A\u09BF\u09A4 \u0995\u09B0\u09C1\u09A8",
      resetFilter: "\u09B0\u09BF\u09B8\u09C7\u099F",
      clearFilter: "\u09B8\u09AC",
      sumText: "\u09B8\u09BE\u09B0\u09BE\u0982\u09B6"
    },
    tree: {
      emptyText: "\u0995\u09CB\u09A8 \u09A1\u09BE\u099F\u09BE \u09A8\u09C7\u0987"
    },
    transfer: {
      noMatch: "\u0995\u09CB\u09A8 \u09AE\u09BF\u09B2 \u09AA\u0993\u09DF\u09BE \u09AF\u09BE\u09DF\u09A8\u09BF",
      noData: "\u0995\u09CB\u09A8 \u09A1\u09BE\u099F\u09BE \u09A8\u09C7\u0987",
      titles: ["\u09B2\u09BF\u09B8\u09CD\u099F \u09E7", "\u09B2\u09BF\u09B8\u09CD\u099F \u09E8"],
      filterPlaceholder: "\u09B8\u09BE\u09B0\u09CD\u099A \u0995\u09B0\u09C1\u09A8",
      noCheckedFormat: "{total} \u0986\u0987\u099F\u09C7\u09AE",
      hasCheckedFormat: "{checked}/{total} \u099F\u09BF\u0995 \u0995\u09B0\u09BE \u09B9\u09DF\u09C7\u099B\u09C7"
    },
    image: {
      error: "\u09AC\u09CD\u09AF\u09B0\u09CD\u09A5 \u09B9\u09DF\u09C7\u099B\u09C7"
    },
    pageHeader: {
      title: "\u09AA\u09BF\u099B\u09A8\u09C7"
    },
    popconfirm: {
      confirmButtonText: "\u09B9\u09CD\u09AF\u09BE",
      cancelButtonText: "\u09A8\u09BE"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ca.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/ca.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => ca
});
var ca = {
  name: "ca",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Confirmar",
      clear: "Netejar"
    },
    datepicker: {
      now: "Ara",
      today: "Avui",
      cancel: "Cancel\xB7lar",
      clear: "Netejar",
      confirm: "Confirmar",
      selectDate: "Seleccionar data",
      selectTime: "Seleccionar hora",
      startDate: "Data Inici",
      startTime: "Hora Inici",
      endDate: "Data Final",
      endTime: "Hora Final",
      prevYear: "Any anterior",
      nextYear: "Pr\xF2xim Any",
      prevMonth: "Mes anterior",
      nextMonth: "Pr\xF2xim Mes",
      year: "",
      month1: "Gener",
      month2: "Febrer",
      month3: "Mar\xE7",
      month4: "Abril",
      month5: "Maig",
      month6: "Juny",
      month7: "Juliol",
      month8: "Agost",
      month9: "Setembre",
      month10: "Octubre",
      month11: "Novembre",
      month12: "Desembre",
      weeks: {
        sun: "Dg",
        mon: "Dl",
        tue: "Dt",
        wed: "Dc",
        thu: "Dj",
        fri: "Dv",
        sat: "Ds"
      },
      months: {
        jan: "Gen",
        feb: "Febr",
        mar: "Mar\xE7",
        apr: "Abr",
        may: "Maig",
        jun: "Juny",
        jul: "Jul",
        aug: "Ag",
        sep: "Set",
        oct: "Oct",
        nov: "Nov",
        dec: "Des"
      }
    },
    select: {
      loading: "Carregant",
      noMatch: "No hi ha dades que coincideixin",
      noData: "Sense Dades",
      placeholder: "Seleccionar"
    },
    mention: {
      loading: "Carregant"
    },
    cascader: {
      noMatch: "No hi ha dades que coincideixin",
      loading: "Carregant",
      placeholder: "Seleccionar",
      noData: "Sense Dades"
    },
    pagination: {
      goto: "Anar a",
      pagesize: "/p\xE0gina",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      confirm: "Acceptar",
      cancel: "Cancel\xB7lar",
      error: "Entrada inv\xE0lida"
    },
    upload: {
      deleteTip: "premi eliminar per descartar",
      delete: "Eliminar",
      preview: "Vista Pr\xE8via",
      continue: "Continuar"
    },
    table: {
      emptyText: "Sense Dades",
      confirmFilter: "Confirmar",
      resetFilter: "Netejar",
      clearFilter: "Tot",
      sumText: "Tot"
    },
    tree: {
      emptyText: "Sense Dades"
    },
    transfer: {
      noMatch: "No hi ha dades que coincideixin",
      noData: "Sense Dades",
      titles: ["Llista 1", "Llista 2"],
      filterPlaceholder: "Introdueix la paraula clau",
      noCheckedFormat: "{total} \xEDtems",
      hasCheckedFormat: "{checked}/{total} seleccionats"
    },
    image: {
      error: "HA FALLAT"
    },
    pageHeader: {
      title: "Tornar"
    },
    popconfirm: {
      confirmButtonText: "S\xED",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cs.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/cs.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => cs
});
var cs = {
  name: "cs",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "Vymazat"
    },
    datepicker: {
      now: "Te\u010F",
      today: "Dnes",
      cancel: "Zru\u0161it",
      clear: "Vymazat",
      confirm: "OK",
      selectDate: "Vybrat datum",
      selectTime: "Vybrat \u010Das",
      startDate: "Datum za\u010D\xE1tku",
      startTime: "\u010Cas za\u010D\xE1tku",
      endDate: "Datum konce",
      endTime: "\u010Cas konce",
      prevYear: "P\u0159edchoz\xED rok",
      nextYear: "P\u0159\xED\u0161t\xED rok",
      prevMonth: "P\u0159edchoz\xED m\u011Bs\xEDc",
      nextMonth: "P\u0159\xED\u0161t\xED m\u011Bs\xEDc",
      day: "Den",
      week: "T\xFDden",
      month: "M\u011Bs\xEDc",
      year: "Rok",
      month1: "Leden",
      month2: "\xDAnor",
      month3: "B\u0159ezen",
      month4: "Duben",
      month5: "Kv\u011Bten",
      month6: "\u010Cerven",
      month7: "\u010Cervenec",
      month8: "Srpen",
      month9: "Z\xE1\u0159\xED",
      month10: "\u0158\xEDjen",
      month11: "Listopad",
      month12: "Prosinec",
      weeks: {
        sun: "Ne",
        mon: "Po",
        tue: "\xDAt",
        wed: "St",
        thu: "\u010Ct",
        fri: "P\xE1",
        sat: "So"
      },
      months: {
        jan: "Led",
        feb: "\xDAno",
        mar: "B\u0159e",
        apr: "Dub",
        may: "Kv\u011B",
        jun: "\u010Cer",
        jul: "\u010Cvc",
        aug: "Srp",
        sep: "Z\xE1\u0159",
        oct: "\u0158\xEDj",
        nov: "Lis",
        dec: "Pro"
      }
    },
    select: {
      loading: "Na\u010D\xEDt\xE1n\xED",
      noMatch: "\u017D\xE1dn\xE1 shoda",
      noData: "\u017D\xE1dn\xE1 data",
      placeholder: "Vybrat"
    },
    mention: {
      loading: "Na\u010D\xEDt\xE1n\xED"
    },
    cascader: {
      noMatch: "\u017D\xE1dn\xE1 shoda",
      loading: "Na\u010D\xEDt\xE1n\xED",
      placeholder: "Vybrat",
      noData: "\u017D\xE1dn\xE1 data"
    },
    pagination: {
      goto: "J\xEDt na",
      pagesize: "na stranu",
      total: "Celkem {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Zpr\xE1va",
      confirm: "OK",
      cancel: "Zru\u0161it",
      error: "Neplatn\xFD vstup"
    },
    upload: {
      deleteTip: "Stisknout pro smaz\xE1n\xED",
      delete: "Vymazat",
      preview: "N\xE1hled",
      continue: "Pokra\u010Dovat"
    },
    table: {
      emptyText: "\u017D\xE1dn\xE1 data",
      confirmFilter: "Potvrdit",
      resetFilter: "Resetovat",
      clearFilter: "V\u0161e",
      sumText: "Celkem"
    },
    tree: {
      emptyText: "\u017D\xE1dn\xE1 data"
    },
    transfer: {
      noMatch: "\u017D\xE1dn\xE1 shoda",
      noData: "\u017D\xE1dn\xE1 data",
      titles: ["Seznam 1", "Seznam 2"],
      filterPlaceholder: "Kl\xED\u010Dov\xE9 slovo",
      noCheckedFormat: "{total} polo\u017Eek",
      hasCheckedFormat: "{checked}/{total} vybr\xE1no"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"da.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/da.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => da
});
var da = {
  name: "da",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "Ryd"
    },
    datepicker: {
      now: "Nu",
      today: "I dag",
      cancel: "Annuller",
      clear: "Ryd",
      confirm: "OK",
      selectDate: "V\xE6lg dato",
      selectTime: "V\xE6lg tidspunkt",
      startDate: "Startdato",
      startTime: "Starttidspunkt",
      endDate: "Slutdato",
      endTime: "Sluttidspunkt",
      prevYear: "Forrige \xE5r",
      nextYear: "N\xE6ste \xE5r",
      prevMonth: "Forrige m\xE5ned",
      nextMonth: "N\xE6ste m\xE5ned",
      year: "",
      month1: "Januar",
      month2: "Februar",
      month3: "Marts",
      month4: "April",
      month5: "Maj",
      month6: "Juni",
      month7: "Juli",
      month8: "August",
      month9: "September",
      month10: "Oktober",
      month11: "November",
      month12: "December",
      week: "uge",
      weeks: {
        sun: "S\xF8n",
        mon: "Man",
        tue: "Tir",
        wed: "Ons",
        thu: "Tor",
        fri: "Fre",
        sat: "L\xF8r"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "Maj",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Okt",
        nov: "Nov",
        dec: "Dec"
      }
    },
    select: {
      loading: "Henter",
      noMatch: "Ingen matchende data",
      noData: "Ingen data",
      placeholder: "V\xE6lg"
    },
    mention: {
      loading: "Henter"
    },
    cascader: {
      noMatch: "Ingen matchende data",
      loading: "Henter",
      placeholder: "V\xE6lg",
      noData: "Ingen data"
    },
    pagination: {
      goto: "G\xE5 til",
      pagesize: "/side",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      confirm: "OK",
      cancel: "Annuller",
      error: "Ugyldig input"
    },
    upload: {
      deleteTip: "tryk slet for at fjerne",
      delete: "Slet",
      preview: "Forh\xE5ndsvisning",
      continue: "Forts\xE6t"
    },
    table: {
      emptyText: "Ingen data",
      confirmFilter: "Bekr\xE6ft",
      resetFilter: "Nulstil",
      clearFilter: "Alle",
      sumText: "Sum"
    },
    tree: {
      emptyText: "Ingen data"
    },
    transfer: {
      noMatch: "Ingen matchende data",
      noData: "Ingen data",
      titles: ["Liste 1", "Liste 2"],
      filterPlaceholder: "Indtast s\xF8geord",
      noCheckedFormat: "{total} emner",
      hasCheckedFormat: "{checked}/{total} valgt"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"de.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/de.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => de
});
var de = {
  name: "de",
  el: {
    breadcrumb: {
      label: "Brotkr\xFCmel"
    },
    colorpicker: {
      confirm: "OK",
      clear: "Leeren"
    },
    datepicker: {
      now: "Jetzt",
      today: "Heute",
      cancel: "Abbrechen",
      clear: "Leeren",
      confirm: "OK",
      selectDate: "Datum w\xE4hlen",
      selectTime: "Uhrzeit w\xE4hlen",
      startDate: "Startdatum",
      startTime: "Startzeit",
      endDate: "Enddatum",
      endTime: "Endzeit",
      prevYear: "Letztes Jahr",
      nextYear: "N\xE4chtes Jahr",
      prevMonth: "Letzter Monat",
      nextMonth: "N\xE4chster Monat",
      day: "Tag",
      week: "Woche",
      month: "Monat",
      year: "",
      month1: "Januar",
      month2: "Februar",
      month3: "M\xE4rz",
      month4: "April",
      month5: "Mai",
      month6: "Juni",
      month7: "Juli",
      month8: "August",
      month9: "September",
      month10: "Oktober",
      month11: "November",
      month12: "Dezember",
      weeks: {
        sun: "So",
        mon: "Mo",
        tue: "Di",
        wed: "Mi",
        thu: "Do",
        fri: "Fr",
        sat: "Sa"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "M\xE4r",
        apr: "Apr",
        may: "Mai",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Okt",
        nov: "Nov",
        dec: "Dez"
      }
    },
    select: {
      loading: "L\xE4dt.",
      noMatch: "Nichts gefunden.",
      noData: "Keine Daten",
      placeholder: "Daten w\xE4hlen"
    },
    mention: {
      loading: "L\xE4dt."
    },
    cascader: {
      noMatch: "Nichts gefunden.",
      loading: "L\xE4dt.",
      placeholder: "Daten w\xE4hlen",
      noData: "Keine Daten"
    },
    pagination: {
      goto: "Gehe zu",
      pagesize: " pro Seite",
      total: "Gesamt {total}",
      pageClassifier: "",
      page: "Seite",
      prev: "Zur vorherigen Seite gehen",
      next: "Zur n\xE4chsten Seite gehen",
      currentPage: "Seite {pager}",
      prevPages: "Vorherige {pager} Seiten",
      nextPages: "N\xE4chste {pager} Seiten"
    },
    messagebox: {
      confirm: "OK",
      cancel: "Abbrechen",
      error: "Fehler"
    },
    upload: {
      deleteTip: "Klicke l\xF6schen zum entfernen",
      delete: "L\xF6schen",
      preview: "Vorschau",
      continue: "Fortsetzen"
    },
    table: {
      emptyText: "Keine Daten",
      confirmFilter: "Anwenden",
      resetFilter: "Zur\xFCcksetzen",
      clearFilter: "Alles ",
      sumText: "Summe"
    },
    tour: {
      next: "Weiter",
      previous: "Zur\xFCck",
      finish: "Fertig"
    },
    tree: {
      emptyText: "Keine Eintr\xE4ge"
    },
    transfer: {
      noMatch: "Nichts gefunden.",
      noData: "Keine Eintr\xE4ge",
      titles: ["Liste 1", "Liste 2"],
      filterPlaceholder: "Eintr\xE4ge filtern",
      noCheckedFormat: "{total} Eintr\xE4ge",
      hasCheckedFormat: "{checked}/{total} ausgew\xE4hlt"
    },
    image: {
      error: "FEHLGESCHLAGEN"
    },
    pageHeader: {
      title: "Zur\xFCck"
    },
    popconfirm: {
      confirmButtonText: "Ja",
      cancelButtonText: "Nein"
    },
    carousel: {
      leftArrow: "Karussell-Pfeil links",
      rightArrow: "Karussell-Pfeil rechts",
      indicator: "Karussell zu Index {index} wechseln"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"el.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/el.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => el
});
var el = {
  name: "el",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u0395\u03BD\u03C4\u03AC\u03BE\u03B5\u03B9",
      clear: "\u039A\u03B1\u03B8\u03B1\u03C1\u03B9\u03C3\u03BC\u03CC\u03C2"
    },
    datepicker: {
      now: "\u03A4\u03CE\u03C1\u03B1",
      today: "\u03A3\u03AE\u03BC\u03B5\u03C1\u03B1",
      cancel: "\u0391\u03BA\u03CD\u03C1\u03C9\u03C3\u03B7",
      clear: "\u039A\u03B1\u03B8\u03B1\u03C1\u03B9\u03C3\u03BC\u03CC\u03C2",
      confirm: "\u0395\u03BD\u03C4\u03AC\u03BE\u03B5\u03B9",
      selectDate: "\u0395\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03B7\u03BC\u03AD\u03C1\u03B1",
      selectTime: "\u0395\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03CE\u03C1\u03B1",
      startDate: "\u0397\u03BC\u03B5\u03C1\u03BF\u03BC\u03B7\u03BD\u03AF\u03B1 \u0388\u03BD\u03B1\u03C1\u03BE\u03B7\u03C2",
      startTime: "\u03A9\u03C1\u03B1 \u0388\u03BD\u03B1\u03C1\u03BE\u03B7\u03C2",
      endDate: "\u0397\u03BC\u03B5\u03C1\u03BF\u03BC\u03B7\u03BD\u03AF\u03B1 \u039B\u03AE\u03BE\u03B7\u03C2",
      endTime: "\u03A9\u03C1\u03B1 \u039B\u03AE\u03BE\u03B7\u03C2",
      prevYear: "\u03A0\u03C1\u03BF\u03B7\u03B3\u03BF\u03CD\u03BC\u03B5\u03BD\u03BF \u0388\u03C4\u03BF\u03C2",
      nextYear: "\u0395\u03C0\u03CC\u03BC\u03B5\u03BD\u03BF \u0388\u03C4\u03BF\u03C2",
      prevMonth: "\u03A0\u03C1\u03BF\u03B7\u03B3\u03BF\u03CD\u03BC\u03B5\u03BD\u03BF\u03C2 \u039C\u03AE\u03BD\u03B1\u03C2",
      nextMonth: "\u0395\u03C0\u03CC\u03BC\u03B5\u03BD\u03BF\u03C2 \u039C\u03AE\u03BD\u03B1\u03C2",
      year: "\u0388\u03C4\u03BF\u03C2",
      month1: "\u0399\u03B1\u03BD\u03BF\u03C5\u03AC\u03C1\u03B9\u03BF\u03C2",
      month2: "\u03A6\u03B5\u03B2\u03C1\u03BF\u03C5\u03AC\u03C1\u03B9\u03BF\u03C2",
      month3: "\u039C\u03AC\u03C1\u03C4\u03B9\u03BF\u03C2",
      month4: "\u0391\u03C0\u03C1\u03AF\u03BB\u03B9\u03BF\u03C2",
      month5: "\u039C\u03AC\u03B9\u03BF\u03C2",
      month6: "\u0399\u03BF\u03CD\u03BD\u03B9\u03BF\u03C2",
      month7: "\u0399\u03BF\u03CD\u03BB\u03B9\u03BF\u03C2",
      month8: "\u0391\u03CD\u03B3\u03BF\u03C5\u03C3\u03C4\u03BF\u03C2",
      month9: "\u03A3\u03B5\u03C0\u03C4\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2",
      month10: "\u039F\u03BA\u03C4\u03CE\u03B2\u03C1\u03B9\u03BF\u03C2",
      month11: "\u039D\u03BF\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2",
      month12: "\u0394\u03B5\u03BA\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2",
      weeks: {
        sun: "\u039A\u03C5\u03C1",
        mon: "\u0394\u03B5\u03C5",
        tue: "\u03A4\u03C1\u03B9",
        wed: "\u03A4\u03B5\u03C4",
        thu: "\u03A0\u03B5\u03BC",
        fri: "\u03A0\u03B1\u03C1",
        sat: "\u03A3\u03B1\u03B2"
      },
      months: {
        jan: "\u0399\u03B1\u03BD",
        feb: "\u03A6\u03B5\u03B2",
        mar: "\u039C\u03B1\u03C1",
        apr: "\u0391\u03C0\u03C1",
        may: "\u039C\u03B1\u03CA",
        jun: "\u0399\u03BF\u03C5\u03BD",
        jul: "\u0399\u03BF\u03C5\u03BB",
        aug: "\u0391\u03C5\u03B3",
        sep: "\u03A3\u03B5\u03C0",
        oct: "\u039F\u03BA\u03C4",
        nov: "\u039D\u03BF\u03B5",
        dec: "\u0394\u03B5\u03BA"
      }
    },
    select: {
      loading: "\u03A6\u03CC\u03C1\u03C4\u03C9\u03C3\u03B7",
      noMatch: "\u0394\u03B5\u03BD \u03B2\u03C1\u03AD\u03B8\u03B7\u03BA\u03B1\u03BD \u03B1\u03C0\u03BF\u03C4\u03B5\u03BB\u03AD\u03C3\u03BC\u03B1\u03C4\u03B1",
      noData: "\u03A7\u03C9\u03C1\u03AF\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1",
      placeholder: "\u0395\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE"
    },
    mention: {
      loading: "\u03A6\u03CC\u03C1\u03C4\u03C9\u03C3\u03B7"
    },
    cascader: {
      noMatch: "\u0394\u03B5\u03BD \u03B2\u03C1\u03AD\u03B8\u03B7\u03BA\u03B1\u03BD \u03B1\u03C0\u03BF\u03C4\u03B5\u03BB\u03AD\u03C3\u03BC\u03B1\u03C4\u03B1",
      loading: "\u03A6\u03CC\u03C1\u03C4\u03C9\u03C3\u03B7",
      placeholder: "\u0395\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE",
      noData: "\u03A7\u03C9\u03C1\u03AF\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1"
    },
    pagination: {
      goto: "\u039C\u03B5\u03C4\u03AC\u03B2\u03B1\u03C3\u03B7 \u03C3\u03B5",
      pagesize: "/\u03C3\u03B5\u03BB\u03AF\u03B4\u03B1",
      total: "\u03A3\u03CD\u03BD\u03BF\u03BB\u03BF {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u039C\u03AE\u03BD\u03C5\u03BC\u03B1",
      confirm: "\u0395\u03BD\u03C4\u03AC\u03BE\u03B5\u03B9",
      cancel: "\u0391\u03BA\u03CD\u03C1\u03C9\u03C3\u03B7",
      error: "\u0386\u03BA\u03C5\u03C1\u03B7 \u03B5\u03B9\u03C3\u03B1\u03B3\u03C9\u03B3\u03AE"
    },
    upload: {
      deleteTip: "\u03A0\u03AC\u03C4\u03B7\u03C3\u03B5 \u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE \u03B3\u03B9\u03B1 \u03B1\u03C6\u03B1\u03AF\u03C1\u03B5\u03C3\u03B7",
      delete: "\u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE",
      preview: "\u03A0\u03C1\u03BF\u03B5\u03C0\u03B9\u03C3\u03BA\u03CC\u03C0\u03B7\u03C3\u03B7",
      continue: "\u03A3\u03C5\u03BD\u03AD\u03C7\u03B5\u03B9\u03B1"
    },
    table: {
      emptyText: "\u03A7\u03C9\u03C1\u03AF\u03C2 \u0394\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1",
      confirmFilter: "\u0395\u03C0\u03B9\u03B2\u03B5\u03B2\u03B1\u03AF\u03C9\u03C3\u03B7",
      resetFilter: "\u0395\u03C0\u03B1\u03BD\u03B1\u03C6\u03BF\u03C1\u03AC",
      clearFilter: "\u038C\u03BB\u03B1",
      sumText: "\u03A3\u03CD\u03BD\u03BF\u03BB\u03BF"
    },
    tree: {
      emptyText: "\u03A7\u03C9\u03C1\u03AF\u03C2 \u0394\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1"
    },
    transfer: {
      noMatch: "\u0394\u03B5\u03BD \u03B2\u03C1\u03AD\u03B8\u03B7\u03BA\u03B1\u03BD \u03B1\u03C0\u03BF\u03C4\u03B5\u03BB\u03AD\u03C3\u03BC\u03B1\u03C4\u03B1",
      noData: "\u03A7\u03C9\u03C1\u03AF\u03C2 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03B1",
      titles: ["\u039B\u03AF\u03C3\u03C4\u03B1 1", "\u039B\u03AF\u03C3\u03C4\u03B1 2"],
      filterPlaceholder: "\u0391\u03BD\u03B1\u03B6\u03AE\u03C4\u03B7\u03C3\u03B7",
      noCheckedFormat: "{total} \u0391\u03BD\u03C4\u03B9\u03BA\u03B5\u03AF\u03BC\u03B5\u03BD\u03B1",
      hasCheckedFormat: "{checked}/{total} \u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03B1"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"en.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/en.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => English
});
var English = {
  name: "en",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "Clear",
      defaultLabel: "color picker",
      description: "current color is {color}. press enter to select a new color.",
      alphaLabel: "pick alpha value"
    },
    datepicker: {
      now: "Now",
      today: "Today",
      cancel: "Cancel",
      clear: "Clear",
      confirm: "OK",
      dateTablePrompt: "Use the arrow keys and enter to select the day of the month",
      monthTablePrompt: "Use the arrow keys and enter to select the month",
      yearTablePrompt: "Use the arrow keys and enter to select the year",
      selectedDate: "Selected date",
      selectDate: "Select date",
      selectTime: "Select time",
      startDate: "Start Date",
      startTime: "Start Time",
      endDate: "End Date",
      endTime: "End Time",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      year: "",
      month1: "January",
      month2: "February",
      month3: "March",
      month4: "April",
      month5: "May",
      month6: "June",
      month7: "July",
      month8: "August",
      month9: "September",
      month10: "October",
      month11: "November",
      month12: "December",
      week: "week",
      weeks: {
        sun: "Sun",
        mon: "Mon",
        tue: "Tue",
        wed: "Wed",
        thu: "Thu",
        fri: "Fri",
        sat: "Sat"
      },
      weeksFull: {
        sun: "Sunday",
        mon: "Monday",
        tue: "Tuesday",
        wed: "Wednesday",
        thu: "Thursday",
        fri: "Friday",
        sat: "Saturday"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "May",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Oct",
        nov: "Nov",
        dec: "Dec"
      }
    },
    inputNumber: {
      decrease: "decrease number",
      increase: "increase number"
    },
    select: {
      loading: "Loading",
      noMatch: "No matching data",
      noData: "No data",
      placeholder: "Select"
    },
    mention: {
      loading: "Loading"
    },
    dropdown: {
      toggleDropdown: "Toggle Dropdown"
    },
    cascader: {
      noMatch: "No matching data",
      loading: "Loading",
      placeholder: "Select",
      noData: "No data"
    },
    pagination: {
      goto: "Go to",
      pagesize: "/page",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages",
      deprecationWarning: "Deprecated usages detected, please refer to the el-pagination documentation for more details"
    },
    dialog: {
      close: "Close this dialog"
    },
    drawer: {
      close: "Close this dialog"
    },
    messagebox: {
      title: "Message",
      confirm: "OK",
      cancel: "Cancel",
      error: "Illegal input",
      close: "Close this dialog"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "Delete",
      preview: "Preview",
      continue: "Continue"
    },
    slider: {
      defaultLabel: "slider between {min} and {max}",
      defaultRangeStartLabel: "pick start value",
      defaultRangeEndLabel: "pick end value"
    },
    table: {
      emptyText: "No Data",
      confirmFilter: "Confirm",
      resetFilter: "Reset",
      clearFilter: "All",
      sumText: "Sum"
    },
    tour: {
      next: "Next",
      previous: "Previous",
      finish: "Finish"
    },
    tree: {
      emptyText: "No Data"
    },
    transfer: {
      noMatch: "No matching data",
      noData: "No data",
      titles: ["List 1", "List 2"],
      filterPlaceholder: "Enter keyword",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} checked"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"eo.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/eo.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => eo
});
var eo = {
  name: "eo",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Bone",
      clear: "Malplenigi"
    },
    datepicker: {
      now: "Nun",
      today: "Hodia\u016D",
      cancel: "Nuligi",
      clear: "Malplenigi",
      confirm: "Bone",
      selectDate: "Elektu daton",
      selectTime: "Elektu horon",
      startDate: "Komenca Dato",
      startTime: "Komenca Horo",
      endDate: "Fina Dato",
      endTime: "Fina Horo",
      prevYear: "Anta\u016Da Jaro",
      nextYear: "Sekva Jaro",
      prevMonth: "Anta\u016Da Monato",
      nextMonth: "Sekva Monato",
      year: "Jaro",
      month1: "Januaro",
      month2: "Februaro",
      month3: "Marto",
      month4: "Aprilo",
      month5: "Majo",
      month6: "Junio",
      month7: "Julio",
      month8: "A\u016Dgusto",
      month9: "Septembro",
      month10: "Oktobro",
      month11: "Novembro",
      month12: "Decembro",
      week: "Semajno",
      weeks: {
        sun: "Dim",
        mon: "Lun",
        tue: "Mar",
        wed: "Mer",
        thu: "\u0134a\u016D",
        fri: "Ven",
        sat: "Sab"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "Maj",
        jun: "Jun",
        jul: "Jul",
        aug: "A\u016Dg",
        sep: "Sep",
        oct: "Okt",
        nov: "Nov",
        dec: "Dec"
      }
    },
    select: {
      loading: "\u015Car\u011Dante",
      noMatch: "Neniuj kongruaj datumoj",
      noData: "Neniuj datumoj",
      placeholder: "Bonvolu elekti"
    },
    mention: {
      loading: "\u015Car\u011Dante"
    },
    cascader: {
      noMatch: "Neniuj kongruaj datumoj",
      loading: "\u015Car\u011Dante",
      placeholder: "Bonvolu elekti",
      noData: "Neniuj datumoj"
    },
    pagination: {
      goto: "Iru al",
      pagesize: "/ pa\u011Do",
      total: "Entute {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Mesa\u011Do",
      confirm: "Bone",
      cancel: "Nuligi",
      error: "Nevalida Enigo!"
    },
    upload: {
      deleteTip: 'Premu "Delete" por forigi',
      delete: "Forigi",
      preview: "Anta\u016Drigardi",
      continue: "Da\u016Drigi"
    },
    table: {
      emptyText: "Neniuj datumoj",
      confirmFilter: "Konfirmi",
      resetFilter: "Restarigi",
      clearFilter: "\u0108iuj",
      sumText: "Sumo"
    },
    tree: {
      emptyText: "Neniuj datumoj"
    },
    transfer: {
      noMatch: "Neniuj kongruaj datumoj",
      noData: "Neniuj datumoj",
      titles: ["Listo 1", "Listo 2"],
      filterPlaceholder: "Enigu \u015Dlosilvorton",
      noCheckedFormat: "{total} elementoj",
      hasCheckedFormat: "{checked}/{total} elektitaj"
    },
    image: {
      error: "MALSUKCESIS"
    },
    pageHeader: {
      title: "Reen"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"es.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/es.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => es
});
var es = {
  name: "es",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Confirmar",
      clear: "Despejar"
    },
    datepicker: {
      now: "Ahora",
      today: "Hoy",
      cancel: "Cancelar",
      clear: "Despejar",
      confirm: "Confirmar",
      selectDate: "Seleccionar fecha",
      selectTime: "Seleccionar hora",
      startDate: "Fecha Incial",
      startTime: "Hora Inicial",
      endDate: "Fecha Final",
      endTime: "Hora Final",
      prevYear: "A\xF1o Anterior",
      nextYear: "Pr\xF3ximo A\xF1o",
      prevMonth: "Mes Anterior",
      nextMonth: "Pr\xF3ximo Mes",
      year: "",
      month1: "enero",
      month2: "febrero",
      month3: "marzo",
      month4: "abril",
      month5: "mayo",
      month6: "junio",
      month7: "julio",
      month8: "agosto",
      month9: "septiembre",
      month10: "octubre",
      month11: "noviembre",
      month12: "diciembre",
      weeks: {
        sun: "dom",
        mon: "lun",
        tue: "mar",
        wed: "mi\xE9",
        thu: "jue",
        fri: "vie",
        sat: "s\xE1b"
      },
      months: {
        jan: "ene",
        feb: "feb",
        mar: "mar",
        apr: "abr",
        may: "may",
        jun: "jun",
        jul: "jul",
        aug: "ago",
        sep: "sep",
        oct: "oct",
        nov: "nov",
        dec: "dic"
      }
    },
    select: {
      loading: "Cargando",
      noMatch: "No hay datos que coincidan",
      noData: "Sin datos",
      placeholder: "Seleccionar"
    },
    mention: {
      loading: "Cargando"
    },
    cascader: {
      noMatch: "No hay datos que coincidan",
      loading: "Cargando",
      placeholder: "Seleccionar",
      noData: "Sin datos"
    },
    pagination: {
      goto: "Ir a",
      pagesize: "/p\xE1gina",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      confirm: "Aceptar",
      cancel: "Cancelar",
      error: "Entrada inv\xE1lida"
    },
    upload: {
      deleteTip: "Pulse Eliminar para retirar",
      delete: "Eliminar",
      preview: "Vista Previa",
      continue: "Continuar"
    },
    table: {
      emptyText: "Sin Datos",
      confirmFilter: "Confirmar",
      resetFilter: "Reiniciar",
      clearFilter: "Despejar",
      sumText: "Suma"
    },
    tree: {
      emptyText: "Sin Datos"
    },
    transfer: {
      noMatch: "No hay datos que coincidan",
      noData: "Sin datos",
      titles: ["Lista 1", "Lista 2"],
      filterPlaceholder: "Ingresar palabra clave",
      noCheckedFormat: "{total} art\xEDculos",
      hasCheckedFormat: "{checked}/{total} revisados"
    },
    image: {
      error: "HA FALLADO"
    },
    pageHeader: {
      title: "Volver"
    },
    popconfirm: {
      confirmButtonText: "Si",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"et.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/et.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => et
});
var et = {
  name: "et",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "T\xFChjenda"
    },
    datepicker: {
      now: "Praegu",
      today: "T\xE4na",
      cancel: "T\xFChista",
      clear: "T\xFChjenda",
      confirm: "OK",
      selectDate: "Vali kuup\xE4ev",
      selectTime: "Vali kellaaeg",
      startDate: "Alguskuup\xE4ev",
      startTime: "Algusaeg",
      endDate: "L\xF5pukuup\xE4ev",
      endTime: "L\xF5puaeg",
      prevYear: "Eelmine aasta",
      nextYear: "J\xE4rgmine aasta",
      prevMonth: "Eelmine kuu",
      nextMonth: "J\xE4rgmine kuu",
      year: "",
      month1: "Jaanuar",
      month2: "Veebruar",
      month3: "M\xE4rts",
      month4: "Aprill",
      month5: "Mai",
      month6: "Juuni",
      month7: "Juuli",
      month8: "August",
      month9: "September",
      month10: "Oktoober",
      month11: "November",
      month12: "Detsember",
      weeks: {
        sun: "P",
        mon: "E",
        tue: "T",
        wed: "K",
        thu: "N",
        fri: "R",
        sat: "L"
      },
      months: {
        jan: "Jaan",
        feb: "Veeb",
        mar: "M\xE4r",
        apr: "Apr",
        may: "Mai",
        jun: "Juun",
        jul: "Juul",
        aug: "Aug",
        sep: "Sept",
        oct: "Okt",
        nov: "Nov",
        dec: "Dets"
      }
    },
    select: {
      loading: "Laadimine",
      noMatch: "Sobivad andmed puuduvad",
      noData: "Andmed puuduvad",
      placeholder: "Vali"
    },
    mention: {
      loading: "Laadimine"
    },
    cascader: {
      noMatch: "Sobivad andmed puuduvad",
      loading: "Laadimine",
      placeholder: "Vali",
      noData: "Andmed puuduvad"
    },
    pagination: {
      goto: "Mine lehele",
      pagesize: "/page",
      total: "Kokku {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Teade",
      confirm: "OK",
      cancel: "T\xFChista",
      error: "Vigane sisend"
    },
    upload: {
      deleteTip: 'Vajuta "Kustuta", et eemaldada',
      delete: "Kustuta",
      preview: "Eelvaate",
      continue: "J\xE4tka"
    },
    table: {
      emptyText: "Andmed puuduvad",
      confirmFilter: "Kinnita",
      resetFilter: "Taasta",
      clearFilter: "K\xF5ik",
      sumText: "Summa"
    },
    tree: {
      emptyText: "Andmed puuduvad"
    },
    transfer: {
      noMatch: "Sobivad andmed puuduvad",
      noData: "Andmed puuduvad",
      titles: ["Loend 1", "Loend 2"],
      filterPlaceholder: "Sisesta m\xE4rks\xF5na",
      noCheckedFormat: "{total} objekti",
      hasCheckedFormat: "{checked}/{total} valitud"
    },
    image: {
      error: "Eba\xF5nnestus"
    },
    pageHeader: {
      title: "Tagasi"
    },
    popconfirm: {
      confirmButtonText: "Jah",
      cancelButtonText: "Ei"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"eu.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/eu.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => eu
});
var eu = {
  name: "eu",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Ados",
      clear: "Garbitu"
    },
    datepicker: {
      now: "Orain",
      today: "Gaur",
      cancel: "Utzi",
      clear: "Garbitu",
      confirm: "Ados",
      selectDate: "Hautatu data",
      selectTime: "Hautatu ordua",
      startDate: "Hasierako data",
      startTime: "Hasierako ordua",
      endDate: "Amaierako data",
      endTime: "Amaierako ordua",
      prevYear: "Aurreko urtea",
      nextYear: "Hurrengo urtea",
      prevMonth: "Aurreko hilabetea",
      nextMonth: "Hurrengo hilabetea",
      year: "",
      month1: "Urtarrila",
      month2: "Otsaila",
      month3: "Martxoa",
      month4: "Apirila",
      month5: "Maiatza",
      month6: "Ekaina",
      month7: "Uztaila",
      month8: "Abuztua",
      month9: "Iraila",
      month10: "Urria",
      month11: "Azaroa",
      month12: "Abendua",
      weeks: {
        sun: "ig.",
        mon: "al.",
        tue: "ar.",
        wed: "az.",
        thu: "og.",
        fri: "ol.",
        sat: "lr."
      },
      months: {
        jan: "urt",
        feb: "ots",
        mar: "mar",
        apr: "api",
        may: "mai",
        jun: "eka",
        jul: "uzt",
        aug: "abu",
        sep: "ira",
        oct: "urr",
        nov: "aza",
        dec: "abe"
      }
    },
    select: {
      loading: "Kargatzen",
      noMatch: "Bat datorren daturik ez",
      noData: "Daturik ez",
      placeholder: "Hautatu"
    },
    mention: {
      loading: "Kargatzen"
    },
    cascader: {
      noMatch: "Bat datorren daturik ez",
      loading: "Kargatzen",
      placeholder: "Hautatu",
      noData: "Daturik ez"
    },
    pagination: {
      goto: "Joan",
      pagesize: "/orria",
      total: "Guztira {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Mezua",
      confirm: "Ados",
      cancel: "Utzi",
      error: "Sarrera baliogabea"
    },
    upload: {
      deleteTip: "sakatu Ezabatu kentzeko",
      delete: "Ezabatu",
      preview: "Aurrebista",
      continue: "Jarraitu"
    },
    table: {
      emptyText: "Daturik ez",
      confirmFilter: "Baieztatu",
      resetFilter: "Berrezarri",
      clearFilter: "Guztia",
      sumText: "Batura"
    },
    tour: {
      next: "Hurrengoa",
      previous: "Aurrekoa",
      finish: "Bukatu"
    },
    tree: {
      emptyText: "Daturik ez"
    },
    transfer: {
      noMatch: "Bat datorren daturik ez",
      noData: "Daturik ez",
      titles: ["Zerrenda 1", "Zerrenda 2"],
      filterPlaceholder: "Sartu gako-hitza",
      noCheckedFormat: "{total} elementu",
      hasCheckedFormat: "{checked}/{total} hautatuta"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"fa.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/fa.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => fa
});
var fa = {
  name: "fa",
  el: {
    breadcrumb: {
      label: "\u0645\u0633\u06CC\u0631 \u0631\u0627\u0647\u0646\u0645\u0627"
    },
    colorpicker: {
      confirm: "\u062A\u0623\u06CC\u06CC\u062F",
      clear: "\u067E\u0627\u06A9 \u06A9\u0631\u062F\u0646",
      defaultLabel: "\u0627\u0646\u062A\u062E\u0627\u0628\u200C\u06AF\u0631 \u0631\u0646\u06AF",
      description: "\u0631\u0646\u06AF \u0641\u0639\u0644\u06CC {color} \u0627\u0633\u062A. \u0628\u0631\u0627\u06CC \u0627\u0646\u062A\u062E\u0627\u0628 \u0631\u0646\u06AF \u062C\u062F\u06CC\u062F\u060C \u0627\u06CC\u0646\u062A\u0631 \u0631\u0627 \u0641\u0634\u0627\u0631 \u062F\u0647\u06CC\u062F.",
      alphaLabel: "\u0645\u0642\u062F\u0627\u0631 \u0622\u0644\u0641\u0627 \u0631\u0627 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F"
    },
    datepicker: {
      now: "\u0627\u06A9\u0646\u0648\u0646",
      today: "\u0627\u0645\u0631\u0648\u0632",
      cancel: "\u0644\u063A\u0648",
      clear: "\u067E\u0627\u06A9 \u06A9\u0631\u062F\u0646",
      confirm: "\u062A\u0623\u06CC\u06CC\u062F",
      dateTablePrompt: "\u0627\u0632 \u06A9\u0644\u06CC\u062F\u0647\u0627\u06CC \u062C\u0647\u062A\u200C\u062F\u0627\u0631 \u0648 \u0627\u06CC\u0646\u062A\u0631 \u0628\u0631\u0627\u06CC \u0627\u0646\u062A\u062E\u0627\u0628 \u0631\u0648\u0632 \u0645\u0627\u0647 \u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u06A9\u0646\u06CC\u062F",
      monthTablePrompt: "\u0627\u0632 \u06A9\u0644\u06CC\u062F\u0647\u0627\u06CC \u062C\u0647\u062A\u200C\u062F\u0627\u0631 \u0648 \u0627\u06CC\u0646\u062A\u0631 \u0628\u0631\u0627\u06CC \u0627\u0646\u062A\u062E\u0627\u0628 \u0645\u0627\u0647 \u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u06A9\u0646\u06CC\u062F",
      yearTablePrompt: "\u0627\u0632 \u06A9\u0644\u06CC\u062F\u0647\u0627\u06CC \u062C\u0647\u062A\u200C\u062F\u0627\u0631 \u0648 \u0627\u06CC\u0646\u062A\u0631 \u0628\u0631\u0627\u06CC \u0627\u0646\u062A\u062E\u0627\u0628 \u0633\u0627\u0644 \u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u06A9\u0646\u06CC\u062F",
      selectedDate: "\u062A\u0627\u0631\u06CC\u062E \u0627\u0646\u062A\u062E\u0627\u0628\u200C\u0634\u062F\u0647",
      selectDate: "\u0627\u0646\u062A\u062E\u0627\u0628 \u062A\u0627\u0631\u06CC\u062E",
      selectTime: "\u0627\u0646\u062A\u062E\u0627\u0628 \u0632\u0645\u0627\u0646",
      startDate: "\u062A\u0627\u0631\u06CC\u062E \u0634\u0631\u0648\u0639",
      startTime: "\u0632\u0645\u0627\u0646 \u0634\u0631\u0648\u0639",
      endDate: "\u062A\u0627\u0631\u06CC\u062E \u067E\u0627\u06CC\u0627\u0646",
      endTime: "\u0632\u0645\u0627\u0646 \u067E\u0627\u06CC\u0627\u0646",
      prevYear: "\u0633\u0627\u0644 \u0642\u0628\u0644",
      nextYear: "\u0633\u0627\u0644 \u0628\u0639\u062F",
      prevMonth: "\u0645\u0627\u0647 \u0642\u0628\u0644",
      nextMonth: "\u0645\u0627\u0647 \u0628\u0639\u062F",
      year: "",
      month1: "\u0698\u0627\u0646\u0648\u06CC\u0647",
      month2: "\u0641\u0648\u0631\u06CC\u0647",
      month3: "\u0645\u0627\u0631\u0633",
      month4: "\u0622\u0648\u0631\u06CC\u0644",
      month5: "\u0645\u0647",
      month6: "\u0698\u0648\u0626\u0646",
      month7: "\u0698\u0648\u0626\u06CC\u0647",
      month8: "\u0627\u0648\u062A",
      month9: "\u0633\u067E\u062A\u0627\u0645\u0628\u0631",
      month10: "\u0627\u06A9\u062A\u0628\u0631",
      month11: "\u0646\u0648\u0627\u0645\u0628\u0631",
      month12: "\u062F\u0633\u0627\u0645\u0628\u0631",
      week: "\u0647\u0641\u062A\u0647",
      weeks: {
        sun: "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647",
        mon: "\u062F\u0648\u0634\u0646\u0628\u0647",
        tue: "\u0633\u0647\u200C\u0634\u0646\u0628\u0647",
        wed: "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647",
        thu: "\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647",
        fri: "\u062C\u0645\u0639\u0647",
        sat: "\u0634\u0646\u0628\u0647"
      },
      weeksFull: {
        sun: "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647",
        mon: "\u062F\u0648\u0634\u0646\u0628\u0647",
        tue: "\u0633\u0647\u200C\u0634\u0646\u0628\u0647",
        wed: "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647",
        thu: "\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647",
        fri: "\u062C\u0645\u0639\u0647",
        sat: "\u0634\u0646\u0628\u0647"
      },
      months: {
        jan: "\u0698\u0627\u0646\u0648\u06CC\u0647",
        feb: "\u0641\u0648\u0631\u06CC\u0647",
        mar: "\u0645\u0627\u0631\u0686",
        apr: "\u0622\u0648\u0631\u06CC\u0644",
        may: "\u0645\u0647",
        jun: "\u0698\u0648\u0626\u0646",
        jul: "\u0698\u0648\u0626\u06CC\u0647",
        aug: "\u0627\u0648\u062A",
        sep: "\u0633\u067E\u062A\u0627\u0645\u0628\u0631",
        oct: "\u0627\u06A9\u062A\u0628\u0631",
        nov: "\u0646\u0648\u0627\u0645\u0628\u0631",
        dec: "\u062F\u0633\u0627\u0645\u0628\u0631"
      }
    },
    inputNumber: {
      decrease: "\u06A9\u0627\u0647\u0634 \u0639\u062F\u062F",
      increase: "\u0627\u0641\u0632\u0627\u06CC\u0634 \u0639\u062F\u062F"
    },
    select: {
      loading: "\u062F\u0631 \u062D\u0627\u0644 \u0628\u0627\u0631\u06AF\u0630\u0627\u0631\u06CC",
      noMatch: "\u0647\u06CC\u0686 \u062F\u0627\u062F\u0647 \u0645\u0646\u0637\u0628\u0642\u06CC \u0648\u062C\u0648\u062F \u0646\u062F\u0627\u0631\u062F",
      noData: "\u062F\u0627\u062F\u0647\u200C\u0627\u06CC \u0645\u0648\u062C\u0648\u062F \u0646\u06CC\u0633\u062A",
      placeholder: "\u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F"
    },
    mention: {
      loading: "\u062F\u0631 \u062D\u0627\u0644 \u0628\u0627\u0631\u06AF\u0630\u0627\u0631\u06CC"
    },
    dropdown: {
      toggleDropdown: "\u0628\u0627\u0632 \u0648 \u0628\u0633\u062A\u0647 \u06A9\u0631\u062F\u0646 \u0645\u0646\u0648\u06CC \u06A9\u0634\u0648\u06CC\u06CC"
    },
    cascader: {
      noMatch: "\u0647\u06CC\u0686 \u062F\u0627\u062F\u0647 \u0645\u0646\u0637\u0628\u0642\u06CC \u0648\u062C\u0648\u062F \u0646\u062F\u0627\u0631\u062F",
      loading: "\u062F\u0631 \u062D\u0627\u0644 \u0628\u0627\u0631\u06AF\u0630\u0627\u0631\u06CC",
      placeholder: "\u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F",
      noData: "\u062F\u0627\u062F\u0647\u200C\u0627\u06CC \u0645\u0648\u062C\u0648\u062F \u0646\u06CC\u0633\u062A"
    },
    pagination: {
      goto: "\u0628\u0631\u0648 \u0628\u0647",
      pagesize: "/\u0635\u0641\u062D\u0647",
      total: "\u0645\u062C\u0645\u0648\u0639 {total}",
      pageClassifier: "",
      page: "\u0635\u0641\u062D\u0647",
      prev: "\u0628\u0631\u0648 \u0628\u0647 \u0635\u0641\u062D\u0647 \u0642\u0628\u0644\u06CC",
      next: "\u0628\u0631\u0648 \u0628\u0647 \u0635\u0641\u062D\u0647 \u0628\u0639\u062F\u06CC",
      currentPage: "\u0635\u0641\u062D\u0647 {pager}",
      prevPages: "{pager} \u0635\u0641\u062D\u0627\u062A \u0642\u0628\u0644\u06CC",
      nextPages: "{pager} \u0635\u0641\u062D\u0627\u062A \u0628\u0639\u062F\u06CC",
      deprecationWarning: "\u0627\u0633\u062A\u0641\u0627\u062F\u0647\u200C\u0647\u0627\u06CC \u0645\u0646\u0633\u0648\u062E \u0634\u0646\u0627\u0633\u0627\u06CC\u06CC \u0634\u062F\u060C \u0644\u0637\u0641\u0627\u064B \u0628\u0647 \u0645\u0633\u062A\u0646\u062F\u0627\u062A el-pagination \u0645\u0631\u0627\u062C\u0639\u0647 \u06A9\u0646\u06CC\u062F"
    },
    dialog: {
      close: "\u0628\u0633\u062A\u0646 \u0627\u06CC\u0646 \u062F\u06CC\u0627\u0644\u0648\u06AF"
    },
    drawer: {
      close: "\u0628\u0633\u062A\u0646 \u0627\u06CC\u0646 \u062F\u06CC\u0627\u0644\u0648\u06AF"
    },
    messagebox: {
      title: "\u067E\u06CC\u0627\u0645",
      confirm: "\u062A\u0623\u06CC\u06CC\u062F",
      cancel: "\u0644\u063A\u0648",
      error: "\u0648\u0631\u0648\u062F\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631",
      close: "\u0628\u0633\u062A\u0646 \u0627\u06CC\u0646 \u062F\u06CC\u0627\u0644\u0648\u06AF"
    },
    upload: {
      deleteTip: "\u0628\u0631\u0627\u06CC \u062D\u0630\u0641\u060C \u06A9\u0644\u06CC\u062F delete \u0631\u0627 \u0641\u0634\u0627\u0631 \u062F\u0647\u06CC\u062F",
      delete: "\u062D\u0630\u0641",
      preview: "\u067E\u06CC\u0634\u200C\u0646\u0645\u0627\u06CC\u0634",
      continue: "\u0627\u062F\u0627\u0645\u0647"
    },
    slider: {
      defaultLabel: "\u0644\u063A\u0632\u0646\u062F\u0647 \u0628\u06CC\u0646 {min} \u0648 {max}",
      defaultRangeStartLabel: "\u0627\u0646\u062A\u062E\u0627\u0628 \u0645\u0642\u062F\u0627\u0631 \u0634\u0631\u0648\u0639",
      defaultRangeEndLabel: "\u0627\u0646\u062A\u062E\u0627\u0628 \u0645\u0642\u062F\u0627\u0631 \u067E\u0627\u06CC\u0627\u0646"
    },
    table: {
      emptyText: "\u062F\u0627\u062F\u0647\u200C\u0627\u06CC \u0645\u0648\u062C\u0648\u062F \u0646\u06CC\u0633\u062A",
      confirmFilter: "\u062A\u0623\u06CC\u06CC\u062F",
      resetFilter: "\u0628\u0627\u0632\u0646\u0634\u0627\u0646\u06CC",
      clearFilter: "\u0647\u0645\u0647",
      sumText: "\u0645\u062C\u0645\u0648\u0639"
    },
    tour: {
      next: "\u0628\u0639\u062F\u06CC",
      previous: "\u0642\u0628\u0644\u06CC",
      finish: "\u067E\u0627\u06CC\u0627\u0646"
    },
    tree: {
      emptyText: "\u062F\u0627\u062F\u0647\u200C\u0627\u06CC \u0645\u0648\u062C\u0648\u062F \u0646\u06CC\u0633\u062A"
    },
    transfer: {
      noMatch: "\u062F\u0627\u062F\u0647\u200C\u0627\u06CC \u0645\u0637\u0627\u0628\u0642\u062A \u0646\u062F\u0627\u0631\u062F",
      noData: "\u062F\u0627\u062F\u0647\u200C\u0627\u06CC \u0645\u0648\u062C\u0648\u062F \u0646\u06CC\u0633\u062A",
      titles: ["\u0641\u0647\u0631\u0633\u062A \u06F1", "\u0641\u0647\u0631\u0633\u062A \u06F2"],
      filterPlaceholder: "\u06A9\u0644\u0645\u0647 \u06A9\u0644\u06CC\u062F\u06CC \u0631\u0627 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F",
      noCheckedFormat: "{total} \u0622\u06CC\u062A\u0645",
      hasCheckedFormat: "{checked}/{total} \u0627\u0646\u062A\u062E\u0627\u0628\u200C\u0634\u062F\u0647"
    },
    image: {
      error: "\u0646\u0627\u0645\u0648\u0641\u0642"
    },
    pageHeader: {
      title: "\u0628\u0627\u0632\u06AF\u0634\u062A"
    },
    popconfirm: {
      confirmButtonText: "\u0628\u0644\u0647",
      cancelButtonText: "\u062E\u06CC\u0631"
    },
    carousel: {
      leftArrow: "\u067E\u06CC\u06A9\u0627\u0646 \u0628\u0647 \u062C\u0647\u062A \u0686\u067E",
      rightArrow: "\u067E\u06CC\u06A9\u0627\u0646 \u0686\u0631\u062E\u0627\u0646 \u0628\u0647 \u062C\u0647\u062A \u0631\u0627\u0633\u062A",
      indicator: "\u0633\u0648\u0626\u06CC\u0686 \u0686\u0631\u062E\u0627\u0646 \u0628\u0647 \u0634\u0627\u062E\u0635 {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"fi.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/fi.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => fi
});
var fi = {
  name: "fi",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "Tyhjenn\xE4"
    },
    datepicker: {
      now: "Nyt",
      today: "T\xE4n\xE4\xE4n",
      cancel: "Peruuta",
      clear: "Tyhjenn\xE4",
      confirm: "OK",
      selectDate: "Valitse p\xE4iv\xE4",
      selectTime: "Valitse aika",
      startDate: "Aloitusp\xE4iv\xE4",
      startTime: "Aloitusaika",
      endDate: "Lopetusp\xE4iv\xE4",
      endTime: "Lopetusaika",
      prevYear: "Edellinen vuosi",
      nextYear: "Seuraava vuosi",
      prevMonth: "Edellinen kuukausi",
      nextMonth: "Seuraava kuukausi",
      year: "",
      month1: "tammikuu",
      month2: "helmikuu",
      month3: "maaliskuu",
      month4: "huhtikuu",
      month5: "toukokuu",
      month6: "kes\xE4kuu",
      month7: "hein\xE4kuu",
      month8: "elokuu",
      month9: "syyskuu",
      month10: "lokakuu",
      month11: "marraskuu",
      month12: "joulukuu",
      weeks: {
        sun: "su",
        mon: "ma",
        tue: "ti",
        wed: "ke",
        thu: "to",
        fri: "pe",
        sat: "la"
      },
      months: {
        jan: "tammi",
        feb: "helmi",
        mar: "maalis",
        apr: "huhti",
        may: "touko",
        jun: "kes\xE4",
        jul: "hein\xE4",
        aug: "elo",
        sep: "syys",
        oct: "loka",
        nov: "marras",
        dec: "joulu"
      }
    },
    select: {
      loading: "Lataa",
      noMatch: "Ei vastaavia tietoja",
      noData: "Ei tietoja",
      placeholder: "Valitse"
    },
    mention: {
      loading: "Lataa"
    },
    cascader: {
      noMatch: "Ei vastaavia tietoja",
      loading: "Lataa",
      placeholder: "Valitse",
      noData: "Ei tietoja"
    },
    pagination: {
      goto: "Mene",
      pagesize: "/sivu",
      total: "Yhteens\xE4 {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Viesti",
      confirm: "OK",
      cancel: "Peruuta",
      error: "Virheellinen sy\xF6te"
    },
    upload: {
      deleteTip: "Poista Delete-n\xE4pp\xE4imell\xE4",
      delete: "Poista",
      preview: "Esikatsele",
      continue: "Jatka"
    },
    table: {
      emptyText: "Ei tietoja",
      confirmFilter: "Vahvista",
      resetFilter: "Tyhjenn\xE4",
      clearFilter: "Kaikki",
      sumText: "Summa"
    },
    tree: {
      emptyText: "Ei tietoja"
    },
    transfer: {
      noMatch: "Ei vastaavia tietoja",
      noData: "Ei tietoja",
      titles: ["Luettelo 1", "Luettelo 2"],
      filterPlaceholder: "Sy\xF6t\xE4 hakusana",
      noCheckedFormat: "{total} kohdetta",
      hasCheckedFormat: "{checked}/{total} valittu"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"fr.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/fr.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => fr
});
var fr = {
  name: "fr",
  el: {
    breadcrumb: {
      label: "Fil d'Ariane"
    },
    colorpicker: {
      confirm: "OK",
      clear: "Effacer",
      defaultLabel: "color picker",
      description: "La couleur actuelle est {color}. Appuyer sur Entr\xE9e pour s\xE9lectionner une nouvelle couleur."
    },
    datepicker: {
      now: "Maintenant",
      today: "Auj.",
      cancel: "Annuler",
      clear: "Effacer",
      confirm: "OK",
      dateTablePrompt: "Utiliser les touches fl\xE9ch\xE9es et appuyer sur Entr\xE9e pour s\xE9lectionner le jour du mois",
      monthTablePrompt: "Utiliser les touches fl\xE9ch\xE9es et appuyer sur Entr\xE9e pour s\xE9lectionner le mois",
      yearTablePrompt: "Utiliser les touches fl\xE9ch\xE9es et appuyer sur Entr\xE9e pour s\xE9lectionner l'ann\xE9e",
      selectedDate: "Date s\xE9lectionn\xE9e",
      selectDate: "Choisir date",
      selectTime: "Choisir horaire",
      startDate: "Date d\xE9but",
      startTime: "Horaire d\xE9but",
      endDate: "Date fin",
      endTime: "Horaire fin",
      prevYear: "Ann\xE9e pr\xE9c\xE9dente",
      nextYear: "Ann\xE9e suivante",
      prevMonth: "Mois pr\xE9c\xE9dent",
      nextMonth: "Mois suivant",
      year: "",
      month1: "Janvier",
      month2: "F\xE9vrier",
      month3: "Mars",
      month4: "Avril",
      month5: "Mai",
      month6: "Juin",
      month7: "Juillet",
      month8: "Ao\xFBt",
      month9: "Septembre",
      month10: "Octobre",
      month11: "Novembre",
      month12: "D\xE9cembre",
      week: "Semaine",
      weeks: {
        sun: "Dim",
        mon: "Lun",
        tue: "Mar",
        wed: "Mer",
        thu: "Jeu",
        fri: "Ven",
        sat: "Sam"
      },
      weeksFull: {
        sun: "Dimanche",
        mon: "Lundi",
        tue: "Mardi",
        wed: "Mercredi",
        thu: "Jeudi",
        fri: "Vendredi",
        sat: "Samedi"
      },
      months: {
        jan: "Jan",
        feb: "F\xE9v",
        mar: "Mar",
        apr: "Avr",
        may: "Mai",
        jun: "Jun",
        jul: "Jul",
        aug: "Ao\xFB",
        sep: "Sep",
        oct: "Oct",
        nov: "Nov",
        dec: "D\xE9c"
      }
    },
    inputNumber: {
      decrease: "d\xE9cr\xE9menter",
      increase: "incr\xE9menter"
    },
    select: {
      loading: "Chargement",
      noMatch: "Aucune correspondance",
      noData: "Aucune donn\xE9e",
      placeholder: "Choisir"
    },
    mention: {
      loading: "Chargement"
    },
    cascader: {
      noMatch: "Aucune correspondance",
      loading: "Chargement",
      placeholder: "Choisir",
      noData: "Aucune donn\xE9e"
    },
    pagination: {
      goto: "Aller \xE0",
      pagesize: "/page",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Aller \xE0 la page pr\xE9c\xE9dente",
      next: "Aller \xE0 la page suivante",
      currentPage: "page {pager}",
      prevPages: "{pager} pages pr\xE9c\xE9dentes",
      nextPages: "{pager} pages suivantes",
      deprecationWarning: "Utilisations obsol\xE8tes d\xE9tect\xE9es, veuillez vous r\xE9f\xE9rer \xE0 la documentation el-pagination pour plus de d\xE9tails"
    },
    dialog: {
      close: "Fermer la bo\xEEte de dialogue"
    },
    drawer: {
      close: "Fermer la bo\xEEte de dialogue"
    },
    messagebox: {
      title: "Message",
      confirm: "Confirmer",
      cancel: "Annuler",
      error: "Erreur",
      close: "Fermer la bo\xEEte de dialogue"
    },
    upload: {
      deleteTip: "Cliquer sur supprimer pour retirer le fichier",
      delete: "Supprimer",
      preview: "Aper\xE7u",
      continue: "Continuer"
    },
    slider: {
      defaultLabel: "curseur entre {min} et {max}",
      defaultRangeStartLabel: "choisir la valeur de d\xE9part",
      defaultRangeEndLabel: "s\xE9lectionner la valeur finale"
    },
    table: {
      emptyText: "Aucune donn\xE9e",
      confirmFilter: "Confirmer",
      resetFilter: "R\xE9initialiser",
      clearFilter: "Tous",
      sumText: "Somme"
    },
    tour: {
      next: "suivant",
      previous: "pr\xE9c\xE9dent",
      finish: "fin"
    },
    tree: {
      emptyText: "Aucune donn\xE9e"
    },
    transfer: {
      noMatch: "Aucune correspondance",
      noData: "Aucune donn\xE9e",
      titles: ["Liste 1", "Liste 2"],
      filterPlaceholder: "Entrer un mot clef",
      noCheckedFormat: "{total} elements",
      hasCheckedFormat: "{checked}/{total} coch\xE9(s)"
    },
    image: {
      error: "ECHEC"
    },
    pageHeader: {
      title: "Retour"
    },
    popconfirm: {
      confirmButtonText: "Oui",
      cancelButtonText: "Non"
    },
    carousel: {
      leftArrow: "Fl\xE8che du carrousel vers la gauche",
      rightArrow: "Fl\xE8che du carrousel vers la droite",
      indicator: "Passer au carrousel index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"he.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/he.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => he
});
var he = {
  name: "he",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u05D0\u05D9\u05E9\u05D5\u05E8",
      clear: "\u05E0\u05E7\u05D4"
    },
    datepicker: {
      now: "\u05DB\u05E2\u05EA",
      today: "\u05D4\u05D9\u05D5\u05DD",
      cancel: "\u05D1\u05D8\u05DC",
      clear: "\u05E0\u05E7\u05D4",
      confirm: "\u05D0\u05D9\u05E9\u05D5\u05E8",
      selectDate: "\u05D1\u05D7\u05E8 \u05EA\u05D0\u05E8\u05D9\u05DA",
      selectTime: "\u05D1\u05D7\u05E8 \u05D6\u05DE\u05DF",
      startDate: "\u05EA\u05D0\u05E8\u05D9\u05DA \u05D4\u05EA\u05D7\u05DC\u05D4",
      startTime: "\u05D6\u05DE\u05DF \u05D4\u05EA\u05D7\u05DC\u05D4",
      endDate: "\u05EA\u05D0\u05E8\u05D9\u05DA \u05E1\u05D9\u05D5\u05DD",
      endTime: "\u05D6\u05DE\u05DF \u05E1\u05D9\u05D5\u05DD",
      prevYear: "\u05E9\u05E0\u05D4 \u05E7\u05D5\u05D3\u05DE\u05EA",
      nextYear: "\u05E9\u05E0\u05D4 \u05D4\u05D1\u05D0\u05D4",
      prevMonth: "\u05D7\u05D5\u05D3\u05E9 \u05E7\u05D5\u05D3\u05DD",
      nextMonth: "\u05D7\u05D5\u05D3\u05E9 \u05D4\u05D1\u05D0",
      year: "\u05E9\u05E0\u05D4",
      month1: "\u05D9\u05E0\u05D5\u05D0\u05E8",
      month2: "\u05E4\u05D1\u05E8\u05D5\u05D0\u05E8",
      month3: "\u05DE\u05E8\u05E5",
      month4: "\u05D0\u05E4\u05E8\u05D9\u05DC",
      month5: "\u05DE\u05D0\u05D9",
      month6: "\u05D9\u05D5\u05E0\u05D9",
      month7: "\u05D9\u05D5\u05DC\u05D9",
      month8: "\u05D0\u05D5\u05D2\u05D5\u05E1\u05D8",
      month9: "\u05E1\u05E4\u05D8\u05DE\u05D1\u05E8",
      month10: "\u05D0\u05D5\u05E7\u05D8\u05D5\u05D1\u05E8",
      month11: "\u05E0\u05D5\u05D1\u05DE\u05D1\u05E8",
      month12: "\u05D3\u05E6\u05DE\u05D1\u05E8",
      week: "\u05E9\u05D1\u05D5\u05E2",
      weeks: {
        sun: "\u05D0\u05F3",
        mon: "\u05D1\u05F3",
        tue: "\u05D2\u05F3",
        wed: "\u05D3\u05F3",
        thu: "\u05D4\u05F3",
        fri: "\u05D5\u05F3",
        sat: "\u05E9\u05D1\u05EA"
      },
      months: {
        jan: "\u05D9\u05E0\u05D5\u05D0\u05E8",
        feb: "\u05E4\u05D1\u05E8\u05D5\u05D0\u05E8",
        mar: "\u05DE\u05E8\u05E5",
        apr: "\u05D0\u05E4\u05E8\u05D9\u05DC",
        may: "\u05DE\u05D0\u05D9",
        jun: "\u05D9\u05D5\u05E0\u05D9",
        jul: "\u05D9\u05D5\u05DC\u05D9",
        aug: "\u05D0\u05D5\u05D2\u05D5\u05E1\u05D8",
        sep: "\u05E1\u05E4\u05D8\u05DE\u05D1\u05E8",
        oct: "\u05D0\u05D5\u05E7\u05D8\u05D5\u05D1\u05E8",
        nov: "\u05E0\u05D5\u05D1\u05DE\u05D1\u05E8",
        dec: "\u05D3\u05E6\u05DE\u05D1\u05E8"
      }
    },
    select: {
      loading: "\u05D8\u05D5\u05E2\u05DF",
      noMatch: "\u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0\u05D4 \u05D4\u05EA\u05D0\u05DE\u05D4",
      noData: "\u05D0\u05D9\u05DF \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD",
      placeholder: "\u05E9\u05D5\u05DE\u05E8 \u05DE\u05E7\u05D5\u05DD"
    },
    mention: {
      loading: "\u05D8\u05D5\u05E2\u05DF"
    },
    cascader: {
      noMatch: "\u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0\u05D4 \u05D4\u05EA\u05D0\u05DE\u05D4",
      loading: "\u05D8\u05D5\u05E2\u05DF",
      placeholder: "\u05E9\u05D5\u05DE\u05E8 \u05DE\u05E7\u05D5\u05DD",
      noData: "\u05D0\u05D9\u05DF \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD"
    },
    pagination: {
      goto: "\u05E2\u05D1\u05D5\u05E8 \u05DC",
      pagesize: "/\u05E2\u05DE\u05D5\u05D3",
      total: "\u05DB\u05D5\u05DC\u05DC {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u05D4\u05D5\u05D3\u05E2\u05D4",
      confirm: "\u05D0\u05D9\u05E9\u05D5\u05E8",
      cancel: "\u05D1\u05D8\u05DC",
      error: "\u05E7\u05DC\u05D8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF"
    },
    upload: {
      deleteTip: "\u05DC\u05D7\u05E5 \u05DB\u05D3\u05D9 \u05DC\u05DE\u05D7\u05D5\u05E7",
      delete: "\u05DE\u05D7\u05E7",
      preview: "\u05EA\u05E6\u05D5\u05D2\u05D4 \u05DE\u05E7\u05D3\u05D9\u05DE\u05D4",
      continue: "\u05D4\u05DE\u05E9\u05DA"
    },
    table: {
      emptyText: "\u05D0\u05D9\u05DF \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD",
      confirmFilter: "\u05D0\u05D9\u05E9\u05D5\u05E8",
      resetFilter: "\u05E0\u05E7\u05D4",
      clearFilter: "\u05D4\u05DB\u05DC",
      sumText: "\u05E1\u05DA \u05D4\u05DB\u05DC"
    },
    tree: {
      emptyText: "\u05D0\u05D9\u05DF \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD"
    },
    transfer: {
      noMatch: "\u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0\u05D4 \u05D4\u05EA\u05D0\u05DE\u05D4",
      noData: "\u05D0\u05D9\u05DF \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD",
      titles: ["\u05E8\u05E9\u05D9\u05DE\u05D4 1", "\u05E8\u05E9\u05D9\u05DE\u05D4 2"],
      filterPlaceholder: "\u05E1\u05E0\u05DF \u05DC\u05E4\u05D9...",
      noCheckedFormat: "\u05E4\u05E8\u05D9\u05D8\u05D9\u05DD {total}",
      hasCheckedFormat: " \u05E0\u05D1\u05D7\u05E8\u05D5 {checked}/{total}"
    },
    image: {
      error: "\u05E9\u05D2\u05D9\u05D0\u05D4"
    },
    pageHeader: {
      title: "\u05D7\u05D6\u05E8\u05D4"
    },
    popconfirm: {
      confirmButtonText: "\u05DB\u05DF",
      cancelButtonText: "\u05DC\u05D0"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"hr.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/hr.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => hr
});
var hr = {
  name: "hr",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "O\u010Disti"
    },
    datepicker: {
      now: "Sada",
      today: "Danas",
      cancel: "Otka\u017Ei",
      clear: "O\u010Disti",
      confirm: "OK",
      selectDate: "Odaberi datum",
      selectTime: "Odaberi vrijeme",
      startDate: "Datum po\u010Detka",
      startTime: "Vrijeme po\u010Detka",
      endDate: "Datum zavr\u0161etka",
      endTime: "Vrijeme zavr\u0161etka",
      prevYear: "Prethodna godina",
      nextYear: "Sljede\u0107a godina",
      prevMonth: "Prethodni mjesec",
      nextMonth: "Sljede\u0107i mjesec",
      year: "",
      month1: "Sije\u010Danj",
      month2: "Velja\u010Da",
      month3: "O\u017Eujak",
      month4: "Travanj",
      month5: "Svibanj",
      month6: "Lipanj",
      month7: "Srpanj",
      month8: "Kolovoz",
      month9: "Rujan",
      month10: "Listopad",
      month11: "Studeni",
      month12: "Prosinac",
      week: "tjedan",
      weeks: {
        sun: "Ned",
        mon: "Pon",
        tue: "Uto",
        wed: "Sri",
        thu: "\u010Cet",
        fri: "Pet",
        sat: "Sub"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "May",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Oct",
        nov: "Nov",
        dec: "Dec"
      }
    },
    select: {
      loading: "U\u010Ditavanje",
      noMatch: "Nema prona\u0111enih podataka",
      noData: "Nema podataka",
      placeholder: "Izaberi"
    },
    mention: {
      loading: "U\u010Ditavanje"
    },
    cascader: {
      noMatch: "Nema prona\u0111enih podataka",
      loading: "U\u010Ditavanje",
      placeholder: "Izaberi",
      noData: "Nema podataka"
    },
    pagination: {
      goto: "Idi na",
      pagesize: "/stranica",
      total: "Ukupno {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Poruka",
      confirm: "OK",
      cancel: "Otka\u017Ei",
      error: "Pogre\u0161an unos"
    },
    upload: {
      deleteTip: "pritisnite izbri\u0161i za brisanje",
      delete: "Izbri\u0161i",
      preview: "Pregled",
      continue: "Nastavak"
    },
    table: {
      emptyText: "Nema podataka",
      confirmFilter: "Potvrdi",
      resetFilter: "Resetiraj",
      clearFilter: "Sve",
      sumText: "Suma"
    },
    tree: {
      emptyText: "Nema podataka"
    },
    transfer: {
      noMatch: "Nema prona\u0111enih podataka",
      noData: "Nema podataka",
      titles: ["Lista 1", "Lista 2"],
      filterPlaceholder: "Unesite klju\u010Dnu rije\u010D",
      noCheckedFormat: "{total} stavki",
      hasCheckedFormat: "{checked}/{total} checked"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"hu.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/hu.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => hu
});
var hu = {
  name: "hu",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "T\xF6rl\xE9s"
    },
    datepicker: {
      now: "Most",
      today: "Ma",
      cancel: "M\xE9gse",
      clear: "T\xF6rl\xE9s",
      confirm: "OK",
      selectDate: "D\xE1tum",
      selectTime: "Id\u0151pont",
      startDate: "D\xE1tum-t\xF3l",
      startTime: "Id\u0151pont-t\xF3l",
      endDate: "D\xE1tum-ig",
      endTime: "Id\u0151pont-ig",
      prevYear: "El\u0151z\u0151 \xE9v",
      nextYear: "K\xF6vetkez\u0151 \xE9v",
      prevMonth: "El\u0151z\u0151 h\xF3nap",
      nextMonth: "K\xF6vetkez\u0151 h\xF3nap",
      year: "",
      month1: "Janu\xE1r",
      month2: "Febru\xE1r",
      month3: "M\xE1rcius",
      month4: "\xC1prilis",
      month5: "M\xE1jus",
      month6: "J\xFAnius",
      month7: "J\xFAlius",
      month8: "Augusztus",
      month9: "Szeptember",
      month10: "Okt\xF3ber",
      month11: "November",
      month12: "December",
      weeks: {
        sun: "Vas",
        mon: "H\xE9t",
        tue: "Ked",
        wed: "Sze",
        thu: "Cs\xFC",
        fri: "P\xE9n",
        sat: "Szo"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "M\xE1r",
        apr: "\xC1pr",
        may: "M\xE1j",
        jun: "J\xFAn",
        jul: "J\xFAl",
        aug: "Aug",
        sep: "Szep",
        oct: "Okt",
        nov: "Nov",
        dec: "Dec"
      }
    },
    select: {
      loading: "Bet\xF6lt\xE9s",
      noMatch: "Nincs tal\xE1lat",
      noData: "Nincs adat",
      placeholder: "V\xE1lassz"
    },
    mention: {
      loading: "Bet\xF6lt\xE9s"
    },
    cascader: {
      noMatch: "Nincs tal\xE1lat",
      loading: "Bet\xF6lt\xE9s",
      placeholder: "V\xE1lassz",
      noData: "Nincs adat"
    },
    pagination: {
      goto: "Ugr\xE1s",
      pagesize: "/oldal",
      total: "\xD6ssz {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\xDCzenet",
      confirm: "OK",
      cancel: "M\xE9gse",
      error: "Hib\xE1s adat"
    },
    upload: {
      deleteTip: "kattints a t\xF6rl\xE9shez",
      delete: "T\xF6rl\xE9s",
      preview: "El\u0151n\xE9zet",
      continue: "Tov\xE1bb"
    },
    table: {
      emptyText: "Nincs adat",
      confirmFilter: "Meger\u0151s\xEDt",
      resetFilter: "Alaphelyet",
      clearFilter: "Mind",
      sumText: "\xD6sszeg"
    },
    tree: {
      emptyText: "Nincs adat"
    },
    transfer: {
      noMatch: "Nincs tal\xE1lat",
      noData: "Nincs adat",
      titles: ["Lista 1", "Lista 2"],
      filterPlaceholder: "Kulcssz\xF3",
      noCheckedFormat: "{total} elem",
      hasCheckedFormat: "{checked}/{total} kiv\xE1lasztva"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"hy-am.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/hy-am.mjs                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => hyAm
});
var hyAm = {
  name: "hy-am",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u053C\u0561\u0582",
      clear: "\u0544\u0561\u0584\u0580\u0565\u056C"
    },
    datepicker: {
      now: "\u0540\u056B\u0574\u0561",
      today: "\u0531\u0575\u057D\u0585\u0580",
      cancel: "\u0549\u0565\u0572\u0561\u0580\u056F\u0565\u056C",
      clear: "\u0544\u0561\u0584\u0580\u0565\u056C",
      confirm: "\u053C\u0561\u0582",
      selectDate: "\u0538\u0576\u057F\u0580\u0565\u0584 \u0561\u0574\u057D\u0561\u0569\u056B\u0582\u0568",
      selectTime: "\u0538\u0576\u057F\u0580\u0565\u0584 \u056A\u0561\u0574\u0561\u0576\u0561\u056F\u0568",
      startDate: "\u054D\u056F\u0566\u0562. \u0561\u0574\u057D\u0561\u0569\u056B\u0582\u0568",
      startTime: "\u054D\u056F\u0566\u0562. \u056A\u0561\u0574\u0561\u0576\u0561\u056F\u0568",
      endDate: "\u054E\u0565\u0580\u057B. \u0561\u0574\u057D\u0561\u0569\u056B\u057E\u0568",
      endTime: "\u054E\u0565\u0580\u057B. \u056A\u0561\u0574\u0561\u0576\u0561\u056F\u0568",
      prevYear: "\u0546\u0561\u056D\u0578\u0580\u0564 \u057F\u0561\u0580\u056B",
      nextYear: "\u0545\u0561\u057B\u0578\u0580\u0564 \u057F\u0561\u0580\u056B",
      prevMonth: "\u0546\u0561\u056D\u0578\u0580\u0564 \u0561\u0574\u056B\u057D",
      nextMonth: "\u0545\u0561\u057B\u0578\u0580\u0564 \u0561\u0574\u056B\u057D",
      year: "\u054F\u0561\u0580\u056B",
      month1: "\u0545\u0578\u0582\u0576\u0578\u0582\u0561\u0580",
      month2: "\u0553\u0565\u057F\u0580\u0578\u0582\u0561\u0580",
      month3: "\u0544\u0561\u0580\u057F",
      month4: "\u0531\u057A\u0580\u056B\u056C",
      month5: "\u0544\u0561\u0575\u056B\u057D",
      month6: "\u0545\u0578\u0582\u0576\u056B\u057D",
      month7: "\u0545\u0578\u0582\u056C\u056B\u057D",
      month8: "\u0555\u0563\u0578\u057D\u057F\u0578\u057D",
      month9: "\u054D\u0565\u057A\u057F\u0565\u0574\u0562\u0565\u0580",
      month10: "\u0545\u0578\u056F\u057F\u0565\u0574\u0562\u0565\u0580",
      month11: "\u0546\u0578\u0575\u0565\u0574\u0562\u0565\u0580",
      month12: "\u0534\u0565\u056F\u057F\u0565\u0574\u0562\u0565\u0580",
      week: "\u0547\u0561\u0562\u0561\u0569",
      weeks: {
        sun: "\u053F\u056B\u0580",
        mon: "\u0535\u0580\u056F",
        tue: "\u0535\u0580",
        wed: "\u0549\u0578\u0580",
        thu: "\u0540\u056B\u0576\u0563",
        fri: "\u0548\u0582\u0580\u0562",
        sat: "\u0547\u0561\u0562"
      },
      months: {
        jan: "\u0545\u0578\u0582\u0576\u057E",
        feb: "\u0553\u0565\u057F",
        mar: "\u0544\u0561\u0580",
        apr: "\u0531\u057A\u0580",
        may: "\u0544\u0561\u0575",
        jun: "\u0545\u0578\u0582\u0576",
        jul: "\u0545\u0578\u0582\u056C",
        aug: "\u0555\u0563",
        sep: "\u054D\u0565\u057A\u057F",
        oct: "\u0545\u0578\u056F",
        nov: "\u0546\u0578\u0575",
        dec: "\u0534\u0565\u056F"
      }
    },
    select: {
      loading: "\u0532\u0565\u057C\u0576\u0578\u0582\u0574",
      noMatch: "\u0540\u0561\u0574\u0561\u057A\u0561\u057F\u0561\u057D\u056D\u0561\u0576 \u057F\u0578\u0582\u0565\u0561\u056C\u0576\u0565\u0580 \u0579\u056F\u0561\u0576",
      noData: "\u054F\u057E\u0575\u0561\u056C\u0576\u0565\u0580 \u0579\u056F\u0561\u0576",
      placeholder: "\u0538\u0576\u057F\u0580\u0565\u056C"
    },
    mention: {
      loading: "\u0532\u0565\u057C\u0576\u0578\u0582\u0574"
    },
    cascader: {
      noMatch: "\u0540\u0561\u0574\u0561\u057A\u0561\u057F\u0561\u057D\u056D\u0561\u0576 \u057F\u0578\u0582\u0565\u0561\u056C\u0576\u0565\u0580 \u0579\u056F\u0561\u0576",
      loading: "\u0532\u0565\u057C\u0576\u0578\u0582\u0574",
      placeholder: "\u0538\u0576\u057F\u0580\u0565\u056C",
      noData: "\u054F\u057E\u0575\u0561\u056C\u0576\u0565\u0580 \u0579\u056F\u0561\u0576"
    },
    pagination: {
      goto: "\u0531\u0576\u0581\u0576\u0565\u056C",
      pagesize: " \u0567\u057B\u0578\u0582\u0574",
      total: "\u0538\u0576\u0564\u0561\u0574\u0565\u0576\u0568 {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u0540\u0561\u0572\u0578\u0580\u0564\u0561\u0563\u0580\u0578\u0582\u0569\u056B\u0582\u0576",
      confirm: "\u053C\u0561\u0582",
      cancel: "\u0549\u0565\u0572\u0561\u0580\u056F\u0565\u056C",
      error: "\u0531\u0576\u057E\u0561\u0582\u0565\u0580 \u057F\u0578\u0582\u0565\u0561\u056C\u0576\u0565\u0580\u056B \u0574\u0578\u0582\u057F\u0584"
    },
    upload: {
      deleteTip: "\u054D\u0565\u0572\u0574\u0565\u0584 [\u054B\u0576\u057B\u0565\u056C] \u057B\u0576\u057B\u0565\u056C\u0578\u0582 \u0570\u0561\u0574\u0561\u0580",
      delete: "\u054B\u0576\u057B\u0565\u056C",
      preview: "\u0546\u0561\u056D\u0561\u0564\u056B\u057F\u0578\u0582\u0574",
      continue: "\u0547\u0561\u0580\u0578\u0582\u0576\u0561\u056F\u0565\u056C"
    },
    table: {
      emptyText: "\u054F\u0578\u0582\u0565\u0561\u056C\u0576\u0565\u0580 \u0579\u056F\u0561\u0576",
      confirmFilter: "\u0545\u0561\u057D\u057F\u0561\u057F\u0565\u056C",
      resetFilter: "\u054E\u0565\u0580\u0561\u0563\u0578\u0580\u056E\u0561\u0580\u056F\u0565\u056C",
      clearFilter: "\u0532\u0578\u056C\u0578\u0580\u0568",
      sumText: "\u0533\u0578\u0582\u0574\u0561\u0580\u0568"
    },
    tree: {
      emptyText: "\u054F\u0578\u0582\u0565\u0561\u056C\u0576\u0565\u0580 \u0579\u056F\u0561\u0576"
    },
    transfer: {
      noMatch: "\u0540\u0561\u0574\u0561\u057A\u0561\u057F\u0561\u057D\u056D\u0561\u0576 \u057F\u0578\u0582\u0565\u0561\u056C\u0576\u0565\u0580 \u0579\u056F\u0561\u0576",
      noData: "\u054F\u0578\u0582\u0565\u0561\u056C\u0576\u0565\u0580 \u0579\u056F\u0561\u0576",
      titles: ["\u0551\u0578\u0582\u0581\u0561\u056F 1", "\u0551\u0578\u0582\u0581\u0561\u056F 2"],
      filterPlaceholder: "\u0544\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u0584 \u0562\u0561\u0576\u0561\u056C\u056B \u0562\u0561\u057C",
      noCheckedFormat: "{total} \u0574\u056B\u0561\u0582\u0578\u0580",
      hasCheckedFormat: "{checked}/{total} \u0568\u0576\u057F\u0580\u0578\u0582\u0561\u056E \u0567"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"id.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/id.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => id
});
var id = {
  name: "id",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Pilih",
      clear: "Kosongkan"
    },
    datepicker: {
      now: "Sekarang",
      today: "Hari ini",
      cancel: "Batal",
      clear: "Kosongkan",
      confirm: "Ya",
      selectDate: "Pilih tanggal",
      selectTime: "Pilih waktu",
      startDate: "Tanggal Mulai",
      startTime: "Waktu Mulai",
      endDate: "Tanggal Selesai",
      endTime: "Waktu Selesai",
      prevYear: "Tahun Sebelumnya",
      nextYear: "Tahun Selanjutnya",
      prevMonth: "Bulan Sebelumnya",
      nextMonth: "Bulan Selanjutnya",
      year: "Tahun",
      month1: "Januari",
      month2: "Februari",
      month3: "Maret",
      month4: "April",
      month5: "Mei",
      month6: "Juni",
      month7: "Juli",
      month8: "Agustus",
      month9: "September",
      month10: "Oktober",
      month11: "November",
      month12: "Desember",
      week: "Minggu",
      weeks: {
        sun: "Min",
        mon: "Sen",
        tue: "Sel",
        wed: "Rab",
        thu: "Kam",
        fri: "Jum",
        sat: "Sab"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "Mei",
        jun: "Jun",
        jul: "Jul",
        aug: "Agu",
        sep: "Sep",
        oct: "Okt",
        nov: "Nov",
        dec: "Des"
      }
    },
    select: {
      loading: "Memuat",
      noMatch: "Tidak ada data yg cocok",
      noData: "Tidak ada data",
      placeholder: "Pilih"
    },
    mention: {
      loading: "Memuat"
    },
    cascader: {
      noMatch: "Tidak ada data yg cocok",
      loading: "Memuat",
      placeholder: "Pilih",
      noData: "Tidak ada data"
    },
    pagination: {
      goto: "Pergi ke",
      pagesize: "/halaman",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages",
      deprecationWarning: "Penggunaan yang tidak akan digunakan lagi terdeteksi, silakan lihat dokumentasi el-pagination untuk lebih jelasnya"
    },
    messagebox: {
      title: "Pesan",
      confirm: "Ya",
      cancel: "Batal",
      error: "Masukan ilegal"
    },
    upload: {
      deleteTip: "Tekan hapus untuk melanjutkan",
      delete: "Hapus",
      preview: "Pratinjau",
      continue: "Lanjutkan"
    },
    table: {
      emptyText: "Tidak ada data",
      confirmFilter: "Konfirmasi",
      resetFilter: "Atur ulang",
      clearFilter: "Semua",
      sumText: "Jumlah"
    },
    tree: {
      emptyText: "Tidak ada data"
    },
    transfer: {
      noMatch: "Tidak ada data yg cocok",
      noData: "Tidak ada data",
      titles: ["Daftar 1", "Daftar 2"],
      filterPlaceholder: "Masukan kata kunci",
      noCheckedFormat: "{total} item",
      hasCheckedFormat: "{checked}/{total} terpilih"
    },
    image: {
      error: "GAGAL"
    },
    pageHeader: {
      title: "Kembali"
    },
    popconfirm: {
      confirmButtonText: "Ya",
      cancelButtonText: "Tidak"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"it.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/it.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => it
});
var it = {
  name: "it",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "Pulisci"
    },
    datepicker: {
      now: "Ora",
      today: "Oggi",
      cancel: "Cancella",
      clear: "Pulisci",
      confirm: "OK",
      selectDate: "Seleziona data",
      selectTime: "Seleziona ora",
      startDate: "Data inizio",
      startTime: "Ora inizio",
      endDate: "Data fine",
      endTime: "Ora fine",
      prevYear: "Anno precedente",
      nextYear: "Anno successivo",
      prevMonth: "Mese precedente",
      nextMonth: "Mese successivo",
      year: "",
      month1: "Gennaio",
      month2: "Febbraio",
      month3: "Marzo",
      month4: "Aprile",
      month5: "Maggio",
      month6: "Giugno",
      month7: "Luglio",
      month8: "Agosto",
      month9: "Settembre",
      month10: "Ottobre",
      month11: "Novembre",
      month12: "Dicembre",
      weeks: {
        sun: "Dom",
        mon: "Lun",
        tue: "Mar",
        wed: "Mer",
        thu: "Gio",
        fri: "Ven",
        sat: "Sab"
      },
      months: {
        jan: "Gen",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "Mag",
        jun: "Giu",
        jul: "Lug",
        aug: "Ago",
        sep: "Set",
        oct: "Ott",
        nov: "Nov",
        dec: "Dic"
      }
    },
    select: {
      loading: "Caricamento",
      noMatch: "Nessuna corrispondenza",
      noData: "Nessun dato",
      placeholder: "Seleziona"
    },
    mention: {
      loading: "Caricamento"
    },
    cascader: {
      noMatch: "Nessuna corrispondenza",
      loading: "Caricamento",
      placeholder: "Seleziona",
      noData: "Nessun dato"
    },
    pagination: {
      goto: "Vai a",
      pagesize: "/page",
      total: "Totale {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      confirm: "OK",
      cancel: "Cancella",
      error: "Input non valido"
    },
    upload: {
      deleteTip: "Premi cancella per rimuovere",
      delete: "Cancella",
      preview: "Anteprima",
      continue: "Continua"
    },
    table: {
      emptyText: "Nessun dato",
      confirmFilter: "Conferma",
      resetFilter: "Reset",
      clearFilter: "Tutti",
      sumText: "Somma"
    },
    tree: {
      emptyText: "Nessun dato"
    },
    transfer: {
      noMatch: "Nessuna corrispondenza",
      noData: "Nessun dato",
      titles: ["Lista 1", "Lista 2"],
      filterPlaceholder: "Inserisci filtro",
      noCheckedFormat: "{total} elementi",
      hasCheckedFormat: "{checked}/{total} selezionati"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ja.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/ja.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => ja
});
var ja = {
  name: "ja",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "\u30AF\u30EA\u30A2"
    },
    datepicker: {
      now: "\u73FE\u5728",
      today: "\u4ECA\u65E5",
      cancel: "\u30AD\u30E3\u30F3\u30BB\u30EB",
      clear: "\u30AF\u30EA\u30A2",
      confirm: "OK",
      selectDate: "\u65E5\u4ED8\u3092\u9078\u629E",
      selectTime: "\u6642\u9593\u3092\u9078\u629E",
      startDate: "\u958B\u59CB\u65E5",
      startTime: "\u958B\u59CB\u6642\u9593",
      endDate: "\u7D42\u4E86\u65E5",
      endTime: "\u7D42\u4E86\u6642\u9593",
      prevYear: "\u524D\u5E74",
      nextYear: "\u7FCC\u5E74",
      prevMonth: "\u524D\u6708",
      nextMonth: "\u7FCC\u6708",
      year: "\u5E74",
      month1: "1\u6708",
      month2: "2\u6708",
      month3: "3\u6708",
      month4: "4\u6708",
      month5: "5\u6708",
      month6: "6\u6708",
      month7: "7\u6708",
      month8: "8\u6708",
      month9: "9\u6708",
      month10: "10\u6708",
      month11: "11\u6708",
      month12: "12\u6708",
      weeks: {
        sun: "\u65E5",
        mon: "\u6708",
        tue: "\u706B",
        wed: "\u6C34",
        thu: "\u6728",
        fri: "\u91D1",
        sat: "\u571F"
      },
      months: {
        jan: "1\u6708",
        feb: "2\u6708",
        mar: "3\u6708",
        apr: "4\u6708",
        may: "5\u6708",
        jun: "6\u6708",
        jul: "7\u6708",
        aug: "8\u6708",
        sep: "9\u6708",
        oct: "10\u6708",
        nov: "11\u6708",
        dec: "12\u6708"
      }
    },
    select: {
      loading: "\u30ED\u30FC\u30C9\u4E2D",
      noMatch: "\u30C7\u30FC\u30BF\u306A\u3057",
      noData: "\u30C7\u30FC\u30BF\u306A\u3057",
      placeholder: "\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044"
    },
    mention: {
      loading: "\u30ED\u30FC\u30C9\u4E2D"
    },
    cascader: {
      noMatch: "\u30C7\u30FC\u30BF\u306A\u3057",
      loading: "\u30ED\u30FC\u30C9\u4E2D",
      placeholder: "\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044",
      noData: "\u30C7\u30FC\u30BF\u306A\u3057"
    },
    pagination: {
      goto: "",
      pagesize: "\u4EF6/\u30DA\u30FC\u30B8",
      total: "\u7DCF\u8A08 {total} \u4EF6",
      pageClassifier: "\u30DA\u30FC\u30B8\u76EE\u3078",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u30E1\u30C3\u30BB\u30FC\u30B8",
      confirm: "OK",
      cancel: "\u30AD\u30E3\u30F3\u30BB\u30EB",
      error: "\u6B63\u3057\u304F\u306A\u3044\u5165\u529B"
    },
    upload: {
      deleteTip: "Del\u30AD\u30FC\u3092\u62BC\u3057\u3066\u524A\u9664\u3059\u308B",
      delete: "\u524A\u9664\u3059\u308B",
      preview: "\u30D7\u30EC\u30D3\u30E5\u30FC",
      continue: "\u7D9A\u884C\u3059\u308B"
    },
    table: {
      emptyText: "\u30C7\u30FC\u30BF\u306A\u3057",
      confirmFilter: "\u78BA\u8A8D",
      resetFilter: "\u521D\u671F\u5316",
      clearFilter: "\u3059\u3079\u3066",
      sumText: "\u5408\u8A08"
    },
    tour: {
      next: "\u6B21\u3078",
      previous: "\u524D\u3078",
      finish: "\u30C4\u30A2\u30FC\u7D42\u4E86"
    },
    tree: {
      emptyText: "\u30C7\u30FC\u30BF\u306A\u3057"
    },
    transfer: {
      noMatch: "\u30C7\u30FC\u30BF\u306A\u3057",
      noData: "\u30C7\u30FC\u30BF\u306A\u3057",
      titles: ["\u30EA\u30B9\u30C8 1", "\u30EA\u30B9\u30C8 2"],
      filterPlaceholder: "\u30AD\u30FC\u30EF\u30FC\u30C9\u3092\u5165\u529B",
      noCheckedFormat: "\u7DCF\u8A08 {total} \u4EF6",
      hasCheckedFormat: "{checked}/{total} \u3092\u9078\u629E\u3057\u305F"
    },
    image: {
      error: "\u5931\u6557"
    },
    pageHeader: {
      title: "\u623B\u308B"
    },
    popconfirm: {
      confirmButtonText: "\u306F\u3044",
      cancelButtonText: "\u3044\u3044\u3048"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"kk.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/kk.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => kk
});
var kk = {
  name: "kk",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u049A\u0430\u0431\u044B\u043B\u0434\u0430\u0443",
      clear: "\u0422\u0430\u0437\u0430\u043B\u0430\u0443"
    },
    datepicker: {
      now: "\u049A\u0430\u0437\u0456\u0440",
      today: "\u0411\u04AF\u0433\u0456\u043D",
      cancel: "\u0411\u043E\u043B\u0434\u044B\u0440\u043C\u0430\u0443",
      clear: "\u0422\u0430\u0437\u0430\u043B\u0430\u0443",
      confirm: "\u049A\u0430\u0431\u044B\u043B\u0434\u0430\u0443",
      selectDate: "\u041A\u04AF\u043D\u0434\u0456 \u0442\u0430\u04A3\u0434\u0430\u04A3\u044B\u0437",
      selectTime: "\u0421\u0430\u0493\u0430\u0442\u0442\u044B \u0442\u0430\u04A3\u0434\u0430\u04A3\u044B\u0437",
      startDate: "\u0411\u0430\u0441\u0442\u0430\u043B\u0443 \u043A\u04AF\u043D\u0456",
      startTime: "\u0411\u0430\u0441\u0442\u0430\u043B\u0443 \u0441\u0430\u0493\u0430\u0442\u044B",
      endDate: "\u0410\u044F\u049B\u0442\u0430\u043B\u0443 \u043A\u04AF\u043D\u0456",
      endTime: "\u0410\u044F\u049B\u0442\u0430\u043B\u0443 \u0441\u0430\u0493\u0430\u0442\u044B",
      prevYear: "\u0410\u043B\u0434\u044B\u04A3\u0493\u044B \u0436\u044B\u043B",
      nextYear: "\u041A\u0435\u043B\u0435\u0441\u0456 \u0436\u044B\u043B",
      prevMonth: "\u0410\u043B\u0434\u044B\u04A3\u0493\u044B \u0430\u0439",
      nextMonth: "\u041A\u0435\u043B\u0435\u0441\u0456 \u0430\u0439",
      year: "\u0416\u044B\u043B",
      month1: "\u049A\u0430\u04A3\u0442\u0430\u0440",
      month2: "\u0410\u049B\u043F\u0430\u043D",
      month3: "\u041D\u0430\u0443\u0440\u044B\u0437",
      month4: "\u0421\u04D9\u0443\u0456\u0440",
      month5: "\u041C\u0430\u043C\u044B\u0440",
      month6: "\u041C\u0430\u0443\u0441\u044B\u043C",
      month7: "\u0428\u0456\u043B\u0434\u0435",
      month8: "\u0422\u0430\u043C\u044B\u0437",
      month9: "\u049A\u044B\u0440\u043A\u04AF\u0439\u0435\u043A",
      month10: "\u049A\u0430\u0437\u0430\u043D",
      month11: "\u049A\u0430\u0440\u0430\u0448\u0430",
      month12: "\u0416\u0435\u043B\u0442\u043E\u049B\u0441\u0430\u043D",
      week: "\u0410\u043F\u0442\u0430",
      weeks: {
        sun: "\u0416\u0435\u043A",
        mon: "\u0414\u04AF\u0439",
        tue: "\u0421\u0435\u0439",
        wed: "\u0421\u04D9\u0440",
        thu: "\u0411\u0435\u0439",
        fri: "\u0416\u04B1\u043C",
        sat: "\u0421\u0435\u043D"
      },
      months: {
        jan: "\u049A\u0430\u04A3",
        feb: "\u0410\u049B\u043F",
        mar: "\u041D\u0430\u0443",
        apr: "\u0421\u04D9\u0443",
        may: "\u041C\u0430\u043C",
        jun: "\u041C\u0430\u0443",
        jul: "\u0428\u0456\u043B",
        aug: "\u0422\u0430\u043C",
        sep: "\u049A\u044B\u0440",
        oct: "\u049A\u0430\u0437",
        nov: "\u049A\u0430\u0440",
        dec: "\u0416\u0435\u043B"
      }
    },
    select: {
      loading: "\u0416\u04AF\u043A\u0442\u0435\u043B\u0443\u0434\u0435",
      noMatch: "\u0421\u04D9\u0439\u043A\u0435\u0441 \u0434\u0435\u0440\u0435\u043A\u0442\u0435\u0440 \u0436\u043E\u049B",
      noData: "\u0414\u0435\u0440\u0435\u043A\u0442\u0435\u0440 \u0436\u043E\u049B",
      placeholder: "\u0422\u0430\u04A3\u0434\u0430\u04A3\u044B\u0437"
    },
    mention: {
      loading: "\u0416\u04AF\u043A\u0442\u0435\u043B\u0443\u0434\u0435"
    },
    cascader: {
      noMatch: "\u0421\u04D9\u0439\u043A\u0435\u0441 \u0434\u0435\u0440\u0435\u043A\u0442\u0435\u0440 \u0436\u043E\u049B",
      loading: "\u0416\u04AF\u043A\u0442\u0435\u043B\u0443\u0434\u0435",
      placeholder: "\u0422\u0430\u04A3\u0434\u0430\u04A3\u044B\u0437",
      noData: "\u0414\u0435\u0440\u0435\u043A\u0442\u0435\u0440 \u0436\u043E\u049B"
    },
    pagination: {
      goto: "\u0411\u0430\u0440\u0443",
      pagesize: "/page",
      total: "\u0411\u0430\u0440\u043B\u044B\u0493\u044B {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u0425\u0430\u0431\u0430\u0440",
      confirm: "\u049A\u0430\u0431\u044B\u043B\u0434\u0430\u0443",
      cancel: "\u0411\u043E\u043B\u0434\u044B\u0440\u043C\u0430\u0443",
      error: "\u0416\u0430\u0440\u0430\u043C\u0441\u044B\u0437 \u0435\u043D\u0433\u0456\u0437\u0443\u043B\u0435\u0440"
    },
    upload: {
      deleteTip: "\u04E8\u0448\u0456\u0440\u0443\u0434\u0456 \u0431\u0430\u0441\u044B\u043F \u04E9\u0448\u0456\u0440\u0456\u04A3\u0456\u0437",
      delete: "\u04E8\u0448\u0456\u0440\u0443",
      preview: "\u0410\u043B\u0434\u044B\u043D \u0430\u043B\u0430 \u049B\u0430\u0440\u0430\u0443",
      continue: "\u0416\u0430\u043B\u0493\u0430\u0441\u0442\u044B\u0440\u0443"
    },
    table: {
      emptyText: "\u0414\u0435\u0440\u0435\u043A\u0442\u0435\u0440 \u0436\u043E\u049B",
      confirmFilter: "\u049A\u0430\u0431\u044B\u043B\u0434\u0430\u0443",
      resetFilter: "\u049A\u0430\u043B\u043F\u044B\u043D\u0430 \u043A\u0435\u043B\u0442\u0456\u0440\u0443",
      clearFilter: "\u0411\u0430\u0440\u043B\u044B\u0493\u044B",
      sumText: "\u0421\u043E\u043C\u0430\u0441\u044B"
    },
    tree: {
      emptyText: "\u0414\u0435\u0440\u0435\u043A\u0442\u0435\u0440 \u0436\u043E\u049B"
    },
    transfer: {
      noMatch: "\u0421\u04D9\u0439\u043A\u0435\u0441 \u0434\u0435\u0440\u0435\u043A\u0442\u0435\u0440 \u0436\u043E\u049B",
      noData: "\u0414\u0435\u0440\u0435\u043A\u0442\u0435\u0440 \u0436\u043E\u049B",
      titles: ["List 1", "List 2"],
      filterPlaceholder: "\u041A\u0456\u043B\u0442 \u0441\u04E9\u0437\u0434\u0456 \u0435\u043D\u0433\u0456\u0437\u0456\u04A3\u0456\u0437",
      noCheckedFormat: "{total} \u044D\u043B\u044D\u043C\u044D\u043D\u0442",
      hasCheckedFormat: "{checked}/{total} \u049B\u04B1\u0441\u0431\u0435\u043B\u0433\u0456\u0441\u0456 \u049B\u043E\u0439\u044B\u043B\u0434\u044B"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"km.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/km.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => km
});
var km = {
  name: "km",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u1799\u179B\u17CB\u1796\u17D2\u179A\u1798",
      clear: "\u179B\u17BB\u1794"
    },
    datepicker: {
      now: "\u17A5\u17A1\u17BC\u179C\u200B\u1793\u17C1\u17C7",
      today: "\u1790\u17D2\u1784\u17C3\u1793\u17C1\u17C7",
      cancel: "\u1794\u17C4\u17C7\u1794\u1784\u17CB",
      clear: "\u179B\u17BB\u1794",
      confirm: "\u1799\u179B\u17CB\u1796\u17D2\u179A\u1798",
      selectDate: "\u1787\u17D2\u179A\u17BE\u179F\u179A\u17BE\u179F\u1790\u17D2\u1784\u17C3",
      selectTime: "\u1787\u17D2\u179A\u17BE\u179F\u179A\u17BE\u179F\u1798\u17C9\u17C4\u1784",
      startDate: "\u1790\u17D2\u1784\u17C3\u1785\u17B6\u1794\u17CB\u1795\u17D2\u178F\u17BE\u1798",
      startTime: "\u1798\u17C9\u17C4\u1784\u1785\u17B6\u1794\u17CB\u1795\u17D2\u178F\u17BE\u1798",
      endDate: "\u1790\u17D2\u1784\u17C3\u1794\u1789\u17D2\u1785\u1794\u17CB",
      endTime: "\u1798\u17C9\u17C4\u1784\u1794\u1789\u17D2\u1785\u1794\u17CB",
      prevYear: "\u1786\u17D2\u1793\u17B6\u17C6\u1798\u17BB\u1793",
      nextYear: "\u1786\u17D2\u1793\u17B6\u17C6\u1780\u17D2\u179A\u17C4\u1799",
      prevMonth: "\u1781\u17C2\u1798\u17BB\u1793",
      nextMonth: "\u1781\u17C2\u1780\u17D2\u179A\u17C4\u1799",
      year: "\u1786\u17D2\u1793\u17B6\u17C6",
      month1: "\u1798\u1780\u179A\u17B6",
      month2: "\u1780\u17BB\u1798\u17D2\u1797\u17C8",
      month3: "\u1798\u17B8\u1793\u17B6",
      month4: "\u1798\u17C1\u179F\u17B6",
      month5: "\u17A7\u179F\u1797\u17B6",
      month6: "\u1798\u17B7\u1790\u17BB\u1793\u17B6",
      month7: "\u1780\u1780\u17D2\u1780\u178A\u17B6",
      month8: "\u179F\u17B8\u17A0\u17B6",
      month9: "\u1780\u1789\u17D2\u1789\u17B6",
      month10: "\u178F\u17BB\u179B\u17B6",
      month11: "\u179C\u17B7\u1785\u17D2\u1786\u17B7\u1780\u17B6",
      month12: "\u1792\u17D2\u1793\u17BC",
      weeks: {
        sun: "\u17A2\u17B6\u1791\u17B7\u178F\u17D2\u1799",
        mon: "\u1785\u1793\u17D2\u1791",
        tue: "\u17A2\u1784\u17D2\u1782\u17B6\u179A",
        wed: "\u1796\u17BB\u1792",
        thu: "\u1796\u17D2\u179A\u17A0",
        fri: "\u179F\u17BB\u1780\u17D2\u179A",
        sat: "\u179F\u17C5\u179A\u17CD"
      },
      months: {
        jan: "\u1798\u1780\u179A\u17B6",
        feb: "\u1780\u17BB\u1798\u17D2\u1797\u17C8",
        mar: "\u1798\u17B8\u1793\u17B6",
        apr: "\u1798\u17C1\u179F\u17B6",
        may: "\u17A7\u179F\u1797\u17B6",
        jun: "\u1798\u17B7\u1790\u17BB\u1793\u17B6",
        jul: "\u1780\u1780\u17D2\u1780\u178A\u17B6",
        aug: "\u179F\u17B8\u17A0\u17B6",
        sep: "\u1780\u1789\u17D2\u1789\u17B6",
        oct: "\u178F\u17BB\u179B\u17B6",
        nov: "\u179C\u17B7\u1785\u17D2\u1786\u17B7\u1780\u17B6",
        dec: "\u1792\u17D2\u1793\u17BC"
      }
    },
    select: {
      loading: "\u1780\u17C6\u1796\u17BB\u1784\u1795\u17D2\u1791\u17BB\u1780",
      noMatch: "\u1782\u17D2\u1798\u17B6\u1793\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u178A\u17BC\u1785",
      noData: "\u1782\u17D2\u1798\u17B6\u1793\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799",
      placeholder: "\u1787\u17D2\u179A\u17BE\u179F\u179A\u17BE\u179F"
    },
    mention: {
      loading: "\u1780\u17C6\u1796\u17BB\u1784\u1795\u17D2\u1791\u17BB\u1780"
    },
    cascader: {
      noMatch: "\u1782\u17D2\u1798\u17B6\u1793\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u178A\u17BC\u1785",
      loading: "\u1780\u17C6\u1796\u17BB\u1784\u1795\u17D2\u1791\u17BB\u1780",
      placeholder: "\u1787\u17D2\u179A\u17BE\u179F\u179A\u17BE\u179F",
      noData: "\u1782\u17D2\u1798\u17B6\u1793\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799"
    },
    pagination: {
      goto: "\u1791\u17C5\u1780\u17B6\u1793\u17CB",
      pagesize: "/\u1791\u17C6\u1796\u17D0\u179A",
      total: "\u179F\u179A\u17BB\u1794 {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u179F\u17B6\u179A",
      confirm: "\u1799\u179B\u17CB\u1796\u17D2\u179A\u1798",
      cancel: "\u1794\u17C4\u17C7\u1794\u1784\u17CB",
      error: "\u1780\u17B6\u179A\u1794\u1789\u17D2\u1785\u17BC\u179B\u1798\u17B7\u1793\u178F\u17D2\u179A\u17BC\u179C\u1794\u17B6\u1793\u17A2\u1793\u17BB\u1789\u17D2\u1789\u17B6\u178F"
    },
    upload: {
      deleteTip: "\u1785\u17BB\u1785\u179B\u17BB\u1794\u178A\u17BE\u1798\u17D2\u1794\u17B8\u178A\u1780\u1785\u17C1\u1789",
      delete: "\u179B\u17BB\u1794",
      preview: "\u1798\u17BE\u179B",
      continue: "\u1794\u1793\u17D2\u178F"
    },
    table: {
      emptyText: "\u1782\u17D2\u1798\u17B6\u1793\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799",
      confirmFilter: "\u1799\u179B\u17CB\u1796\u17D2\u179A\u1798",
      resetFilter: "\u1780\u17C6\u178E\u178F\u17CB\u17A1\u17BE\u1784\u179C\u17B7\u1789",
      clearFilter: "\u1791\u17B6\u17C6\u1784\u17A2\u179F\u17CB",
      sumText: "\u1794\u17BC\u1780"
    },
    tree: {
      emptyText: "\u1782\u17D2\u1798\u17B6\u1793\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799"
    },
    transfer: {
      noMatch: "\u1782\u17D2\u1798\u17B6\u1793\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u178A\u17BC\u1785",
      noData: "\u1782\u17D2\u1798\u17B6\u1793\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799",
      titles: ["\u1794\u1789\u17D2\u1787\u17B8 \u17E1", "\u1794\u1789\u17D2\u1787\u17B8 \u17E2"],
      filterPlaceholder: "\u1794\u1789\u17D2\u1785\u17BC\u179B\u1796\u17B6\u1780\u17D2\u1799",
      noCheckedFormat: "{total} \u1792\u17B6\u178F\u17BB",
      hasCheckedFormat: "{checked}/{total} \u1794\u17B6\u1793\u1787\u17D2\u179A\u17BE\u179F\u1799\u1780"
    },
    image: {
      error: "\u1798\u17B7\u1793\u1794\u17B6\u1793\u1787\u17C4\u1782\u1787\u17D0\u1799"
    },
    pageHeader: {
      title: "\u178F\u17D2\u179A\u179B\u1794\u17CB\u1780\u17D2\u179A\u17C4\u1799"
    },
    popconfirm: {
      confirmButtonText: "\u1799\u179B\u17CB\u1796\u17D2\u179A\u1798",
      cancelButtonText: "\u1798\u17B7\u1793\u1796\u17D2\u179A\u1798"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ko.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/ko.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => ko
});
var ko = {
  name: "ko",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\uD655\uC778",
      clear: "\uCD08\uAE30\uD654",
      defaultLabel: "\uC0C9\uC0C1 \uC120\uD0DD\uAE30",
      description: "\uD604\uC7AC \uC0C9\uC0C1\uC740 {color}\uC785\uB2C8\uB2E4. Enter \uD0A4\uB97C \uB20C\uB7EC \uC0C8 \uC0C9\uC0C1\uC744 \uC120\uD0DD\uD569\uB2C8\uB2E4."
    },
    datepicker: {
      now: "\uC9C0\uAE08",
      today: "\uC624\uB298",
      cancel: "\uCDE8\uC18C",
      clear: "\uCD08\uAE30\uD654",
      confirm: "\uD655\uC778",
      dateTablePrompt: "\uD654\uC0B4\uD45C \uD0A4\uB97C \uC0AC\uC6A9\uD558\uACE0 Enter\uB97C \uB20C\uB7EC \uB0A0\uC9DC\uB97C \uC120\uD0DD\uD558\uC2ED\uC2DC\uC624.",
      monthTablePrompt: "\uD654\uC0B4\uD45C \uD0A4\uB97C \uC0AC\uC6A9\uD558\uACE0 Enter\uB97C \uB20C\uB7EC \uC6D4\uC744 \uC120\uD0DD\uD569\uB2C8\uB2E4.",
      yearTablePrompt: "\uD654\uC0B4\uD45C \uD0A4\uB97C \uC0AC\uC6A9\uD558\uACE0 Enter \uD0A4\uB97C \uB20C\uB7EC \uC5F0\uB3C4\uB97C \uC120\uD0DD\uD569\uB2C8\uB2E4.",
      selectDate: "\uB0A0\uC9DC \uC120\uD0DD",
      selectTime: "\uC2DC\uAC04 \uC120\uD0DD",
      startDate: "\uC2DC\uC791 \uB0A0\uC9DC",
      startTime: "\uC2DC\uC791 \uC2DC\uAC04",
      endDate: "\uC885\uB8CC \uB0A0\uC9DC",
      endTime: "\uC885\uB8CC \uC2DC\uAC04",
      prevYear: "\uC9C0\uB09C\uD574",
      nextYear: "\uB2E4\uC74C\uD574",
      prevMonth: "\uC9C0\uB09C\uB2EC",
      nextMonth: "\uB2E4\uC74C\uB2EC",
      year: "\uB144",
      month1: "1\uC6D4",
      month2: "2\uC6D4",
      month3: "3\uC6D4",
      month4: "4\uC6D4",
      month5: "5\uC6D4",
      month6: "6\uC6D4",
      month7: "7\uC6D4",
      month8: "8\uC6D4",
      month9: "9\uC6D4",
      month10: "10\uC6D4",
      month11: "11\uC6D4",
      month12: "12\uC6D4",
      weeks: {
        sun: "\uC77C",
        mon: "\uC6D4",
        tue: "\uD654",
        wed: "\uC218",
        thu: "\uBAA9",
        fri: "\uAE08",
        sat: "\uD1A0"
      },
      months: {
        jan: "1\uC6D4",
        feb: "2\uC6D4",
        mar: "3\uC6D4",
        apr: "4\uC6D4",
        may: "5\uC6D4",
        jun: "6\uC6D4",
        jul: "7\uC6D4",
        aug: "8\uC6D4",
        sep: "9\uC6D4",
        oct: "10\uC6D4",
        nov: "11\uC6D4",
        dec: "12\uC6D4"
      }
    },
    inputNumber: {
      decrease: "\uAC12 \uC99D\uAC00",
      increase: "\uAC12 \uAC10\uC18C"
    },
    select: {
      loading: "\uBD88\uB7EC\uC624\uB294 \uC911",
      noMatch: "\uAC80\uC0C9\uB41C \uB370\uC774\uD130 \uC5C6\uC74C",
      noData: "\uB370\uC774\uD130 \uC5C6\uC74C",
      placeholder: "\uC120\uD0DD"
    },
    mention: {
      loading: "\uBD88\uB7EC\uC624\uB294 \uC911"
    },
    dropdown: {
      toggleDropdown: "\uB4DC\uB86D\uB2E4\uC6B4 \uC804\uD658"
    },
    cascader: {
      noMatch: "\uAC80\uC0C9\uB41C \uB370\uC774\uD130 \uC5C6\uC74C",
      loading: "\uBD88\uB7EC\uC624\uB294 \uC911",
      placeholder: "\uC120\uD0DD",
      noData: "\uB370\uC774\uD130 \uC5C6\uC74C"
    },
    pagination: {
      goto: "",
      pagesize: "\uAC74/\uD398\uC774\uC9C0",
      total: "\uCD1D {total} \uAC74",
      pageClassifier: "\uD398\uC774\uC9C0\uB85C",
      page: "\uD398\uC774\uC9C0",
      prev: "\uC774\uC804 \uD398\uC774\uC9C0\uB85C \uC774\uB3D9",
      next: "\uB2E4\uC74C \uD398\uC774\uC9C0\uB85C \uC774\uB3D9",
      currentPage: "\uD398\uC774\uC9C0 {pager}",
      prevPages: "\uC774\uC804 {pager} \uD398\uC774\uC9C0",
      nextPages: "\uB2E4\uC74C {pager} \uD398\uC774\uC9C0",
      deprecationWarning: "\uB354 \uC774\uC0C1 \uC0AC\uC6A9\uB418\uC9C0 \uC54A\uB294 \uB3D9\uC791\uC774 \uAC10\uC9C0\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uC790\uC138\uD55C \uB0B4\uC6A9\uC740 el-pagination \uBB38\uC11C\uB97C \uCC38\uC870\uD558\uC138\uC694."
    },
    dialog: {
      close: "\uB300\uD654 \uC0C1\uC790 \uB2EB\uAE30"
    },
    drawer: {
      close: "\uB300\uD654 \uC0C1\uC790 \uB2EB\uAE30"
    },
    messagebox: {
      title: "\uBA54\uC2DC\uC9C0",
      confirm: "\uD655\uC778",
      cancel: "\uCDE8\uC18C",
      error: "\uC62C\uBC14\uB974\uC9C0 \uC54A\uC740 \uC785\uB825",
      close: "\uB300\uD654 \uC0C1\uC790 \uB2EB\uAE30"
    },
    upload: {
      deleteTip: "Delete \uD0A4\uB97C \uB20C\uB7EC \uC0AD\uC81C",
      delete: "\uC0AD\uC81C",
      preview: "\uBBF8\uB9AC\uBCF4\uAE30",
      continue: "\uACC4\uC18D\uD558\uAE30"
    },
    slider: {
      defaultLabel: "{min}\uACFC {max} \uC0AC\uC774\uC758 \uC2AC\uB77C\uC774\uB354",
      defaultRangeStartLabel: "\uC2DC\uC791 \uAC12 \uC120\uD0DD",
      defaultRangeEndLabel: "\uC885\uB8CC \uAC12 \uC120\uD0DD"
    },
    table: {
      emptyText: "\uB370\uC774\uD130 \uC5C6\uC74C",
      confirmFilter: "\uD655\uC778",
      resetFilter: "\uCD08\uAE30\uD654",
      clearFilter: "\uC804\uCCB4",
      sumText: "\uD569\uACC4"
    },
    tour: {
      next: "\uB2E4\uC74C",
      previous: "\uC774\uC804",
      finish: "\uC885\uB8CC"
    },
    tree: {
      emptyText: "\uB370\uC774\uD130 \uC5C6\uC74C"
    },
    transfer: {
      noMatch: "\uAC80\uC0C9\uB41C \uB370\uC774\uD130 \uC5C6\uC74C",
      noData: "\uB370\uC774\uD130 \uC5C6\uC74C",
      titles: ["\uB9AC\uC2A4\uD2B8 1", "\uB9AC\uC2A4\uD2B8 2"],
      filterPlaceholder: "\uAC80\uC0C9\uC5B4\uB97C \uC785\uB825\uD558\uC138\uC694",
      noCheckedFormat: "\uCD1D {total} \uAC74",
      hasCheckedFormat: "{checked}/{total} \uC120\uD0DD\uB428"
    },
    image: {
      error: "\uBD88\uB7EC\uC624\uAE30 \uC2E4\uD328"
    },
    pageHeader: {
      title: "\uB4A4\uB85C"
    },
    popconfirm: {
      confirmButtonText: "\uC608",
      cancelButtonText: "\uC544\uB2C8\uC624"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ku.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/ku.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => ku
});
var ku = {
  name: "ku",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Temam",
      clear: "Paqij bike"
    },
    datepicker: {
      now: "Niha",
      today: "\xCEro",
      cancel: "Betal bike",
      clear: "Paqij bike",
      confirm: "Temam",
      selectDate: "D\xEErok\xEA bibij\xEAre",
      selectTime: "Dem\xEA bibij\xEAre",
      startDate: "D\xEEroka Destp\xEAk\xEA",
      startTime: "Dema Destp\xEAk\xEA",
      endDate: "D\xEEroka Daw\xEE",
      endTime: "Dema Daw\xEE",
      prevYear: "Sala P\xEA\u015F",
      nextYear: "Sala Pa\u015F",
      prevMonth: "Meha P\xEA\u015F",
      nextMonth: "Meha Pa\u015F",
      year: "Sal",
      month1: "R\xEAbendan",
      month2: "Re\u015Femeh",
      month3: "Adar",
      month4: "Avr\xEAl",
      month5: "Gulan",
      month6: "P\xFB\u015Fber",
      month7: "T\xEErmeh",
      month8: "Gilav\xEAj",
      month9: "Rezber",
      month10: "Kew\xE7\xEAr",
      month11: "Sarmawaz",
      month12: "Berfanbar",
      weeks: {
        sun: "Yek",
        mon: "Du\u015F",
        tue: "S\xEA\u015F",
        wed: "\xC7ar",
        thu: "P\xEAn",
        fri: "\xCEn",
        sat: "\u015Eem"
      },
      months: {
        jan: "R\xEAb",
        feb: "Re\u015F",
        mar: "Ada",
        apr: "Avr",
        may: "Gul",
        jun: "P\xFB\u015F",
        jul: "T\xEEr",
        aug: "Gil",
        sep: "Rez",
        oct: "Kew",
        nov: "Sar",
        dec: "Ber"
      }
    },
    select: {
      loading: "Bardibe",
      noMatch: "Li hembere ve agah\xEE tune",
      noData: "Agah\xEE tune",
      placeholder: "Bibij\xEAre"
    },
    mention: {
      loading: "Bardibe"
    },
    cascader: {
      noMatch: "Li hembere ve agah\xEE tune",
      loading: "Bardibe",
      placeholder: "Bibij\xEAre",
      noData: "Agah\xEE tune"
    },
    pagination: {
      goto: "Bi\xE7e",
      pagesize: "/rupel",
      total: "Tevah\xEE {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Peyam",
      confirm: "Temam",
      cancel: "Betal bike",
      error: "Beyana \xE7ewt"
    },
    upload: {
      deleteTip: 'ji bo rake p\xEAl "delete" bike',
      delete: "Rake",
      preview: "P\xEA\u015Fd\xEEtin",
      continue: "Berdewam"
    },
    table: {
      emptyText: "Agah\xEE tune",
      confirmFilter: "Pi\u015Ftrast bike",
      resetFilter: "J\xEA bibe",
      clearFilter: "Hem\xFB",
      sumText: "Kom"
    },
    tree: {
      emptyText: "Agah\xEE tune"
    },
    transfer: {
      noMatch: "Li hembere ve agah\xEE tune",
      noData: "Agah\xEE tune",
      titles: ["L\xEEste 1", "L\xEEste 2"],
      filterPlaceholder: "Biniv\xEEse",
      noCheckedFormat: "{total} lib",
      hasCheckedFormat: "{checked}/{total} bijartin"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ky.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/ky.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => ky
});
var ky = {
  name: "ky",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u041C\u0443\u0440\u0443\u043D\u043A\u0443",
      clear: "\u0430\u0447\u044B\u043A"
    },
    datepicker: {
      now: "\u0430\u0437\u044B\u0440",
      today: "\u0431\u04AF\u0433\u04AF\u043D",
      cancel: "\u0436\u043E\u043A\u043A\u043E \u0447\u044B\u0433\u0430\u0440\u044B\u043B\u0434\u044B",
      clear: "\u0430\u0447\u044B\u043A",
      confirm: "\u0431\u0435\u043B\u0433\u0438\u043B\u04E9\u04E9",
      selectDate: "\u0434\u0430\u0442\u0430",
      selectTime: "\u0442\u0430\u043D\u0434\u043E\u043E \u0443\u0431\u0430\u043A\u0442\u044B\u0441\u044B",
      startDate: "\u0411\u0430\u0448\u0442\u0430\u043B\u0433\u0430\u043D \u0434\u0430\u0442\u0430\u0441\u044B",
      startTime: "Start \u0443\u0431\u0430\u043A\u044B\u0442",
      endDate: "\u0411\u04AF\u0442\u043A\u04E9\u043D \u0434\u0430\u0442\u0430\u0441\u044B",
      endTime: "End \u0443\u0431\u0430\u043A\u044B\u0442",
      prevYear: "\u04E9\u0442\u043A\u04E9\u043D \u0436\u044B\u043B\u044B",
      nextYear: "\u0431\u0438\u0440 \u0436\u044B\u043B\u0434\u0430\u043D \u043A\u0438\u0439\u0438\u043D",
      prevMonth: "\u04E8\u0442\u043A\u04E9\u043D \u0430\u0439\u0434\u0430",
      nextMonth: "\u041A\u0438\u0439\u0438\u043D\u043A\u0438 \u0430\u0439",
      year: "\u0436\u044B\u043B",
      month1: "\u0431\u0438\u0440\u0438\u043D\u0447\u0438 \u0430\u0439",
      month2: "\u042D\u043A\u0438\u043D\u0447\u0438 \u0430\u0439\u0434\u0430",
      month3: "\u04AE\u0447\u04AF\u043D\u0447\u04AF \u0430\u0439\u0434\u0430",
      month4: "\u0422\u04E9\u0440\u0442\u04AF\u043D\u0447\u04AF \u0430\u0439\u0434\u0430",
      month5: "\u0431\u0435\u0448\u0438\u043D\u0447\u0438 \u0430\u0439\u0434\u0430",
      month6: "\u0410\u043B\u0433\u0430\u0447\u043A\u044B \u0430\u043B\u0442\u044B \u0430\u0439",
      month7: "\u0436\u0435\u0442\u0438\u043D\u0447\u0438 \u0430\u0439\u0434\u0430",
      month8: "\u0441\u0435\u0433\u0438\u0437\u0438\u043D\u0447\u0438 \u0430\u0439",
      month9: "\u0410\u043B\u0433\u0430\u0447\u043A\u044B \u0442\u043E\u0433\u0443\u0437 \u0430\u0439",
      month10: "\u043E\u043D\u0443\u043D\u0447\u0443 \u0430\u0439\u0434\u0430",
      month11: "\u043E\u043D \u0431\u0438\u0440\u0438\u043D\u0447\u0438 \u0430\u0439",
      month12: "\u043E\u043D \u044D\u043A\u0438\u043D\u0447\u0438 \u0430\u0439\u0434\u0430",
      weeks: {
        sun: "\u0436\u0435\u0442\u0438 \u0436\u0443\u043C\u0430",
        mon: "\u0434\u04AF\u0439\u0448\u04E9\u043C\u0431\u04AF",
        tue: "\u0448\u0435\u0439\u0448\u0435\u043C\u0431\u0438",
        wed: "\u0448\u0430\u0440\u0448\u0435\u043C\u0431\u0438",
        thu: "\u0431\u0435\u0439\u0448\u0435\u043C\u0431\u0438",
        fri: "\u0436\u0443\u043C\u0430",
        sat: "\u0438\u0448\u0435\u043C\u0431\u0438"
      },
      months: {
        jan: "\u0431\u0438\u0440\u0438\u043D\u0447\u0438 \u0430\u0439",
        feb: "\u042D\u043A\u0438\u043D\u0447\u0438 \u0430\u0439\u0434\u0430",
        mar: "\u04AE\u0447\u04AF\u043D\u0447\u04AF \u0430\u0439\u0434\u0430",
        apr: "\u0422\u04E9\u0440\u0442\u04AF\u043D\u0447\u04AF \u0430\u0439\u0434\u0430",
        may: "\u0431\u0435\u0448\u0438\u043D\u0447\u0438 \u0430\u0439\u0434\u0430",
        jun: "\u0410\u043B\u0433\u0430\u0447\u043A\u044B \u0430\u043B\u0442\u044B \u0430\u0439",
        jul: "\u0436\u0435\u0442\u0438\u043D\u0447\u0438 \u0430\u0439\u0434\u0430",
        aug: "\u0441\u0435\u0433\u0438\u0437\u0438\u043D\u0447\u0438 \u0430\u0439",
        sep: "\u0410\u043B\u0433\u0430\u0447\u043A\u044B \u0442\u043E\u0433\u0443\u0437 \u0430\u0439",
        oct: "\u043E\u043D\u0443\u043D\u0447\u0443 \u0430\u0439\u0434\u0430",
        nov: "\u043E\u043D \u0431\u0438\u0440\u0438\u043D\u0447\u0438 \u0430\u0439",
        dec: "\u043E\u043D \u044D\u043A\u0438\u043D\u0447\u0438 \u0430\u0439\u0434\u0430"
      }
    },
    select: {
      loading: "\u0416\u04AF\u043A\u0442\u04E9\u043B\u04AF\u04AF\u0434\u04E9",
      noMatch: "\u0414\u0430\u043B \u043A\u0435\u043B\u0433\u0435\u043D \u043C\u0430\u0430\u043B\u044B\u043C\u0430\u0442\u0442\u0430\u0440",
      noData: "\u043C\u0430\u0430\u043B\u044B\u043C\u0430\u0442 \u0436\u043E\u043A",
      placeholder: "\u0442\u0430\u043D\u0434\u043E\u043E"
    },
    mention: {
      loading: "\u0416\u04AF\u043A\u0442\u04E9\u043B\u04AF\u04AF\u0434\u04E9"
    },
    cascader: {
      noMatch: "\u0414\u0430\u043B \u043A\u0435\u043B\u0433\u0435\u043D \u043C\u0430\u0430\u043B\u044B\u043C\u0430\u0442\u0442\u0430\u0440",
      loading: "\u0416\u04AF\u043A\u0442\u04E9\u043B\u04AF\u04AF\u0434\u04E9",
      placeholder: "\u0442\u0430\u043D\u0434\u043E\u043E",
      noData: "\u043C\u0430\u0430\u043B\u044B\u043C\u0430\u0442 \u0436\u043E\u043A"
    },
    pagination: {
      goto: "\u041C\u0443\u0440\u0443\u043D\u043A\u0443",
      pagesize: "\u0431\u0438\u0440",
      total: "\u0431\u04AF\u0442\u04AF\u043D\u0434\u04E9\u0439 {total} \u0441\u0430\u043D ",
      pageClassifier: "\u0431\u0435\u0442",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u0442\u0435\u0437",
      confirm: "\u0431\u0435\u043B\u0433\u0438\u043B\u04E9\u04E9",
      cancel: "\u0436\u043E\u043A\u043A\u043E \u0447\u044B\u0433\u0430\u0440\u044B\u043B\u0434\u044B",
      error: "\u041C\u0430\u0430\u043B\u044B\u043C\u0430\u0442\u0442\u0430\u0440\u0434\u044B \u043A\u0438\u0440\u0433\u0438\u0437\u04AF\u04AF \u043C\u044B\u0439\u0437\u0430\u043C\u0434\u0443\u0443 \u044D\u043C\u0435\u0441!"
    },
    upload: {
      deleteTip: "\u0416\u043E\u043A \u043A\u044B\u043B\u0443\u0443 \u0431\u0430\u0441\u043A\u044B\u0447\u044B\u043D \u0431\u0430\u0441\u0443\u0443 \u0436\u043E\u043A",
      delete: "\u0436\u043E\u043A \u043A\u044B\u043B\u0443\u0443",
      preview: "\u0416\u041C\u041A\u043D\u044B\u043D \u043A\u0430\u0440\u0442\u0438\u043D\u043A\u0438",
      continue: "\u0436\u04AF\u043A\u0442\u04E9\u043F \u0431\u0435\u0440"
    },
    table: {
      emptyText: "\u043C\u0430\u0430\u043B\u044B\u043C\u0430\u0442 \u0436\u043E\u043A",
      confirmFilter: "\u0447\u044B\u043F\u043A\u0430",
      resetFilter: "\u043A\u0430\u0439\u0440\u0430 \u043E\u0440\u043D\u043E\u0442\u0443\u0443",
      clearFilter: "\u0431\u04AF\u0442\u043A\u04E9\u043D",
      sumText: "\u0411\u0430\u0440\u0434\u044B\u0433\u044B \u0431\u043E\u043B\u0443\u043F"
    },
    tree: {
      emptyText: "\u043C\u0430\u0430\u043B\u044B\u043C\u0430\u0442 \u0436\u043E\u043A"
    },
    transfer: {
      noMatch: "\u0414\u0430\u043B \u043A\u0435\u043B\u0433\u0435\u043D \u043C\u0430\u0430\u043B\u044B\u043C\u0430\u0442\u0442\u0430\u0440",
      noData: "\u043C\u0430\u0430\u043B\u044B\u043C\u0430\u0442 \u0436\u043E\u043A",
      titles: ["1 \u0442\u0438\u0437\u043C\u0435\u0441\u0438", "2 \u0442\u0438\u0437\u043C\u0435\u0441\u0438"],
      filterPlaceholder: "\u0421\u0443\u0440\u0430\u043D\u044B\u0447, \u0438\u0437\u0434\u04E9\u04E9 \u043A\u0438\u0440\u0435\u0442",
      noCheckedFormat: "\u0431\u04AF\u0442\u04AF\u043D\u0434\u04E9\u0439 {total} \u0441\u0430\u043D",
      hasCheckedFormat: "\u0422\u0430\u043D\u0434\u0430\u043B\u0433\u0430\u043D {checked}/{total} \u0441\u0430\u043D"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"lt.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/lt.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => lt
});
var lt = {
  name: "lt",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "Valyti"
    },
    datepicker: {
      now: "Dabar",
      today: "\u0160iandien",
      cancel: "At\u0161aukti",
      clear: "Valyti",
      confirm: "OK",
      selectDate: "Pasirink dat\u0105",
      selectTime: "Pasirink laik\u0105",
      startDate: "Data nuo",
      startTime: "Laikas nuo",
      endDate: "Data iki",
      endTime: "Laikas iki",
      prevYear: "Metai atgal",
      nextYear: "Metai \u012F priek\u012F",
      prevMonth: "M\u0117n. atgal",
      nextMonth: "M\u0117n. \u012F priek\u012F",
      year: "",
      month1: "Sausis",
      month2: "Vasaris",
      month3: "Kovas",
      month4: "Balandis",
      month5: "Gegu\u017E\u0117",
      month6: "Bir\u017Eelis",
      month7: "Liepa",
      month8: "Rugpj\u016Btis",
      month9: "Rugs\u0117jis",
      month10: "Spalis",
      month11: "Lapkritis",
      month12: "Gruodis",
      weeks: {
        sun: "S.",
        mon: "Pr.",
        tue: "A.",
        wed: "T.",
        thu: "K.",
        fri: "Pn.",
        sat: "\u0160."
      },
      months: {
        jan: "Sau",
        feb: "Vas",
        mar: "Kov",
        apr: "Bal",
        may: "Geg",
        jun: "Bir",
        jul: "Lie",
        aug: "Rugp",
        sep: "Rugs",
        oct: "Spa",
        nov: "Lap",
        dec: "Gruo"
      }
    },
    select: {
      loading: "Kraunasi",
      noMatch: "Duomen\u0173 nerasta",
      noData: "N\u0117ra duomen\u0173",
      placeholder: "Pasirink"
    },
    mention: {
      loading: "Kraunasi"
    },
    cascader: {
      noMatch: "Duomen\u0173 nerasta",
      loading: "Kraunasi",
      placeholder: "Pasirink",
      noData: "N\u0117ra duomen\u0173"
    },
    pagination: {
      goto: "Eiti \u012F",
      pagesize: "/p",
      total: "Viso {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u017Dinut\u0117",
      confirm: "OK",
      cancel: "At\u0161aukti",
      error: "Klaida \u012Fvestuose duomenyse"
    },
    upload: {
      deleteTip: "spauskite \"Trinti\" nor\u0117dami pa\u0161alinti",
      delete: "Trinti",
      preview: "Per\u017Ei\u016Br\u0117ti",
      continue: "Toliau"
    },
    table: {
      emptyText: "Duomen\u0173 nerasta",
      confirmFilter: "Patvirtinti",
      resetFilter: "Atstatyti",
      clearFilter: "I\u0161valyti",
      sumText: "Suma"
    },
    tour: {
      next: "Kitas",
      previous: "Ankstesnis",
      finish: "Baigti"
    },
    tree: {
      emptyText: "N\u0117ra duomen\u0173"
    },
    transfer: {
      noMatch: "Duomen\u0173 nerasta",
      noData: "N\u0117ra duomen\u0173",
      titles: ["S\u0105ra\u0161as 1", "S\u0105ra\u0161as 2"],
      filterPlaceholder: "\u012Evesk rakta\u017Eod\u012F",
      noCheckedFormat: "Viso: {total}",
      hasCheckedFormat: "Pa\u017Eym\u0117ta {checked} i\u0161 {total}"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"lv.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/lv.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => lv
});
var lv = {
  name: "lv",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Labi",
      clear: "Not\u012Br\u012Bt"
    },
    datepicker: {
      now: "Tagad",
      today: "\u0160odien",
      cancel: "Atcelt",
      clear: "Not\u012Br\u012Bt",
      confirm: "Labi",
      selectDate: "Izv\u0113l\u0113ties datumu",
      selectTime: "Izv\u0113l\u0113ties laiku",
      startDate: "S\u0101kuma datums",
      startTime: "S\u0101kuma laiks",
      endDate: "Beigu datums",
      endTime: "Beigu laiks",
      prevYear: "Iepriek\u0161\u0113jais gads",
      nextYear: "N\u0101kamais gads",
      prevMonth: "Iepriek\u0161\u0113jais m\u0113nesis",
      nextMonth: "N\u0101kamais m\u0113nesis",
      year: "",
      month1: "Janv\u0101ris",
      month2: "Febru\u0101ris",
      month3: "Marts",
      month4: "Apr\u012Blis",
      month5: "Maijs",
      month6: "J\u016Bnijs",
      month7: "J\u016Blijs",
      month8: "Augusts",
      month9: "Septembris",
      month10: "Oktobris",
      month11: "Novembris",
      month12: "Decembris",
      weeks: {
        sun: "Sv",
        mon: "Pr",
        tue: "Ot",
        wed: "Tr",
        thu: "Ce",
        fri: "Pk",
        sat: "Se"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "Mai",
        jun: "J\u016Bn",
        jul: "J\u016Bl",
        aug: "Aug",
        sep: "Sep",
        oct: "Okt",
        nov: "Nov",
        dec: "Dec"
      }
    },
    select: {
      loading: "Iel\u0101d\u0113",
      noMatch: "Nav atbilsto\u0161u datu",
      noData: "Nav datu",
      placeholder: "Izv\u0113l\u0113ties"
    },
    mention: {
      loading: "Iel\u0101d\u0113"
    },
    cascader: {
      noMatch: "Nav atbilsto\u0161u datu",
      loading: "Iel\u0101d\u0113",
      placeholder: "Izv\u0113l\u0113ties",
      noData: "Nav datu"
    },
    pagination: {
      goto: "Iet uz",
      pagesize: "/lapa",
      total: "Kop\u0101 {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Pazi\u0146ojums",
      confirm: "Labi",
      cancel: "Atcelt",
      error: "Neder\u012Bga ievade"
    },
    upload: {
      deleteTip: "Nospiediet dz\u0113st lai iz\u0146emtu",
      delete: "Dz\u0113st",
      preview: "Priek\u0161skat\u012Bt",
      continue: "Turpin\u0101t"
    },
    table: {
      emptyText: "Nav datu",
      confirmFilter: "Apstiprin\u0101t",
      resetFilter: "Atiestat\u012Bt",
      clearFilter: "Visi",
      sumText: "Summa"
    },
    tree: {
      emptyText: "Nav datu"
    },
    transfer: {
      noMatch: "Nav atbilsto\u0161u datu",
      noData: "Nav datu",
      titles: ["Saraksts 1", "Saraksts 2"],
      filterPlaceholder: "Ievad\u012Bt atsl\u0113gv\u0101rdu",
      noCheckedFormat: "{total} vien\u012Bbas",
      hasCheckedFormat: "{checked}/{total} atz\u012Bm\u0113ti"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"mn.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/mn.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => mn
});
var mn = {
  name: "mn",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u0422\u0438\u0439\u043C",
      clear: "\u0426\u044D\u0432\u044D\u0440\u043B\u044D\u0445"
    },
    datepicker: {
      now: "\u041E\u0434\u043E\u043E",
      today: "\u04E8\u043D\u04E9\u04E9\u0434\u04E9\u0440",
      cancel: "\u0411\u043E\u043B\u0438\u0445",
      clear: "\u0426\u044D\u0432\u044D\u0440\u043B\u044D\u0445",
      confirm: "\u0422\u0438\u0439\u043C",
      selectDate: "\u041E\u0433\u043D\u043E\u043E\u0433 \u0441\u043E\u043D\u0433\u043E",
      selectTime: "\u0426\u0430\u0433\u0438\u0439\u0433 \u0441\u043E\u043D\u0433\u043E",
      startDate: "\u042D\u0445\u043B\u044D\u0445 \u043E\u0433\u043D\u043E\u043E",
      startTime: "\u042D\u0445\u043B\u044D\u0445 \u0446\u0430\u0433",
      endDate: "\u0414\u0443\u0443\u0441\u0430\u0445 \u043E\u0433\u043D\u043E\u043E",
      endTime: "\u0414\u0443\u0443\u0441\u0430\u0445 \u0446\u0430\u0433",
      prevYear: "\u04E8\u043C\u043D\u04E9\u0445 \u0436\u0438\u043B",
      nextYear: "\u0414\u0430\u0440\u0430\u0430 \u0436\u0438\u043B",
      prevMonth: "\u04E8\u043C\u043D\u04E9\u0445 \u0441\u0430\u0440",
      nextMonth: "\u0414\u0430\u0440\u0430\u0430 \u0441\u0430\u0440",
      year: "\u043E\u043D",
      month1: "1 \u0441\u0430\u0440",
      month2: "2 \u0441\u0430\u0440",
      month3: "3 \u0441\u0430\u0440",
      month4: "4 \u0441\u0430\u0440",
      month5: "5 \u0441\u0430\u0440",
      month6: "6 \u0441\u0430\u0440",
      month7: "7 \u0441\u0430\u0440",
      month8: "8 \u0441\u0430\u0440",
      month9: "9 \u0441\u0430\u0440",
      month10: "10 \u0441\u0430\u0440",
      month11: "11 \u0441\u0430\u0440",
      month12: "12 \u0441\u0430\u0440",
      week: "\u0414\u043E\u043B\u043E\u043E \u0445\u043E\u043D\u043E\u0433",
      weeks: {
        sun: "\u041D\u044F\u043C",
        mon: "\u0414\u0430\u0432",
        tue: "\u041C\u044F\u0433",
        wed: "\u041B\u0445\u0430",
        thu: "\u041F\u04AF\u0440",
        fri: "\u0411\u0430\u0430",
        sat: "\u0411\u044F\u043C"
      },
      months: {
        jan: "1 \u0441\u0430\u0440",
        feb: "2 \u0441\u0430\u0440",
        mar: "3 \u0441\u0430\u0440",
        apr: "4 \u0441\u0430\u0440",
        may: "5 \u0441\u0430\u0440",
        jun: "6 \u0441\u0430\u0440",
        jul: "7 \u0441\u0430\u0440",
        aug: "8 \u0441\u0430\u0440",
        sep: "9 \u0441\u0430\u0440",
        oct: "10 \u0441\u0430\u0440",
        nov: "11 \u0441\u0430\u0440",
        dec: "12 \u0441\u0430\u0440"
      }
    },
    select: {
      loading: "\u0410\u0447\u0430\u0430\u043B\u0436 \u0431\u0430\u0439\u043D\u0430",
      noMatch: "\u0422\u043E\u0445\u0438\u0440\u043E\u0445 \u04E9\u0433\u04E9\u0433\u0434\u04E9\u043B \u0431\u0430\u0439\u0445\u0433\u04AF\u0439",
      noData: "\u04E8\u0433\u04E9\u0433\u0434\u04E9\u043B \u0431\u0430\u0439\u0445\u0433\u04AF\u0439",
      placeholder: "\u0421\u043E\u043D\u0433\u043E\u0445"
    },
    mention: {
      loading: "\u0410\u0447\u0430\u0430\u043B\u0436 \u0431\u0430\u0439\u043D\u0430"
    },
    cascader: {
      noMatch: "\u0422\u043E\u0445\u0438\u0440\u043E\u0445 \u04E9\u0433\u04E9\u0433\u0434\u04E9\u043B \u0431\u0430\u0439\u0445\u0433\u04AF\u0439",
      loading: "\u0410\u0447\u0430\u0430\u043B\u0436 \u0431\u0430\u0439\u043D\u0430",
      placeholder: "\u0421\u043E\u043D\u0433\u043E\u0445",
      noData: "\u04E8\u0433\u04E9\u0433\u0434\u04E9\u043B \u0431\u0430\u0439\u0445\u0433\u04AF\u0439"
    },
    pagination: {
      goto: "\u041E\u0447\u0438\u0445",
      pagesize: "/\u0445\u0443\u0443\u0434\u0430\u0441",
      total: "\u041D\u0438\u0439\u0442 {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u0417\u0443\u0440\u0432\u0430\u0441",
      confirm: "\u0422\u0438\u0439\u043C",
      cancel: "\u0411\u043E\u043B\u0438\u0445",
      error: "\u0411\u0443\u0440\u0443\u0443 \u0443\u0442\u0433\u0430"
    },
    upload: {
      deleteTip: "\u0423\u0441\u0442\u0433\u0430\u0445\u044B\u043D \u0434\u0430\u0440\u0436 \u0430\u0440\u0438\u043B\u0433\u0430",
      delete: "\u0423\u0441\u0442\u0433\u0430\u0445",
      preview: "\u04E8\u043C\u043D\u04E9\u0445",
      continue: "\u04AE\u0440\u0433\u044D\u043B\u0436\u043B\u04AF\u04AF\u043B\u044D\u0445"
    },
    table: {
      emptyText: "\u04E8\u0433\u04E9\u0433\u0434\u04E9\u043B \u0431\u0430\u0439\u0445\u0433\u04AF\u0439",
      confirmFilter: "\u0417\u04E9\u0432\u0448\u04E9\u04E9\u0440\u04E9\u0445",
      resetFilter: "\u0426\u044D\u0432\u044D\u0440\u043B\u044D\u0445",
      clearFilter: "\u0411\u04AF\u0433\u0434",
      sumText: "\u041D\u0438\u0439\u0442"
    },
    tree: {
      emptyText: "\u04E8\u0433\u04E9\u0433\u0434\u04E9\u043B \u0431\u0430\u0439\u0445\u0433\u04AF\u0439"
    },
    transfer: {
      noMatch: "\u0422\u043E\u0445\u0438\u0440\u043E\u0445 \u04E9\u0433\u04E9\u0433\u0434\u04E9\u043B \u0431\u0430\u0439\u0445\u0433\u04AF\u0439",
      noData: "\u04E8\u0433\u04E9\u0433\u0434\u04E9\u043B \u0431\u0430\u0439\u0445\u0433\u04AF\u0439",
      titles: ["\u0416\u0430\u0433\u0441\u0430\u0430\u043B\u0442 1", "\u0416\u0430\u0433\u0441\u0430\u0430\u043B\u0442 2"],
      filterPlaceholder: "\u0423\u0442\u0433\u0430 \u043E\u0440\u0443\u0443\u043B",
      noCheckedFormat: "{total} \u04E9\u0433\u04E9\u0433\u0434\u04E9\u043B",
      hasCheckedFormat: "{checked}/{total} \u0441\u043E\u043D\u0433\u043E\u0441\u043E\u043D"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"my.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/my.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => my
});
var my = {
  name: "my",
  el: {
    breadcrumb: {
      label: "\u1018\u101B\u1010\u103A\u1012\u103A\u1001\u101B\u1019\u103A"
    },
    colorpicker: {
      confirm: "\u1021\u102D\u102F\u1000\u1031",
      clear: "\u101B\u103E\u1004\u103A\u1038\u1019\u101A\u103A",
      defaultLabel: "\u1021\u101B\u1031\u102C\u1004\u103A\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1015\u102B",
      description: "\u101C\u1000\u103A\u101B\u103E\u102D\u1021\u101B\u1031\u102C\u1004\u103A\u1019\u103E\u102C {color} \u1016\u103C\u1005\u103A\u1015\u102B\u101E\u100A\u103A\u104B \u1010\u1001\u103C\u102C\u1038\u1021\u101B\u1031\u102C\u1004\u103A\u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u101C\u102D\u102F\u1015\u102B\u1000 enter \u1000\u102D\u102F\u1014\u103E\u102D\u1015\u103A\u1015\u102B\u104B",
      alphaLabel: "alpha \u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1000\u102D\u102F \u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1015\u102B"
    },
    datepicker: {
      now: "\u101A\u1001\u102F",
      today: "\u101A\u1014\u1031\u1037",
      cancel: "\u1015\u101A\u103A\u1016\u103B\u1000\u103A",
      clear: "\u101B\u103E\u1004\u103A\u1038\u1019\u101A\u103A",
      confirm: "\u1021\u102D\u102F\u1000\u1031",
      dateTablePrompt: "arrow keys \u1014\u103E\u1004\u103A\u1037 enter \u1000\u102D\u102F\u1021\u101E\u102F\u1036\u1038\u1015\u103C\u102F\u1015\u103C\u102E\u1038 \u1014\u1031\u1037\u101B\u1000\u103A \u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1015\u102B",
      monthTablePrompt: "arrow keys \u1014\u103E\u1004\u103A\u1037 enter \u1000\u102D\u102F\u1021\u101E\u102F\u1036\u1038\u1015\u103C\u102F\u1015\u103C\u102E\u1038 \u101C \u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1015\u102B",
      yearTablePrompt: "arrow keys \u1014\u103E\u1004\u103A\u1037 enter \u1000\u102D\u102F\u1021\u101E\u102F\u1036\u1038\u1015\u103C\u102F\u1015\u103C\u102E\u1038 \u1014\u103E\u1005\u103A \u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1015\u102B",
      selectedDate: "\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1011\u102C\u1038\u101E\u1031\u102C \u101B\u1000\u103A\u1005\u103D\u1032",
      selectDate: "\u101B\u1000\u103A\u1005\u103D\u1032\u1000\u102D\u102F \u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1015\u102B",
      selectTime: "\u1021\u1001\u103B\u102D\u1014\u103A\u1000\u102D\u102F \u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1015\u102B",
      startDate: "\u1005\u1010\u1004\u103A\u1019\u100A\u103A\u1037\u101B\u1000\u103A\u1005\u103D\u1032",
      startTime: "\u1005\u1010\u1004\u103A\u1019\u100A\u103A\u1037\u1021\u1001\u103B\u102D\u1014\u103A",
      endDate: "\u1000\u102F\u1014\u103A\u1006\u102F\u1036\u1038\u1019\u100A\u103A\u1037\u101B\u1000\u103A\u1005\u103D\u1032",
      endTime: "\u1000\u102F\u1014\u103A\u1006\u102F\u1036\u1038\u1019\u100A\u103A\u1037\u1021\u1001\u103B\u102D\u1014\u103A",
      prevYear: "\u101A\u1001\u1004\u103A\u1014\u103E\u1005\u103A",
      nextYear: "\u1014\u1031\u102C\u1000\u103A\u1014\u103E\u1005\u103A",
      prevMonth: "\u101A\u1001\u1004\u103A\u101C",
      nextMonth: "\u1014\u1031\u102C\u1000\u103A\u101C",
      year: "",
      month1: "\u1007\u1014\u103A\u1014\u101D\u102B\u101B\u102E",
      month2: "\u1016\u1031\u1016\u1031\u102C\u103A\u101D\u102B\u101B\u102E",
      month3: "\u1019\u1010\u103A",
      month4: "\u1027\u1015\u103C\u102E",
      month5: "\u1019\u1031",
      month6: "\u1007\u103D\u1014\u103A",
      month7: "\u1007\u1030\u101C\u102D\u102F\u1004\u103A",
      month8: "\u101E\u103C\u1002\u102F\u1010\u103A",
      month9: "\u1005\u1000\u103A\u1010\u1004\u103A\u1018\u102C",
      month10: "\u1021\u1031\u102C\u1000\u103A\u1010\u102D\u102F\u1018\u102C",
      month11: "\u1014\u102D\u102F\u101D\u1004\u103A\u1018\u102C",
      month12: "\u1012\u102E\u1007\u1004\u103A\u1018\u102C",
      week: "\u101B\u1000\u103A\u101E\u1010\u1039\u1010\u1015\u1010\u103A",
      weeks: {
        sun: "\u1014\u103D\u1031",
        mon: "\u101C\u102C",
        tue: "\u1002\u102B",
        wed: "\u101F\u1030\u1038",
        thu: "\u1000\u103C\u102C",
        fri: "\u101E\u1031\u102C",
        sat: "\u1014\u1031"
      },
      weeksFull: {
        sun: "\u1010\u1014\u1004\u103A\u1039\u1002\u1014\u103D\u1031",
        mon: "\u1010\u1014\u1004\u103A\u1039\u101C\u102C",
        tue: "\u1021\u1004\u103A\u1039\u1002\u102B",
        wed: "\u1017\u102F\u1012\u1039\u1013\u101F\u1030\u1038",
        thu: "\u1000\u103C\u102C\u101E\u1015\u1010\u1031\u1038",
        fri: "\u101E\u1031\u102C\u1000\u103C\u102C",
        sat: "\u1005\u1014\u1031"
      },
      months: {
        jan: "\u1007\u1014\u103A",
        feb: "\u1016\u1031",
        mar: "\u1019\u1010\u103A",
        apr: "\u1015\u103C\u102E",
        may: "\u1019\u1031",
        jun: "\u1007\u103D\u1014\u103A",
        jul: "\u101C\u102D\u102F\u1004\u103A",
        aug: "\u1029",
        sep: "\u1005\u1000\u103A",
        oct: "\u1021\u1031\u102C\u1000\u103A",
        nov: "\u1014\u102D\u102F",
        dec: "\u1012\u102E"
      }
    },
    inputNumber: {
      decrease: "\u1021\u101B\u1031\u1021\u1010\u103D\u1000\u103A\u101C\u103B\u103E\u1031\u102C\u1037\u1001\u103B",
      increase: "\u1021\u101B\u1031\u1021\u1010\u103D\u1000\u103A\u1010\u102D\u102F\u1038"
    },
    select: {
      loading: "\u101D\u1014\u103A\u1010\u1004\u103A\u1014\u1031\u101E\u100A\u103A",
      noMatch: "\u1000\u102D\u102F\u1000\u103A\u100A\u102E\u101E\u1031\u102C\u1012\u1031\u1010\u102C\u1019\u101B\u103E\u102D\u1015\u102B",
      noData: "\u1012\u1031\u1010\u102C\u1019\u101B\u103E\u102D\u1015\u102B",
      placeholder: "\u101B\u103D\u1031\u1038\u1015\u102B"
    },
    mention: {
      loading: "\u101D\u1014\u103A\u1010\u1004\u103A\u1014\u1031\u101E\u100A\u103A"
    },
    dropdown: {
      toggleDropdown: "Dropdown \u1005\u102C\u101B\u1004\u103A\u1038 \u1016\u103D\u1004\u103A\u1037/\u1015\u102D\u1010\u103A"
    },
    cascader: {
      noMatch: "\u1000\u102D\u102F\u1000\u103A\u100A\u102E\u101E\u1031\u102C\u1012\u1031\u1010\u102C\u1019\u101B\u103E\u102D\u1015\u102B",
      loading: "\u101D\u1014\u103A\u1010\u1004\u103A\u1014\u1031\u101E\u100A\u103A",
      placeholder: "\u101B\u103D\u1031\u1038\u1015\u102B",
      noData: "\u1012\u1031\u1010\u102C\u1019\u101B\u103E\u102D\u1015\u102B"
    },
    pagination: {
      goto: "\u101E\u103D\u102C\u1038\u1019\u101A\u103A",
      pagesize: "/\u1005\u102C\u1019\u103B\u1000\u103A\u1014\u103E\u102C",
      total: "\u1005\u102F\u1005\u102F\u1015\u1031\u102B\u1004\u103A\u1038 {total}",
      pageClassifier: "",
      page: "\u1005\u102C\u1019\u103B\u1000\u103A\u1014\u103E\u102C",
      prev: "\u101B\u103E\u1031\u1037\u1005\u102C\u1019\u103B\u1000\u103A\u1014\u103E\u102C\u101E\u102D\u102F\u1037",
      next: "\u1014\u1031\u102C\u1000\u103A\u1005\u102C\u1019\u103B\u1000\u103A\u1014\u103E\u102C\u101E\u102D\u102F\u1037",
      currentPage: "\u1005\u102C\u1019\u103B\u1000\u103A\u1014\u103E\u102C {pager}",
      prevPages: "\u101B\u103E\u1031\u1037\u1005\u102C\u1019\u103B\u1000\u103A\u1014\u103E\u102C {pager} \u101E\u102D\u102F\u1037",
      nextPages: "\u1014\u1031\u102C\u1000\u103A\u1005\u102C\u1019\u103B\u1000\u103A\u1014\u103E\u102C {pager} \u101E\u102D\u102F\u1037",
      deprecationWarning: "\u1000\u1014\u1037\u103A\u1000\u103D\u1000\u103A\u1011\u102C\u1038\u101E\u1031\u102C \u1021\u101E\u102F\u1036\u1038\u1015\u103C\u102F\u1019\u103E\u102F\u1019\u103B\u102C\u1038\u1000\u102D\u102F \u1010\u103D\u1031\u1037\u101B\u103E\u102D\u1015\u102B\u101E\u100A\u103A\u104B \u1021\u101E\u1031\u1038\u1005\u102D\u1010\u103A\u1021\u1001\u103B\u1000\u103A\u1021\u101C\u1000\u103A\u1019\u103B\u102C\u1038\u1000\u102D\u102F el-pagination \u101B\u1032\u1037\u1005\u102C\u101B\u103D\u1000\u103A\u1005\u102C\u1010\u1019\u103A\u1038\u1010\u103D\u1004\u103A \u1016\u1010\u103A\u101B\u103E\u102F\u1015\u102B\u104B"
    },
    dialog: {
      close: "\u1024\u1012\u102D\u102F\u1004\u103A\u101A\u102C\u101C\u1031\u102C\u1037\u1002\u103A\u1000\u102D\u102F \u1015\u102D\u1010\u103A\u1015\u102B"
    },
    drawer: {
      close: "\u1024\u1012\u102D\u102F\u1004\u103A\u101A\u102C\u101C\u1031\u102C\u1037\u1002\u103A\u1000\u102D\u102F \u1015\u102D\u1010\u103A\u1015\u102B"
    },
    messagebox: {
      title: "\u1019\u1000\u103A\u1006\u1031\u1037\u1001\u103B\u103A",
      confirm: "\u1021\u102D\u102F\u1000\u1031",
      cancel: "\u1015\u101A\u103A\u1016\u103B\u1000\u103A",
      error: "\u1010\u101B\u102C\u1038\u1019\u101D\u1004\u103A\u1011\u100A\u1037\u103A\u101E\u103D\u1004\u103A\u1038\u1019\u103E\u102F",
      close: "\u1024\u1012\u102D\u102F\u1004\u103A\u101A\u102C\u101C\u1031\u102C\u1037\u1002\u103A\u1000\u102D\u102F \u1015\u102D\u1010\u103A\u1015\u102B"
    },
    upload: {
      deleteTip: "\u1016\u101A\u103A\u101B\u103E\u102C\u1038\u101B\u1014\u103A \u1016\u103B\u1000\u103A\u1019\u100A\u103A \u1000\u102D\u102F\u1014\u103E\u102D\u1015\u103A\u1015\u102B",
      delete: "\u1016\u103B\u1000\u103A\u1019\u100A\u103A",
      preview: "\u1021\u1005\u1019\u103A\u1038\u1000\u103C\u100A\u1037\u103A\u1019\u100A\u103A",
      continue: "\u101B\u103E\u1031\u1037\u1006\u1000\u103A\u1019\u100A\u103A"
    },
    slider: {
      defaultLabel: "{min} \u1014\u103E\u1004\u103A\u1037 {max} \u1000\u103C\u102C\u1038\u101B\u103E\u102D \u1006\u101C\u102D\u102F\u1000\u103A\u1012\u102B",
      defaultRangeStartLabel: "\u1005\u1010\u1004\u103A\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1000\u102D\u102F \u101B\u103D\u1031\u1038\u1015\u102B",
      defaultRangeEndLabel: "\u1021\u1006\u102F\u1036\u1038\u101E\u1010\u103A\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1000\u102D\u102F \u101B\u103D\u1031\u1038\u1015\u102B"
    },
    table: {
      emptyText: "\u1012\u1031\u1010\u102C\u1019\u101B\u103E\u102D\u1015\u102B",
      confirmFilter: "\u1021\u1010\u100A\u103A\u1015\u103C\u102F\u1019\u100A\u103A",
      resetFilter: "\u1015\u103C\u1014\u103A\u101C\u100A\u103A\u101E\u1010\u103A\u1019\u103E\u1010\u103A\u1019\u100A\u103A",
      clearFilter: "\u1021\u102C\u1038\u101C\u102F\u1036\u1038",
      sumText: "\u1015\u1031\u102B\u1004\u103A\u1038\u101C\u1012\u103A"
    },
    tour: {
      next: "\u1014\u1031\u102C\u1000\u103A\u101E\u102D\u102F\u1037",
      previous: "\u101B\u103E\u1031\u1037\u101E\u102D\u102F\u1037",
      finish: "\u1015\u103C\u102E\u1038\u1015\u103C\u102E"
    },
    tree: {
      emptyText: "\u1012\u1031\u1010\u102C\u1019\u101B\u103E\u102D\u1015\u102B"
    },
    transfer: {
      noMatch: "\u1000\u102D\u102F\u1000\u103A\u100A\u102E\u101E\u1031\u102C\u1012\u1031\u1010\u102C\u1019\u101B\u103E\u102D\u1015\u102B",
      noData: "\u1012\u1031\u1010\u102C\u1019\u101B\u103E\u102D\u1015\u102B",
      titles: ["\u1005\u102C\u101B\u1004\u103A\u1038 \u1041", "\u1005\u102C\u101B\u1004\u103A\u1038 \u1042"],
      filterPlaceholder: "\u101E\u1031\u102C\u1037\u1001\u103B\u1000\u103A\u1005\u1000\u102C\u1038\u101C\u102F\u1036\u1038\u1000\u102D\u102F \u101B\u102D\u102F\u1000\u103A\u1011\u100A\u1037\u103A\u1015\u102B",
      noCheckedFormat: "{total} \u1001\u102F",
      hasCheckedFormat: "{checked}/{total} \u101B\u103D\u1031\u1038\u1015\u103C\u102E\u1038"
    },
    image: {
      error: "\u1019\u1021\u1031\u102C\u1004\u103A\u1019\u103C\u1004\u103A\u1015\u102B"
    },
    pageHeader: {
      title: "\u1015\u103C\u1014\u103A\u1019\u100A\u103A"
    },
    popconfirm: {
      confirmButtonText: "\u101F\u102F\u1010\u103A\u1000\u1032\u1037",
      cancelButtonText: "\u1019\u101C\u102F\u1015\u103A\u1010\u1031\u102C\u1037\u1018\u1030\u1038"
    },
    carousel: {
      leftArrow: "\u1000\u102C\u101B\u1030\u1006\u101A\u103A \u1019\u103C\u102C\u1038 \u1018\u101A\u103A\u1018\u1000\u103A",
      rightArrow: "\u1000\u102C\u101B\u1030\u1006\u101A\u103A \u1019\u103C\u102C\u1038 \u100A\u102C\u1018\u1000\u103A",
      indicator: "\u1000\u102C\u101B\u1030\u1006\u101A\u103A \u1021\u100A\u103D\u103E\u1014\u103A\u1038 {index} \u101E\u102D\u102F\u1037 \u1015\u103C\u1031\u102C\u1004\u103A\u1038\u101B\u1014\u103A"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"nb-no.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/nb-no.mjs                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => nbNo
});
var nbNo = {
  name: "nb-no",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "T\xF8m"
    },
    datepicker: {
      now: "N\xE5",
      today: "I dag",
      cancel: "Avbryt",
      clear: "T\xF8m",
      confirm: "OK",
      selectDate: "Velg dato",
      selectTime: "Velg tidspunkt",
      startDate: "Startdato",
      startTime: "Starttidspunkt",
      endDate: "Sluttdato",
      endTime: "Sluttidspunkt",
      prevYear: "I fjor",
      nextYear: "Neste \xE5r",
      prevMonth: "Forrige M\xE5ned",
      nextMonth: "Neste M\xE5ned",
      year: "",
      month1: "Januar",
      month2: "Februar",
      month3: "Mars",
      month4: "April",
      month5: "Mai",
      month6: "Juni",
      month7: "Juli",
      month8: "August",
      month9: "September",
      month10: "Oktober",
      month11: "November",
      month12: "Desember",
      week: "uke",
      weeks: {
        sun: "S\xF8n",
        mon: "Man",
        tue: "Tir",
        wed: "Ons",
        thu: "Tor",
        fri: "Fre",
        sat: "L\xF8r"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "Mai",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Okt",
        nov: "Nov",
        dec: "Des"
      }
    },
    select: {
      loading: "Laster",
      noMatch: "Ingen samsvarende resulater",
      noData: "Ingen resulater",
      placeholder: "Velg"
    },
    mention: {
      loading: "Laster"
    },
    cascader: {
      noMatch: "Ingen samsvarende resultater",
      loading: "Laster",
      placeholder: "Velg",
      noData: "Ingen resultater"
    },
    pagination: {
      goto: "G\xE5 til",
      pagesize: "/side",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      confirm: "OK",
      cancel: "Avbryt",
      error: "Ugyldig input"
    },
    upload: {
      deleteTip: "trykk p\xE5 x for \xE5 slette",
      delete: "Slett",
      preview: "Forh\xE5ndsvisning",
      continue: "Fortsett"
    },
    table: {
      emptyText: "Ingen Data",
      confirmFilter: "Bekreft",
      resetFilter: "Tilbakestill",
      clearFilter: "Alle",
      sumText: "Sum"
    },
    tree: {
      emptyText: "Ingen Data"
    },
    transfer: {
      noMatch: "Ingen samsvarende data",
      noData: "Ingen data",
      titles: ["Liste 1", "Liste 2"],
      filterPlaceholder: "Skriv inn n\xF8kkelord",
      noCheckedFormat: "{total} gjenstander",
      hasCheckedFormat: "{checked}/{total} valgt"
    },
    image: {
      error: "FEILET"
    },
    pageHeader: {
      title: "Tilbake"
    },
    popconfirm: {
      confirmButtonText: "Ja",
      cancelButtonText: "Nei"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"nl.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/nl.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => nl
});
var nl = {
  name: "nl",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Bevestig",
      clear: "Wissen"
    },
    datepicker: {
      now: "Nu",
      today: "Vandaag",
      cancel: "Annuleren",
      clear: "Legen",
      confirm: "Bevestig",
      selectDate: "Selecteer datum",
      selectTime: "Selecteer tijd",
      startDate: "Startdatum",
      startTime: "Starttijd",
      endDate: "Einddatum",
      endTime: "Eindtijd",
      prevYear: "Vorig jaar",
      nextYear: "Volgend jaar",
      prevMonth: "Vorige maand",
      nextMonth: "Volgende maand",
      year: "",
      month1: "januari",
      month2: "februari",
      month3: "maart",
      month4: "april",
      month5: "mei",
      month6: "juni",
      month7: "juli",
      month8: "augustus",
      month9: "september",
      month10: "oktober",
      month11: "november",
      month12: "december",
      weeks: {
        sun: "Zo",
        mon: "Ma",
        tue: "Di",
        wed: "Wo",
        thu: "Do",
        fri: "Vr",
        sat: "Za"
      },
      months: {
        jan: "jan",
        feb: "feb",
        mar: "maa",
        apr: "apr",
        may: "mei",
        jun: "jun",
        jul: "jul",
        aug: "aug",
        sep: "sep",
        oct: "okt",
        nov: "nov",
        dec: "dec"
      }
    },
    select: {
      loading: "Laden",
      noMatch: "Geen overeenkomende resultaten",
      noData: "Geen data",
      placeholder: "Selecteer"
    },
    mention: {
      loading: "Laden"
    },
    cascader: {
      noMatch: "Geen overeenkomende resultaten",
      loading: "Laden",
      placeholder: "Selecteer",
      noData: "Geen data"
    },
    pagination: {
      goto: "Ga naar",
      pagesize: "/pagina",
      total: "Totaal {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Bericht",
      confirm: "Bevestig",
      cancel: "Annuleren",
      error: "Ongeldige invoer"
    },
    upload: {
      deleteTip: "Kies verwijder om te wissen",
      delete: "Verwijder",
      preview: "Voorbeeld",
      continue: "Doorgaan"
    },
    table: {
      emptyText: "Geen data",
      confirmFilter: "Bevestigen",
      resetFilter: "Reset",
      clearFilter: "Alles",
      sumText: "Som"
    },
    tree: {
      emptyText: "Geen data"
    },
    transfer: {
      noMatch: "Geen overeenkomende resultaten",
      noData: "Geen data",
      titles: ["Lijst 1", "Lijst 2"],
      filterPlaceholder: "Geef zoekwoerd",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} geselecteerd"
    },
    image: {
      error: "MISLUKT"
    },
    pageHeader: {
      title: "Terug"
    },
    popconfirm: {
      confirmButtonText: "Ja",
      cancelButtonText: "Nee"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pa.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/pa.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => pa
});
var pa = {
  name: "pa",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u062A\u0627\u06CC\u06CC\u062F",
      clear: "\u067E\u0627\u06A9\u0648\u0644"
    },
    datepicker: {
      now: "\u0627\u0648\u0633",
      today: "\u0646\u0646",
      cancel: "\u0631\u062F\u0648\u0644",
      clear: "\u067E\u0627\u06A9\u0648\u0644",
      confirm: "\u062A\u0627\u06CC\u06CC\u062F",
      selectDate: "\u0646\u06CC\u067C\u0647 \u0648\u067C\u0627\u06A9\u0626",
      selectTime: "\u0648\u062E\u062A \u0648\u067C\u0627\u06A9\u0626",
      startDate: "\u067E\u06CC\u0644 \u0646\u06CC\u067C\u0647",
      startTime: "\u062F \u067E\u064A\u0644 \u0648\u062E\u062A",
      endDate: "\u062F \u067E\u0627\u06CC \u0646\u06CC\u067C\u0647",
      endTime: "\u062F \u067E\u0627\u06CC \u0648\u062E\u062A",
      prevYear: "\u062A\u06CC\u0631 \u06A9\u0627\u0644",
      nextYear: "\u0631\u0627\u062A\u0644\u0648\u0646\u06A9\u06CC \u06A9\u0627\u0644",
      prevMonth: "\u062A\u06CC\u0631\u0647 \u0645\u06CC\u0627\u0634\u062A",
      nextMonth: "\u0631\u0627\u062A\u0644\u0648\u0646\u06A9\u06D0 \u0645\u06CC\u0627\u0634\u062A",
      year: "\u06A9\u0627\u0644",
      month1: "\u062C\u0646\u0648\u0631\u064A",
      month2: "\u0641\u0628\u0631\u0648\u0631\u064A",
      month3: "\u0645\u0627\u0631\u0686",
      month4: "\u0627\u067E\u0631\u06CC\u0644",
      month5: "\u0645\u06CC",
      month6: "\u062C\u0648\u0646",
      month7: "\u062C\u0648\u0644\u0627\u06CC",
      month8: "\u0627\u06AB\u0633\u062A",
      month9: "\u0633\u067E\u062A\u0645\u0628\u0631",
      month10: "\u0627\u06A9\u062A\u0648\u0628\u0631",
      month11: "\u0646\u0648\u0645\u0628\u0631",
      month12: "\u062F\u0633\u0645\u0628\u0631",
      weeks: {
        sun: "\u06CC\u06A9\u0634\u0646\u0628\u0647",
        mon: "\u062F\u0648\u0634\u0646\u0628\u0647",
        tue: "\u0633\u0647\u200B \u0634\u0646\u0628\u0647",
        wed: "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647",
        thu: "\u067E\u0646\u062C\u200B\u0634\u0646\u0628\u0647",
        fri: "\u062C\u0645\u0639\u0647",
        sat: "\u0634\u0646\u0628\u0647"
      },
      months: {
        jan: "\u062C\u0646\u0648\u0631\u064A",
        feb: "\u0641\u0628\u0631\u0648\u0631\u064A",
        mar: "\u0645\u0627\u0631\u0686",
        apr: "\u0627\u067E\u0631\u06CC\u0644",
        may: "\u0645\u06CC",
        jun: "\u062C\u0648\u0646",
        jul: "\u062C\u0648\u0644\u0627\u06CC",
        aug: "\u0627\u06AB\u0633\u062A",
        sep: "\u0633\u067E\u062A\u0645\u0628\u0631",
        oct: "\u0627\u06A9\u062A\u0648\u0628\u0631",
        nov: "\u0646\u0648\u0645\u0628\u0631",
        dec: "\u062F\u0633\u0645\u0628\u0631"
      }
    },
    select: {
      loading: "\u0628\u0627\u0631 \u06A9\u0648\u0644",
      noMatch: "\u0647\u06CC\u0685\u0647 \u0648\u0646\u0647 \u0645\u0648\u0646\u062F\u0644 \u0634\u0648\u0644",
      noData: "\u0647\u06CC\u0685 \u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0646\u0634\u062A\u0647",
      placeholder: "\u0681\u0627\u06CC \u0644\u0631\u0648\u0646\u06A9\u06CC"
    },
    mention: {
      loading: "\u0628\u0627\u0631 \u06A9\u0648\u0644"
    },
    cascader: {
      noMatch: "\u0647\u06CC\u0685\u0647 \u0648\u0646\u0647 \u0645\u0648\u0646\u062F\u0644 \u0634\u0648\u0644",
      loading: "\u0628\u0627\u0631 \u06A9\u0648\u0644",
      placeholder: "\u0681\u0627\u06CC \u0644\u0631\u0648\u0646\u06A9\u06CC",
      noData: "\u0647\u06CC\u0685 \u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0646\u0634\u062A\u0647"
    },
    pagination: {
      goto: "\u0648\u0631\u062A\u06AB",
      pagesize: "/\u062F \u067E\u0627\u06BC\u06D0 \u0627\u0646\u062F\u0627\u0632\u0647",
      total: "\u0645\u062C\u0645\u0648\u0639\u0647 {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u0639\u0646\u0648\u0627\u0646",
      confirm: "\u062A\u0627\u06CC\u06CC\u062F",
      cancel: "\u0644\u063A\u0648\u0647 \u06A9\u0648\u0644",
      error: "\u062A\u064A\u0631\u0648\u062A\u0646\u0647"
    },
    upload: {
      deleteTip: "\u062F \u062D\u0630\u0641 \u06A9\u0648\u0644\u0648 \u0644\u067E\u0627\u0631\u0647 \u067E\u0627\u06A9\u0647 \u062A\u06BC\u06CD \u0641\u0634\u0627\u0631 \u06A9\u0693\u0626",
      delete: "\u0693\u0646\u06AB\u0648\u0644",
      preview: "\u0645\u062E\u06A9\u062A\u0646\u0647",
      continue: "\u0627\u062F\u0627\u0645\u0647"
    },
    table: {
      emptyText: "\u0647\u06CC\u0685 \u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0648\u0646\u0647 \u0645\u0648\u0646\u062F\u0644 \u0634\u0648\u0644",
      confirmFilter: "\u062A\u0627\u06CC\u06CC\u062F",
      resetFilter: "\u067E\u0627\u06A9\u0648\u0644",
      clearFilter: "\u067C\u0648\u0644",
      sumText: "\u0645\u062C\u0645\u0648\u0639\u0647"
    },
    tree: {
      emptyText: "\u0647\u06CC\u0685 \u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0648\u0646\u0647 \u0645\u0648\u0646\u062F\u0644 \u0634\u0648\u0644"
    },
    transfer: {
      noMatch: "\u0647\u06CC\u0685\u0647 \u0648\u0646\u0647 \u0645\u0648\u0646\u062F\u0644 \u0634\u0648\u0644",
      noData: "\u0647\u06CC\u0685 \u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0646\u0634\u062A\u0647",
      titles: ["\u0644\u06CC\u0633\u067C 1", "\u0644\u06CC\u0633\u067C 2"],
      filterPlaceholder: "\u062F \u0645\u062A\u0646 \u06A9\u0644\u06CC\u0645\u06D0 \u062F\u0646\u0646\u0647 \u06A9\u0693\u0626",
      noCheckedFormat: "{total} \u062A\u0648\u06A9\u064A",
      hasCheckedFormat: "{checked} \u062A\u0648\u06A9\u064A \u0627\u0632 {total} \u062A\u0648\u06A9\u064A \u067C\u0627\u06A9\u0644 \u0634\u0648\u06CC \u062F\u064A"
    },
    image: {
      error: "\u062F \u0627\u0646\u0681\u0648\u0631 \u067E\u0648\u0631\u062A\u0647 \u06A9\u0648\u0644\u0648 \u06A9\u06D0 \u0633\u062A\u0648\u0646\u0632\u0647"
    },
    pageHeader: {
      title: "\u0628\u06CC\u0631\u062A\u0647 \u0631\u0627\u062A\u06AB"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pl.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/pl.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => pl
});
var pl = {
  name: "pl",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "Wyczy\u015B\u0107"
    },
    datepicker: {
      now: "Teraz",
      today: "Dzisiaj",
      cancel: "Anuluj",
      clear: "Wyczy\u015B\u0107",
      confirm: "OK",
      selectDate: "Wybierz dat\u0119",
      selectTime: "Wybierz godzin\u0119",
      startDate: "Data pocz\u0105tkowa",
      startTime: "Godzina pocz\u0105tkowa",
      endDate: "Data ko\u0144cowa",
      endTime: "Czas ko\u0144cowa",
      prevYear: "Poprzedni rok",
      nextYear: "Nast\u0119pny rok",
      prevMonth: "Poprzedni miesi\u0105c",
      nextMonth: "Nast\u0119pny miesi\u0105c",
      year: "rok",
      month1: "stycze\u0144",
      month2: "luty",
      month3: "marzec",
      month4: "kwiecie\u0144",
      month5: "maj",
      month6: "czerwiec",
      month7: "lipiec",
      month8: "sierpie\u0144",
      month9: "wrzesie\u0144",
      month10: "pa\u017Adziernik",
      month11: "listopad",
      month12: "grudzie\u0144",
      week: "tydzie\u0144",
      weeks: {
        sun: "niedz.",
        mon: "pon.",
        tue: "wt.",
        wed: "\u015Br.",
        thu: "czw.",
        fri: "pt.",
        sat: "sob."
      },
      months: {
        jan: "STY",
        feb: "LUT",
        mar: "MAR",
        apr: "KWI",
        may: "MAJ",
        jun: "CZE",
        jul: "LIP",
        aug: "SIE",
        sep: "WRZ",
        oct: "PA\u0179",
        nov: "LIS",
        dec: "GRU"
      }
    },
    select: {
      loading: "\u0141adowanie",
      noMatch: "Brak dopasowa\u0144",
      noData: "Brak danych",
      placeholder: "Wybierz"
    },
    mention: {
      loading: "\u0141adowanie"
    },
    cascader: {
      noMatch: "Brak dopasowa\u0144",
      loading: "\u0141adowanie",
      placeholder: "Wybierz",
      noData: "Brak danych"
    },
    pagination: {
      goto: "Id\u017A do",
      pagesize: "/stron\u0119",
      total: "Wszystkich {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Wiadomo\u015B\u0107",
      confirm: "OK",
      cancel: "Anuluj",
      error: "Wiadomo\u015B\u0107 zawiera niedozwolone znaki"
    },
    upload: {
      deleteTip: "kliknij kasuj aby usun\u0105\u0107",
      delete: "Kasuj",
      preview: "Podgl\u0105d",
      continue: "Kontynuuj"
    },
    table: {
      emptyText: "Brak danych",
      confirmFilter: "Potwierd\u017A",
      resetFilter: "Resetuj",
      clearFilter: "Wszystko",
      sumText: "Razem"
    },
    tour: {
      next: "Dalej",
      previous: "Wr\xF3\u0107",
      finish: "Zako\u0144cz"
    },
    tree: {
      emptyText: "Brak danych"
    },
    transfer: {
      noMatch: "Brak dopasowa\u0144",
      noData: "Brak danych",
      titles: ["Lista 1", "Lista 2"],
      filterPlaceholder: "Wpisz szukan\u0105 fraz\u0119",
      noCheckedFormat: "razem: {total}",
      hasCheckedFormat: "wybranych: {checked}/{total}"
    },
    image: {
      error: "B\u0141\u0104D"
    },
    pageHeader: {
      title: "Wstecz"
    },
    popconfirm: {
      confirmButtonText: "Tak",
      cancelButtonText: "Nie"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pt-br.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/pt-br.mjs                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => ptBr
});
var ptBr = {
  name: "pt-br",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Confirmar",
      clear: "Limpar"
    },
    datepicker: {
      now: "Agora",
      today: "Hoje",
      cancel: "Cancelar",
      clear: "Limpar",
      confirm: "Confirmar",
      selectDate: "Selecione a data",
      selectTime: "Selecione a hora",
      startDate: "Data inicial",
      startTime: "Hora inicial",
      endDate: "Data final",
      endTime: "Hora final",
      prevYear: "Ano anterior",
      nextYear: "Pr\xF3ximo ano",
      prevMonth: "M\xEAs anterior",
      nextMonth: "Pr\xF3ximo m\xEAs",
      year: "",
      month1: "Janeiro",
      month2: "Fevereiro",
      month3: "Mar\xE7o",
      month4: "Abril",
      month5: "Maio",
      month6: "Junho",
      month7: "Julho",
      month8: "Agosto",
      month9: "Setembro",
      month10: "Outubro",
      month11: "Novembro",
      month12: "Dezembro",
      weeks: {
        sun: "Dom",
        mon: "Seg",
        tue: "Ter",
        wed: "Qua",
        thu: "Qui",
        fri: "Sex",
        sat: "Sab"
      },
      months: {
        jan: "Jan",
        feb: "Fev",
        mar: "Mar",
        apr: "Abr",
        may: "Mai",
        jun: "Jun",
        jul: "Jul",
        aug: "Ago",
        sep: "Set",
        oct: "Out",
        nov: "Nov",
        dec: "Dez"
      }
    },
    select: {
      loading: "Carregando",
      noMatch: "Sem resultados",
      noData: "Sem dados",
      placeholder: "Selecione"
    },
    mention: {
      loading: "Carregando"
    },
    cascader: {
      noMatch: "Sem resultados",
      loading: "Carregando",
      placeholder: "Selecione",
      noData: "Sem dados"
    },
    pagination: {
      goto: "Ir para",
      pagesize: "/p\xE1gina",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Mensagem",
      confirm: "Confirmar",
      cancel: "Cancelar",
      error: "Erro!"
    },
    upload: {
      deleteTip: "aperte delete para apagar",
      delete: "Apagar",
      preview: "Pr\xE9-visualizar",
      continue: "Continuar"
    },
    table: {
      emptyText: "Sem dados",
      confirmFilter: "Confirmar",
      resetFilter: "Limpar",
      clearFilter: "Todos",
      sumText: "Total"
    },
    tour: {
      next: "Pr\xF3ximo",
      previous: "Anterior",
      finish: "Finalizar"
    },
    tree: {
      emptyText: "Sem dados"
    },
    transfer: {
      noMatch: "Sem resultados",
      noData: "Sem dados",
      titles: ["Lista 1", "Lista 2"],
      filterPlaceholder: "Digite uma palavra-chave",
      noCheckedFormat: "{total} itens",
      hasCheckedFormat: "{checked}/{total} selecionados"
    },
    image: {
      error: "Erro ao carregar imagem"
    },
    pageHeader: {
      title: "Voltar"
    },
    popconfirm: {
      confirmButtonText: "Sim",
      cancelButtonText: "N\xE3o"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pt.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/pt.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => pt
});
var pt = {
  name: "pt",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Confirmar",
      clear: "Limpar"
    },
    datepicker: {
      now: "Agora",
      today: "Hoje",
      cancel: "Cancelar",
      clear: "Limpar",
      confirm: "Confirmar",
      selectDate: "Selecione a data",
      selectTime: "Selecione a hora",
      startDate: "Data de inicio",
      startTime: "Hora de inicio",
      endDate: "Data de fim",
      endTime: "Hora de fim",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      year: "",
      month1: "Janeiro",
      month2: "Fevereiro",
      month3: "Mar\xE7o",
      month4: "Abril",
      month5: "Maio",
      month6: "Junho",
      month7: "Julho",
      month8: "Agosto",
      month9: "Setembro",
      month10: "Outubro",
      month11: "Novembro",
      month12: "Dezembro",
      weeks: {
        sun: "Dom",
        mon: "Seg",
        tue: "Ter",
        wed: "Qua",
        thu: "Qui",
        fri: "Sex",
        sat: "Sab"
      },
      months: {
        jan: "Jan",
        feb: "Fev",
        mar: "Mar",
        apr: "Abr",
        may: "Mai",
        jun: "Jun",
        jul: "Jul",
        aug: "Ago",
        sep: "Set",
        oct: "Out",
        nov: "Nov",
        dec: "Dez"
      }
    },
    select: {
      loading: "A carregar",
      noMatch: "Sem correspond\xEAncia",
      noData: "Sem dados",
      placeholder: "Selecione"
    },
    mention: {
      loading: "A carregar"
    },
    cascader: {
      noMatch: "Sem correspond\xEAncia",
      loading: "A carregar",
      placeholder: "Selecione",
      noData: "Sem dados"
    },
    pagination: {
      goto: "Ir para",
      pagesize: "/pagina",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Mensagem",
      confirm: "Confirmar",
      cancel: "Cancelar",
      error: "Erro!"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "Apagar",
      preview: "Previsualizar",
      continue: "Continuar"
    },
    table: {
      emptyText: "Sem dados",
      confirmFilter: "Confirmar",
      resetFilter: "Limpar",
      clearFilter: "Todos",
      sumText: "Sum"
    },
    tree: {
      emptyText: "Sem dados"
    },
    transfer: {
      noMatch: "Sem correspond\xEAncia",
      noData: "Sem dados",
      titles: ["List 1", "List 2"],
      filterPlaceholder: "Enter keyword",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} checked"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ro.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/ro.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => ro
});
var ro = {
  name: "ro",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "\u0218terge"
    },
    datepicker: {
      now: "Acum",
      today: "Azi",
      cancel: "Anuleaz\u0103",
      clear: "\u0218terge",
      confirm: "OK",
      selectDate: "Selecteaz\u0103 data",
      selectTime: "Selecteaz\u0103 ora",
      startDate: "Data de \xEEnceput",
      startTime: "Ora de \xEEnceput",
      endDate: "Data de sf\xE2r\u0219it",
      endTime: "Ora de sf\xE2r\u0219it",
      prevYear: "Anul trecut",
      nextYear: "Anul urm\u0103tor",
      prevMonth: "Luna trecut\u0103",
      nextMonth: "Luna urm\u0103toare",
      year: "",
      month1: "Ianuarie",
      month2: "Februarie",
      month3: "Martie",
      month4: "Aprilie",
      month5: "Mai",
      month6: "Iunie",
      month7: "Iulie",
      month8: "August",
      month9: "Septembrie",
      month10: "Octombrie",
      month11: "Noiembrie",
      month12: "Decembrie",
      weeks: {
        sun: "Du",
        mon: "Lu",
        tue: "Ma",
        wed: "Mi",
        thu: "Jo",
        fri: "Vi",
        sat: "S\xE2"
      },
      months: {
        jan: "Ian",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "Mai",
        jun: "Iun",
        jul: "Iul",
        aug: "Aug",
        sep: "Sep",
        oct: "Oct",
        nov: "Noi",
        dec: "Dec"
      }
    },
    select: {
      loading: "Se \xEEncarc\u0103",
      noMatch: "Nu exist\u0103 date potrivite",
      noData: "Nu exist\u0103 date",
      placeholder: "Selecteaz\u0103"
    },
    mention: {
      loading: "Se \xEEncarc\u0103"
    },
    cascader: {
      noMatch: "Nu exist\u0103 date potrivite",
      loading: "Se \xEEncarc\u0103",
      placeholder: "Selecteaz\u0103",
      noData: "Nu exist\u0103 date"
    },
    pagination: {
      goto: "Go to",
      pagesize: "/pagina",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Mesaj",
      confirm: "OK",
      cancel: "Anuleaz\u0103",
      error: "Date introduse eronate"
    },
    upload: {
      deleteTip: "ap\u0103sa\u021Bi pe \u0219terge\u021Bi pentru a elimina",
      delete: "\u0219terge",
      preview: "previzualizare",
      continue: "continu\u0103"
    },
    table: {
      emptyText: "Nu exist\u0103 date",
      confirmFilter: "Confirm\u0103",
      resetFilter: "Reseteaz\u0103",
      clearFilter: "Tot",
      sumText: "Suma"
    },
    tree: {
      emptyText: "Nu exist\u0103 date"
    },
    transfer: {
      noMatch: "Nu exist\u0103 date potrivite",
      noData: "Nu exist\u0103 date",
      titles: ["Lista 1", "Lista 2"],
      filterPlaceholder: "Introduce\u021Bi cuv\xE2ntul cheie",
      noCheckedFormat: "{total} elemente",
      hasCheckedFormat: "{checked}/{total} verificate"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ru.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/ru.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => ru
});
var ru = {
  name: "ru",
  el: {
    breadcrumb: {
      label: "\u0425\u043B\u0435\u0431\u043D\u044B\u0435 \u043A\u0440\u043E\u0448\u043A\u0438"
    },
    colorpicker: {
      confirm: "OK",
      clear: "\u041E\u0447\u0438\u0441\u0442\u0438\u0442\u044C"
    },
    datepicker: {
      now: "\u0421\u0435\u0439\u0447\u0430\u0441",
      today: "\u0421\u0435\u0433\u043E\u0434\u043D\u044F",
      cancel: "\u041E\u0442\u043C\u0435\u043D\u0430",
      clear: "\u041E\u0447\u0438\u0441\u0442\u0438\u0442\u044C",
      confirm: "OK",
      selectDate: "\u0412\u044B\u0431\u0440\u0430\u0442\u044C \u0434\u0430\u0442\u0443",
      selectTime: "\u0412\u044B\u0431\u0440\u0430\u0442\u044C \u0432\u0440\u0435\u043C\u044F",
      startDate: "\u0414\u0430\u0442\u0430 \u043D\u0430\u0447\u0430\u043B\u0430",
      startTime: "\u0412\u0440\u0435\u043C\u044F \u043D\u0430\u0447\u0430\u043B\u0430",
      endDate: "\u0414\u0430\u0442\u0430 \u043E\u043A\u043E\u043D\u0447\u0430\u043D\u0438\u044F",
      endTime: "\u0412\u0440\u0435\u043C\u044F \u043E\u043A\u043E\u043D\u0447\u0430\u043D\u0438\u044F",
      prevYear: "\u041F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0438\u0439 \u0433\u043E\u0434",
      nextYear: "\u0421\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0439 \u0433\u043E\u0434",
      prevMonth: "\u041F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0438\u0439 \u043C\u0435\u0441\u044F\u0446",
      nextMonth: "\u0421\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0439 \u043C\u0435\u0441\u044F\u0446",
      year: "",
      month1: "\u042F\u043D\u0432\u0430\u0440\u044C",
      month2: "\u0424\u0435\u0432\u0440\u0430\u043B\u044C",
      month3: "\u041C\u0430\u0440\u0442",
      month4: "\u0410\u043F\u0440\u0435\u043B\u044C",
      month5: "\u041C\u0430\u0439",
      month6: "\u0418\u044E\u043D\u044C",
      month7: "\u0418\u044E\u043B\u044C",
      month8: "\u0410\u0432\u0433\u0443\u0441\u0442",
      month9: "\u0421\u0435\u043D\u0442\u044F\u0431\u0440\u044C",
      month10: "\u041E\u043A\u0442\u044F\u0431\u0440\u044C",
      month11: "\u041D\u043E\u044F\u0431\u0440\u044C",
      month12: "\u0414\u0435\u043A\u0430\u0431\u0440\u044C",
      week: "\u043D\u0435\u0434\u0435\u043B\u044F",
      weeks: {
        sun: "\u0412\u0441",
        mon: "\u041F\u043D",
        tue: "\u0412\u0442",
        wed: "\u0421\u0440",
        thu: "\u0427\u0442",
        fri: "\u041F\u0442",
        sat: "\u0421\u0431"
      },
      months: {
        jan: "\u042F\u043D\u0432",
        feb: "\u0424\u0435\u0432",
        mar: "\u041C\u0430\u0440",
        apr: "\u0410\u043F\u0440",
        may: "\u041C\u0430\u0439",
        jun: "\u0418\u044E\u043D",
        jul: "\u0418\u044E\u043B",
        aug: "\u0410\u0432\u0433",
        sep: "\u0421\u0435\u043D",
        oct: "\u041E\u043A\u0442",
        nov: "\u041D\u043E\u044F",
        dec: "\u0414\u0435\u043A"
      }
    },
    select: {
      loading: "\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430",
      noMatch: "\u0421\u043E\u0432\u043F\u0430\u0434\u0435\u043D\u0438\u0439 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E",
      noData: "\u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445",
      placeholder: "\u0412\u044B\u0431\u0440\u0430\u0442\u044C"
    },
    mention: {
      loading: "\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430"
    },
    cascader: {
      noMatch: "\u0421\u043E\u0432\u043F\u0430\u0434\u0435\u043D\u0438\u0439 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E",
      loading: "\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430",
      placeholder: "\u0412\u044B\u0431\u0440\u0430\u0442\u044C",
      noData: "\u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445"
    },
    pagination: {
      goto: "\u041F\u0435\u0440\u0435\u0439\u0442\u0438",
      pagesize: " \u043D\u0430 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0435",
      total: "\u0412\u0441\u0435\u0433\u043E {total}",
      pageClassifier: "",
      page: "\u0421\u0442\u0440\u0430\u043D\u0438\u0446\u0430",
      prev: "\u041F\u0435\u0440\u0435\u0439\u0442\u0438 \u043D\u0430 \u043F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0443\u044E \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443",
      next: "\u041F\u0435\u0440\u0435\u0439\u0442\u0438 \u043D\u0430 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0443\u044E \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443",
      currentPage: "\u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0430 {pager}",
      prevPages: "\u041F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0438\u0435 {pager} \u0441\u0442\u0440\u0430\u043D\u0438\u0446",
      nextPages: "\u0421\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0435 {pager} \u0441\u0442\u0440\u0430\u043D\u0438\u0446"
    },
    messagebox: {
      title: "\u0421\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0435",
      confirm: "OK",
      cancel: "\u041E\u0442\u043C\u0435\u043D\u0430",
      error: "\u041D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u0432\u0432\u043E\u0434 \u0434\u0430\u043D\u043D\u044B\u0445"
    },
    upload: {
      deleteTip: "\u041D\u0430\u0436\u043C\u0438\u0442\u0435 [\u0423\u0434\u0430\u043B\u0438\u0442\u044C] \u0434\u043B\u044F \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u044F",
      delete: "\u0423\u0434\u0430\u043B\u0438\u0442\u044C",
      preview: "\u041F\u0440\u0435\u0432\u044C\u044E",
      continue: "\u041F\u0440\u043E\u0434\u043E\u043B\u0436\u0438\u0442\u044C"
    },
    table: {
      emptyText: "\u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445",
      confirmFilter: "\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044C",
      resetFilter: "\u0421\u0431\u0440\u043E\u0441\u0438\u0442\u044C",
      clearFilter: "\u0412\u0441\u0435",
      sumText: "\u0421\u0443\u043C\u043C\u0430"
    },
    tour: {
      next: "\u0414\u0430\u043B\u0435\u0435",
      previous: "\u041D\u0430\u0437\u0430\u0434",
      finish: "\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044C"
    },
    tree: {
      emptyText: "\u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445"
    },
    transfer: {
      noMatch: "\u0421\u043E\u0432\u043F\u0430\u0434\u0435\u043D\u0438\u0439 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E",
      noData: "\u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445",
      titles: ["\u0421\u043F\u0438\u0441\u043E\u043A 1", "\u0421\u043F\u0438\u0441\u043E\u043A 2"],
      filterPlaceholder: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043A\u043B\u044E\u0447\u0435\u0432\u043E\u0435 \u0441\u043B\u043E\u0432\u043E",
      noCheckedFormat: "{total} \u043F\u0443\u043D\u043A\u0442\u043E\u0432",
      hasCheckedFormat: "{checked}/{total} \u0432\u044B\u0431\u0440\u0430\u043D\u043E"
    },
    image: {
      error: "\u041E\u0428\u0418\u0411\u041A\u0410"
    },
    pageHeader: {
      title: "\u041D\u0430\u0437\u0430\u0434"
    },
    popconfirm: {
      confirmButtonText: "OK",
      cancelButtonText: "\u041E\u0442\u043C\u0435\u043D\u0430"
    },
    carousel: {
      leftArrow: "\u0421\u043B\u0430\u0439\u0434\u0435\u0440 \u0441\u0442\u0440\u0435\u043B\u043A\u0430 \u0432\u043B\u0435\u0432\u043E",
      rightArrow: "\u0421\u043B\u0430\u0439\u0434\u0435\u0440 \u0441\u0442\u0440\u0435\u043B\u043A\u0430 \u0432\u043F\u0440\u0430\u0432\u043E",
      indicator: "\u0421\u043B\u0430\u0439\u0434\u0435\u0440 \u043F\u0435\u0440\u0435\u0439\u0442\u0438 \u043D\u0430 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443 \u043F\u043E\u0434 \u043D\u043E\u043C\u0435\u0440\u043E\u043C {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sk.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/sk.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => sk
});
var sk = {
  name: "sk",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "Zmaza\u0165"
    },
    datepicker: {
      now: "Teraz",
      today: "Dnes",
      cancel: "Zru\u0161i\u0165",
      clear: "Zmaza\u0165",
      confirm: "OK",
      selectDate: "Vybra\u0165 d\xE1tum",
      selectTime: "Vybra\u0165 \u010Das",
      startDate: "D\xE1tum za\u010Diatku",
      startTime: "\u010Cas za\u010Diatku",
      endDate: "D\xE1tum konca",
      endTime: "\u010Cas konca",
      prevYear: "Predo\u0161l\xFD rok",
      nextYear: "\u010Eal\u0161\xED rok",
      prevMonth: "Predo\u0161l\xFD mesiac",
      nextMonth: "\u010Eal\u0161\xED mesiac",
      day: "De\u0148",
      week: "T\xFD\u017Ede\u0148",
      month: "Mesiac",
      year: "Rok",
      month1: "Janu\xE1r",
      month2: "Febru\xE1r",
      month3: "Marec",
      month4: "Apr\xEDl",
      month5: "M\xE1j",
      month6: "J\xFAn",
      month7: "J\xFAl",
      month8: "August",
      month9: "September",
      month10: "Okt\xF3ber",
      month11: "November",
      month12: "December",
      weeks: {
        sun: "Ne",
        mon: "Po",
        tue: "Ut",
        wed: "St",
        thu: "\u0160t",
        fri: "Pi",
        sat: "So"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "M\xE1j",
        jun: "J\xFAn",
        jul: "J\xFAl",
        aug: "Aug",
        sep: "Sep",
        oct: "Okt",
        nov: "Nov",
        dec: "Dec"
      }
    },
    select: {
      loading: "Na\u010D\xEDtavanie",
      noMatch: "\u017Diadna zhoda",
      noData: "\u017Diadne d\xE1ta",
      placeholder: "Vybra\u0165"
    },
    mention: {
      loading: "Na\u010D\xEDtavanie"
    },
    cascader: {
      noMatch: "\u017Diadna zhoda",
      loading: "Na\u010D\xEDtavanie",
      placeholder: "Vybra\u0165",
      noData: "\u017Diadne d\xE1ta"
    },
    pagination: {
      goto: "Cho\u010F na",
      pagesize: "na stranu",
      total: "V\u0161etko {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Spr\xE1va",
      confirm: "OK",
      cancel: "Zru\u0161i\u0165",
      error: "Neplatn\xFD vstup"
    },
    upload: {
      deleteTip: "pre odstr\xE1nenie stisni kl\xE1vesu Delete",
      delete: "Vymaza\u0165",
      preview: "Prehliada\u0165",
      continue: "Pokra\u010Dova\u0165"
    },
    table: {
      emptyText: "\u017Diadne d\xE1ta",
      confirmFilter: "Potvrdi\u0165",
      resetFilter: "Zresetova\u0165",
      clearFilter: "V\u0161etko",
      sumText: "Spolu"
    },
    tree: {
      emptyText: "\u017Diadne d\xE1ta"
    },
    transfer: {
      noMatch: "\u017Diadna zhoda",
      noData: "\u017Diadne d\xE1ta",
      titles: ["Zoznam 1", "Zoznam 2"],
      filterPlaceholder: "Filtrova\u0165 pod\u013Ea",
      noCheckedFormat: "{total} polo\u017Eiek",
      hasCheckedFormat: "{checked}/{total} ozna\u010Den\xFDch"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sl.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/sl.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => sl
});
var sl = {
  name: "sl",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "V redu",
      clear: "Po\u010Disti"
    },
    datepicker: {
      now: "Zdaj",
      today: "Danes",
      cancel: "Prekli\u010Di",
      clear: "Po\u010Disti",
      confirm: "Potrdi",
      selectDate: "Izberi datum",
      selectTime: "Izberi \u010Das",
      startDate: "Za\u010Detni datum",
      startTime: "Za\u010Detni \u010Das",
      endDate: "Kon\u010Dni datum",
      endTime: "Kon\u010Dni \u010Das",
      prevYear: "Prej\u0161nje leto",
      nextYear: "Naslednje leto",
      prevMonth: "Prej\u0161nji mesec",
      nextMonth: "Naslednji mesec",
      year: "",
      month1: "Jan",
      month2: "Feb",
      month3: "Mar",
      month4: "Apr",
      month5: "Maj",
      month6: "Jun",
      month7: "Jul",
      month8: "Avg",
      month9: "Sep",
      month10: "Okt",
      month11: "Nov",
      month12: "Dec",
      week: "teden",
      weeks: {
        sun: "Ned",
        mon: "Pon",
        tue: "Tor",
        wed: "Sre",
        thu: "\u010Cet",
        fri: "Pet",
        sat: "Sob"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "Maj",
        jun: "Jun",
        jul: "Jul",
        aug: "Avg",
        sep: "Sep",
        oct: "Okt",
        nov: "Nov",
        dec: "Dec"
      }
    },
    select: {
      loading: "Nalaganje",
      noMatch: "Ni ustreznih podatkov",
      noData: "Ni podatkov",
      placeholder: "Izberi"
    },
    mention: {
      loading: "Nalaganje"
    },
    cascader: {
      noMatch: "Ni ustreznih podatkov",
      loading: "Nalaganje",
      placeholder: "Izberi",
      noData: "Ni podatkov"
    },
    pagination: {
      goto: "Pojdi na",
      pagesize: "/stran",
      total: "Skupno {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Sporo\u010Dilo",
      confirm: "V redu",
      cancel: "Prekli\u010Di",
      error: "Nedovoljen vnos"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "Izbri\u0161i",
      preview: "Predogled",
      continue: "Nadaljuj"
    },
    table: {
      emptyText: "Ni podatkov",
      confirmFilter: "Potrdi",
      resetFilter: "Ponastavi",
      clearFilter: "Vse",
      sumText: "Skupno"
    },
    tree: {
      emptyText: "Ni podatkov"
    },
    transfer: {
      noMatch: "Ni ustreznih podatkov",
      noData: "Ni podatkov",
      titles: ["Seznam 1", "Seznam 2"],
      filterPlaceholder: "Vnesi klju\u010Dno besedo",
      noCheckedFormat: "{total} elementov",
      hasCheckedFormat: "{checked}/{total} izbranih"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sr.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/sr.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => sr
});
var sr = {
  name: "sr",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "\u041F\u043E\u043D\u0438\u0448\u0442\u0438"
    },
    datepicker: {
      now: "\u0421\u0430\u0434\u0430",
      today: "\u0414\u0430\u043D\u0430\u0441",
      cancel: "\u041E\u0442\u043A\u0430\u0436\u0438",
      clear: "\u0411\u0440\u0438\u0448\u0438",
      confirm: "OK",
      selectDate: "\u0418\u0437\u0430\u0431\u0435\u0440\u0438 \u0434\u0430\u0442\u0443\u043C",
      selectTime: "\u0418\u0437\u0430\u0431\u0435\u0440\u0438 \u0432\u0440\u0435\u043C\u0435",
      startDate: "\u0414\u0430\u0442\u0443\u043C \u043F\u043E\u0447\u0435\u0442\u043A\u0430",
      startTime: "\u0412\u0440\u0435\u043C\u0435 \u043F\u043E\u0447\u0435\u0442\u043A\u0430",
      endDate: "\u0414\u0430\u0442\u0443\u043C \u0437\u0430\u0432\u0440\u0448\u0435\u0442\u043A\u0430",
      endTime: "\u0412\u0440\u0435\u043C\u0435 \u0437\u0430\u0432\u0440\u0448\u0435\u0442\u043A\u0430",
      prevYear: "\u041F\u0440\u0435\u0442\u0445\u043E\u0434\u043D\u0430 \u0433\u043E\u0434\u0438\u043D\u0430",
      nextYear: "\u0421\u043B\u0435\u0434\u0435\u045B\u0430 \u0433\u043E\u0434\u0438\u043D\u0430",
      prevMonth: "\u041F\u0440\u0435\u0442\u0445\u043E\u0434\u043D\u0438 \u043C\u0435\u0441\u0435\u0446",
      nextMonth: "\u0421\u043B\u0435\u0434\u0435\u045B\u0438 \u043C\u0435\u0441\u0435\u0446",
      year: "\u0433\u043E\u0434\u0438\u043D\u0430",
      month1: "\u0458\u0430\u043D\u0443\u0430\u0440",
      month2: "\u0444\u0435\u0431\u0440\u0443\u0430\u0440",
      month3: "\u043C\u0430\u0440\u0442",
      month4: "\u0430\u043F\u0440\u0438\u043B",
      month5: "\u043C\u0430\u0458",
      month6: "\u0458\u0443\u043D",
      month7: "\u0458\u0443\u043B",
      month8: "\u0430\u0432\u0433\u0443\u0441\u0442",
      month9: "\u0441\u0435\u043F\u0442\u0435\u043C\u0431\u0430\u0440",
      month10: "\u043E\u043A\u0442\u043E\u0431\u0430\u0440",
      month11: "\u043D\u043E\u0432\u0435\u043C\u0431\u0430\u0440",
      month12: "\u0434\u0435\u0446\u0435\u043C\u0431\u0430\u0440",
      week: "\u0441\u0435\u0434\u043C\u0438\u0446\u0430",
      weeks: {
        sun: "\u041D\u0435\u0434",
        mon: "\u041F\u043E\u043D",
        tue: "\u0423\u0442\u043E",
        wed: "\u0421\u0440\u0435",
        thu: "\u0427\u0435\u0442",
        fri: "\u041F\u0435\u0442",
        sat: "\u0421\u0443\u0431"
      },
      months: {
        jan: "\u0458\u0430\u043D",
        feb: "\u0444\u0435\u0431",
        mar: "\u043C\u0430\u0440",
        apr: "\u0430\u043F\u0440",
        may: "\u043C\u0430\u0458",
        jun: "\u0458\u0443\u043D",
        jul: "\u0458\u0443\u043B",
        aug: "\u0430\u0432\u0433",
        sep: "\u0441\u0435\u043F",
        oct: "\u043E\u043A\u0442",
        nov: "\u043D\u043E\u0432",
        dec: "\u0434\u0435\u0446"
      }
    },
    select: {
      loading: "\u0423\u0447\u0438\u0442\u0430\u0432\u0430\u045A\u0435",
      noMatch: "\u041D\u0435\u043C\u0430 \u0440\u0435\u0437\u0443\u043B\u0442\u0430\u0442\u0430",
      noData: "\u041D\u0435\u043C\u0430 \u043F\u043E\u0434\u0430\u0442\u0430\u043A\u0430",
      placeholder: "\u0418\u0437\u0430\u0431\u0435\u0440\u0438"
    },
    mention: {
      loading: "\u0423\u0447\u0438\u0442\u0430\u0432\u0430\u045A\u0435"
    },
    cascader: {
      noMatch: "\u041D\u0435\u043C\u0430 \u0440\u0435\u0437\u0443\u043B\u0442\u0430\u0442\u0430",
      loading: "\u0423\u0447\u0438\u0442\u0430\u0432\u0430\u045A\u0435",
      placeholder: "\u0418\u0437\u0430\u0431\u0435\u0440\u0438",
      noData: "\u041D\u0435\u043C\u0430 \u043F\u043E\u0434\u0430\u0442\u0430\u043A\u0430"
    },
    pagination: {
      goto: "\u0418\u0434\u0438 \u043D\u0430",
      pagesize: "/\u0441\u0442\u0440\u0430\u043D\u0438",
      total: "\u0423\u043A\u0443\u043F\u043D\u043E {total}",
      pageClassifier: "",
      page: "\u0421\u0442\u0440\u0430\u043D\u0430",
      prev: "\u0418\u0434\u0438 \u043D\u0430 \u043F\u0440\u0435\u0442\u0445\u043E\u0434\u043D\u0443 \u0441\u0442\u0440\u0430\u043D\u0443",
      next: "\u0418\u0434\u0438 \u043D\u0430 \u0441\u043B\u0435\u0434\u0435\u045B\u0443 \u0441\u0442\u0440\u0430\u043D\u0443",
      currentPage: "\u0441\u0442\u0440\u0430\u043D\u0430 {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u041F\u043E\u0440\u0443\u043A\u0430",
      confirm: "OK",
      cancel: "\u041E\u0442\u043A\u0430\u0436\u0438",
      error: "\u041D\u0435\u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D \u0443\u043D\u043E\u0441"
    },
    upload: {
      deleteTip: "\u043F\u0440\u0438\u0442\u0438\u0441\u043D\u0438 \u0411\u0420\u0418\u0428\u0418 \u0434\u0430 \u043E\u0431\u0440\u0438\u0448\u0435\u0448",
      delete: "\u0411\u0440\u0438\u0448\u0438",
      preview: "\u0412\u0438\u0434\u0438",
      continue: "\u041D\u0430\u0441\u0442\u0430\u0432\u0438"
    },
    table: {
      emptyText: "\u041D\u0435\u043C\u0430 \u043F\u043E\u0434\u0430\u0442\u0430\u043A\u0430",
      confirmFilter: "\u041F\u043E\u0442\u0432\u0440\u0434\u0438",
      resetFilter: "\u0420\u0435\u0441\u0435\u0442\u0443\u0458",
      clearFilter: "\u0421\u0432\u0435",
      sumText: "\u0417\u0431\u0438\u0440"
    },
    tree: {
      emptyText: "\u041D\u0435\u043C\u0430 \u043F\u043E\u0434\u0430\u0442\u0430\u043A\u0430"
    },
    transfer: {
      noMatch: "\u041D\u0435\u043C\u0430 \u0440\u0435\u0437\u0443\u043B\u0442\u0430\u0442\u0430",
      noData: "\u041D\u0435\u043C\u0430 \u043F\u043E\u0434\u0430\u0442\u0430\u043A\u0430",
      titles: ["\u041B\u0438\u0441\u0442\u0430 1", "\u041B\u0438\u0441\u0442\u0430 2"],
      filterPlaceholder: "\u0423\u043D\u0435\u0441\u0438 \u043A\u0459\u0443\u0447\u043D\u0443 \u0440\u0435\u0447",
      noCheckedFormat: "{total} \u0441\u0442\u0430\u0432\u043A\u0438",
      hasCheckedFormat: "{checked}/{total} \u043E\u0431\u0435\u043B\u0435\u0436\u0435\u043D\u0438\u0445"
    },
    image: {
      error: "\u041D\u0415\u0423\u0421\u041F\u0415\u0428\u041D\u041E"
    },
    pageHeader: {
      title: "\u041D\u0430\u0437\u0430\u0434"
    },
    popconfirm: {
      confirmButtonText: "\u0414\u0430",
      cancelButtonText: "\u041D\u0435"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sv.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/sv.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => sv
});
var sv = {
  name: "sv",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "T\xF6m"
    },
    datepicker: {
      now: "Nu",
      today: "Idag",
      cancel: "Avbryt",
      clear: "T\xF6m",
      confirm: "OK",
      selectDate: "V\xE4lj datum",
      selectTime: "V\xE4lj tid",
      startDate: "Startdatum",
      startTime: "Starttid",
      endDate: "Slutdatum",
      endTime: "Sluttid",
      prevYear: "F\xF6reg\xE5ende \xE5r",
      nextYear: "N\xE4sta \xE5r",
      prevMonth: "F\xF6reg\xE5ende m\xE5nad",
      nextMonth: "N\xE4sta m\xE5nad",
      year: "",
      month1: "Januari",
      month2: "Februari",
      month3: "Mars",
      month4: "April",
      month5: "Maj",
      month6: "Juni",
      month7: "Juli",
      month8: "Augusti",
      month9: "September",
      month10: "Oktober",
      month11: "November",
      month12: "December",
      weeks: {
        sun: "S\xF6n",
        mon: "M\xE5n",
        tue: "Tis",
        wed: "Ons",
        thu: "Tor",
        fri: "Fre",
        sat: "L\xF6r"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "Maj",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Okt",
        nov: "Nov",
        dec: "Dec"
      }
    },
    select: {
      loading: "Laddar",
      noMatch: "Hittade inget",
      noData: "Ingen data",
      placeholder: "V\xE4lj"
    },
    mention: {
      loading: "Laddar"
    },
    cascader: {
      noMatch: "Hittade inget",
      loading: "Laddar",
      placeholder: "V\xE4lj",
      noData: "Ingen data"
    },
    pagination: {
      goto: "G\xE5 till",
      pagesize: "/sida",
      total: "Totalt {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Meddelande",
      confirm: "OK",
      cancel: "Avbryt",
      error: "Felaktig inmatning"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "Radera",
      preview: "F\xF6rhandsvisa",
      continue: "Forts\xE4tt"
    },
    table: {
      emptyText: "Inga Data",
      confirmFilter: "Bekr\xE4fta",
      resetFilter: "\xC5terst\xE4ll",
      clearFilter: "Alla",
      sumText: "Summa"
    },
    tour: {
      next: "N\xE4sta",
      previous: "F\xF6reg\xE5ende",
      finish: "Avsluta"
    },
    tree: {
      emptyText: "Ingen data"
    },
    transfer: {
      noMatch: "Hittade inget",
      noData: "Ingen data",
      titles: ["List 1", "List 2"],
      filterPlaceholder: "Enter keyword",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} checked"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Bak\xE5t"
    },
    popconfirm: {
      confirmButtonText: "Ja",
      cancelButtonText: "Nej"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ta.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/ta.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => ta
});
var ta = {
  name: "ta",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u0B89\u0BB1\u0BC1\u0BA4\u0BBF \u0B9A\u0BC6\u0BAF\u0BCD",
      clear: "\u0BA4\u0BC6\u0BB3\u0BBF\u0BB5\u0BBE\u0B95\u0BCD\u0B95\u0BC1"
    },
    datepicker: {
      now: "\u0BA4\u0BB1\u0BCD\u0BAA\u0BCB\u0BA4\u0BC1",
      today: "\u0B87\u0BA9\u0BCD\u0BB1\u0BC1",
      cancel: "\u0BB0\u0BA4\u0BCD\u0BA4\u0BC1 \u0B9A\u0BC6\u0BAF\u0BCD",
      clear: "\u0B9A\u0BB0\u0BBF",
      confirm: "\u0B89\u0BB1\u0BC1\u0BA4\u0BBF \u0B9A\u0BC6\u0BAF\u0BCD",
      selectDate: "\u0BA4\u0BC7\u0BA4\u0BBF\u0BAF\u0BC8 \u0BA4\u0BC7\u0BB0\u0BCD\u0BB5\u0BC1 \u0B9A\u0BC6\u0BAF\u0BCD",
      selectTime: "\u0BA8\u0BC7\u0BB0\u0BA4\u0BCD\u0BA4\u0BC8 \u0BA4\u0BC7\u0BB0\u0BCD\u0BB5\u0BC1 \u0B9A\u0BC6\u0BAF\u0BCD",
      startDate: "\u0BA4\u0BCA\u0B9F\u0B99\u0BCD\u0B95\u0BC1\u0BAE\u0BCD \u0BA8\u0BBE\u0BB3\u0BCD",
      startTime: "\u0BA4\u0BCA\u0B9F\u0B99\u0BCD\u0B95\u0BC1\u0BAE\u0BCD \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD",
      endDate: "\u0BAE\u0BC1\u0B9F\u0BBF\u0BAF\u0BC1\u0BAE\u0BCD \u0BA4\u0BC7\u0BA4\u0BBF",
      endTime: "\u0BAE\u0BC1\u0B9F\u0BBF\u0BAF\u0BC1\u0BAE\u0BCD \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      year: "\u0BB5\u0BB0\u0BC1\u0B9F\u0BAE\u0BCD",
      month1: "\u0B9C\u0BA9\u0BB5\u0BB0\u0BBF",
      month2: "\u0BAA\u0BBF\u0BAA\u0BCD\u0BB0\u0BB5\u0BB0\u0BBF",
      month3: "\u0BAE\u0BBE\u0BB0\u0BCD\u0B9A\u0BCD",
      month4: "\u0B8F\u0BAA\u0BCD\u0BB0\u0BB2\u0BCD",
      month5: "\u0BAE\u0BC7",
      month6: "\u0B9C\u0BC2\u0BA9\u0BCD",
      month7: "\u0B9C\u0BC2\u0BB2\u0BC8",
      month8: "\u0B86\u0B95\u0BB8\u0BCD\u0B9F\u0BCD",
      month9: "\u0B9A\u0BC6\u0BAA\u0BCD\u0B9F\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD",
      month10: "\u0B85\u0B95\u0BCD\u0B9F\u0BCB\u0BAA\u0BB0\u0BCD",
      month11: "\u0BA8\u0BB5\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD",
      month12: "\u0B9F\u0BBF\u0B9A\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD",
      weeks: {
        sun: "\u0B9E\u0BBE\u0BAF\u0BBF\u0BB1\u0BC1",
        mon: "\u0BA4\u0BBF\u0B99\u0BCD\u0B95\u0BB3\u0BCD",
        tue: "\u0B9A\u0BC6\u0BB5\u0BCD\u0BB5\u0BBE\u0BAF\u0BCD",
        wed: "\u0BAA\u0BC1\u0BA4\u0BA9\u0BCD",
        thu: "\u0BB5\u0BBF\u0BAF\u0BBE\u0BB4\u0BA9\u0BCD",
        fri: "\u0BB5\u0BC6\u0BB3\u0BCD\u0BB3\u0BBF",
        sat: "\u0B9A\u0BA9\u0BBF"
      },
      months: {
        jan: "\u0B9C\u0BA9\u0BB5\u0BB0\u0BBF",
        feb: "\u0BAA\u0BBF\u0BAA\u0BCD\u0BB0\u0BB5\u0BB0\u0BBF",
        mar: "\u0BAE\u0BBE\u0BB0\u0BCD\u0B9A\u0BCD",
        apr: "\u0B8F\u0BAA\u0BCD\u0BB0\u0BB2\u0BCD",
        may: "\u0BAE\u0BC7",
        jun: "\u0B9C\u0BC2\u0BA9\u0BCD",
        jul: "\u0B9C\u0BC2\u0BB2\u0BC8",
        aug: "\u0B86\u0B95\u0BB8\u0BCD\u0B9F\u0BCD",
        sep: "\u0B9A\u0BC6\u0BAA\u0BCD\u0B9F\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD",
        oct: "\u0B85\u0B95\u0BCD\u0B9F\u0BCB\u0BAA\u0BB0\u0BCD",
        nov: "\u0BA8\u0BB5\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD",
        dec: "\u0B9F\u0BBF\u0B9A\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD"
      }
    },
    select: {
      loading: "\u0BA4\u0BAF\u0BBE\u0BB0\u0BBE\u0B95\u0BBF\u0B95\u0BCD\u0B95\u0BCA\u0BA3\u0BCD\u0B9F\u0BBF\u0BB0\u0BC1\u0B95\u0BCD\u0B95\u0BBF\u0BB1\u0BA4\u0BC1",
      noMatch: "\u0BAA\u0BCA\u0BB0\u0BC1\u0BA4\u0BCD\u0BA4\u0BAE\u0BBE\u0BA9 \u0BA4\u0BB0\u0BB5\u0BC1 \u0B95\u0BBF\u0B9F\u0BC8\u0B95\u0BCD\u0B95\u0BB5\u0BBF\u0BB2\u0BCD\u0BB2\u0BC8",
      noData: "\u0BA4\u0BB0\u0BB5\u0BC1 \u0B87\u0BB2\u0BCD\u0BB2\u0BC8",
      placeholder: "\u0BA4\u0BC7\u0BB0\u0BCD\u0BB5\u0BC1 \u0B9A\u0BC6\u0BAF\u0BCD"
    },
    mention: {
      loading: "\u0BA4\u0BAF\u0BBE\u0BB0\u0BBE\u0B95\u0BBF\u0B95\u0BCD\u0B95\u0BCA\u0BA3\u0BCD\u0B9F\u0BBF\u0BB0\u0BC1\u0B95\u0BCD\u0B95\u0BBF\u0BB1\u0BA4\u0BC1"
    },
    cascader: {
      noMatch: "\u0BAA\u0BCA\u0BB0\u0BC1\u0BA4\u0BCD\u0BA4\u0BAE\u0BBE\u0BA9 \u0BA4\u0BB0\u0BB5\u0BC1 \u0B95\u0BBF\u0B9F\u0BC8\u0B95\u0BCD\u0B95\u0BB5\u0BBF\u0BB2\u0BCD\u0BB2\u0BC8",
      loading: "\u0BA4\u0BAF\u0BBE\u0BB0\u0BBE\u0B95\u0BBF\u0B95\u0BCD\u0B95\u0BCA\u0BA3\u0BCD\u0B9F\u0BBF\u0BB0\u0BC1\u0B95\u0BCD\u0B95\u0BBF\u0BB1\u0BA4\u0BC1",
      placeholder: "\u0BA4\u0BC7\u0BB0\u0BCD\u0BB5\u0BC1 \u0B9A\u0BC6\u0BAF\u0BCD",
      noData: "\u0BA4\u0BB0\u0BB5\u0BC1 \u0B87\u0BB2\u0BCD\u0BB2\u0BC8"
    },
    pagination: {
      goto: "\u0BA4\u0BC7\u0BB5\u0BC8\u0BAF\u0BBE\u0BA9\u0BCD \u0BAA\u0B95\u0BC1\u0BA4\u0BBF\u0B95\u0BCD\u0B95\u0BC1 \u0B9A\u0BC6\u0BB2\u0BCD",
      pagesize: "/page",
      total: "\u0BAE\u0BCA\u0BA4\u0BCD\u0BA4\u0BAE\u0BCD {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u0B9A\u0BC6\u0BAF\u0BCD\u0BA4\u0BBF",
      confirm: "\u0B89\u0BB1\u0BC1\u0BA4\u0BBF \u0B9A\u0BC6\u0BAF\u0BCD",
      cancel: "\u0BB0\u0BA4\u0BCD\u0BA4\u0BC1 \u0B9A\u0BC6\u0BAF\u0BCD",
      error: "\u0BAA\u0BCA\u0BB0\u0BC1\u0BA4\u0BCD\u0BA4\u0BBE\u0BAE\u0BBF\u0BB2\u0BCD\u0BB2\u0BBE\u0BA4 \u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "\u0BA8\u0BC0\u0B95\u0BCD\u0B95\u0BC1",
      preview: "\u0BAE\u0BC1\u0BA9\u0BCD\u0BA9\u0BCB\u0B9F\u0BCD\u0B9F\u0BAE\u0BCD \u0BAA\u0BBE\u0BB0\u0BCD",
      continue: "\u0BA4\u0BCA\u0B9F\u0BB0\u0BC1"
    },
    table: {
      emptyText: "\u0BA4\u0BB0\u0BB5\u0BC1 \u0B87\u0BB2\u0BCD\u0BB2\u0BC8",
      confirmFilter: "\u0B89\u0BB1\u0BC1\u0BA4\u0BBF \u0B9A\u0BC6\u0BAF\u0BCD",
      resetFilter: "\u0BAA\u0BC1\u0BA4\u0BC1\u0BAE\u0BBE\u0BB1\u0BCD\u0BB1\u0BAE\u0BCD \u0B9A\u0BC6\u0BAF\u0BCD",
      clearFilter: "\u0B85\u0BA9\u0BC8\u0BA4\u0BCD\u0BA4\u0BC1\u0BAE\u0BCD",
      sumText: "\u0B95\u0BC2\u0B9F\u0BCD\u0B9F\u0BC1"
    },
    tree: {
      emptyText: "\u0BA4\u0BB0\u0BB5\u0BC1 \u0B87\u0BB2\u0BCD\u0BB2\u0BC8"
    },
    transfer: {
      noMatch: "\u0BAA\u0BCA\u0BB0\u0BC1\u0BA4\u0BCD\u0BA4\u0BAE\u0BBE\u0BA9 \u0BA4\u0BB0\u0BB5\u0BC1 \u0B95\u0BBF\u0B9F\u0BC8\u0B95\u0BCD\u0B95\u0BB5\u0BBF\u0BB2\u0BCD\u0BB2\u0BC8",
      noData: "\u0BA4\u0BB0\u0BB5\u0BC1 \u0B87\u0BB2\u0BCD\u0BB2\u0BC8",
      titles: ["\u0BAA\u0B9F\u0BCD\u0B9F\u0BBF\u0BAF\u0BB2\u0BCD 1", "\u0BAA\u0B9F\u0BCD\u0B9F\u0BBF\u0BAF\u0BB2\u0BCD 2"],
      filterPlaceholder: "\u0B9A\u0BCA\u0BB2\u0BCD\u0BB2\u0BC8 \u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1 \u0B9A\u0BC6\u0BAF\u0BCD",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} \u0BA4\u0BC7\u0BB0\u0BCD\u0BB5\u0BC1 \u0B9A\u0BC6\u0BAF\u0BCD\u0BAF\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BB5\u0BC8\u0B95\u0BB3\u0BCD"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"th.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/th.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => th
});
var th = {
  name: "th",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u0E15\u0E01\u0E25\u0E07",
      clear: "\u0E25\u0E49\u0E32\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25"
    },
    datepicker: {
      now: "\u0E15\u0E2D\u0E19\u0E19\u0E35\u0E49",
      today: "\u0E27\u0E31\u0E19\u0E19\u0E35\u0E49",
      cancel: "\u0E22\u0E01\u0E40\u0E25\u0E34\u0E01",
      clear: "\u0E25\u0E49\u0E32\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25",
      confirm: "\u0E15\u0E01\u0E25\u0E07",
      selectDate: "\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48",
      selectTime: "\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E40\u0E27\u0E25\u0E32",
      startDate: "\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E40\u0E23\u0E34\u0E48\u0E21\u0E15\u0E49\u0E19",
      startTime: "\u0E40\u0E27\u0E25\u0E32\u0E40\u0E23\u0E34\u0E48\u0E21\u0E15\u0E49\u0E19",
      endDate: "\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E2A\u0E34\u0E49\u0E19\u0E2A\u0E38\u0E14",
      endTime: "\u0E40\u0E27\u0E25\u0E32\u0E2A\u0E34\u0E49\u0E19\u0E2A\u0E38\u0E14",
      prevYear: "\u0E1B\u0E35\u0E01\u0E48\u0E2D\u0E19\u0E2B\u0E19\u0E49\u0E32",
      nextYear: "\u0E1B\u0E35\u0E16\u0E31\u0E14\u0E44\u0E1B",
      prevMonth: "\u0E40\u0E14\u0E37\u0E2D\u0E19\u0E01\u0E48\u0E2D\u0E19\u0E2B\u0E19\u0E49\u0E32",
      nextMonth: "\u0E40\u0E14\u0E37\u0E2D\u0E19\u0E16\u0E31\u0E14\u0E44\u0E1B",
      year: "\u0E1B\u0E35",
      month1: "\u0E21\u0E01\u0E23\u0E32\u0E04\u0E21",
      month2: "\u0E01\u0E38\u0E21\u0E20\u0E32\u0E1E\u0E31\u0E19\u0E18\u0E4C",
      month3: "\u0E21\u0E35\u0E19\u0E32\u0E04\u0E21",
      month4: "\u0E40\u0E21\u0E29\u0E32\u0E22\u0E19",
      month5: "\u0E1E\u0E24\u0E29\u0E20\u0E32\u0E04\u0E21",
      month6: "\u0E21\u0E34\u0E16\u0E38\u0E19\u0E32\u0E22\u0E19",
      month7: "\u0E01\u0E23\u0E01\u0E0E\u0E32\u0E04\u0E21",
      month8: "\u0E2A\u0E34\u0E07\u0E2B\u0E32\u0E04\u0E21",
      month9: "\u0E01\u0E31\u0E19\u0E22\u0E32\u0E22\u0E19",
      month10: "\u0E15\u0E38\u0E25\u0E32\u0E04\u0E21",
      month11: "\u0E1E\u0E24\u0E28\u0E08\u0E34\u0E01\u0E32\u0E22\u0E19",
      month12: "\u0E18\u0E31\u0E19\u0E27\u0E32\u0E04\u0E21",
      weeks: {
        sun: "\u0E2D\u0E32",
        mon: "\u0E08",
        tue: "\u0E2D",
        wed: "\u0E1E",
        thu: "\u0E1E\u0E24",
        fri: "\u0E28",
        sat: "\u0E2A"
      },
      months: {
        jan: "\u0E21.\u0E04.",
        feb: "\u0E01.\u0E1E.",
        mar: "\u0E21\u0E35.\u0E04.",
        apr: "\u0E40\u0E21.\u0E22.",
        may: "\u0E1E.\u0E04.",
        jun: "\u0E21\u0E34.\u0E22.",
        jul: "\u0E01.\u0E04.",
        aug: "\u0E2A.\u0E04.",
        sep: "\u0E01.\u0E22.",
        oct: "\u0E15.\u0E04.",
        nov: "\u0E1E.\u0E22.",
        dec: "\u0E18.\u0E04."
      }
    },
    select: {
      loading: "\u0E01\u0E33\u0E25\u0E31\u0E07\u0E42\u0E2B\u0E25\u0E14",
      noMatch: "\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E15\u0E23\u0E07\u0E01\u0E31\u0E19",
      noData: "\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25",
      placeholder: "\u0E40\u0E25\u0E37\u0E2D\u0E01"
    },
    mention: {
      loading: "\u0E01\u0E33\u0E25\u0E31\u0E07\u0E42\u0E2B\u0E25\u0E14"
    },
    cascader: {
      noMatch: "\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E15\u0E23\u0E07\u0E01\u0E31\u0E19",
      loading: "\u0E01\u0E33\u0E25\u0E31\u0E07\u0E42\u0E2B\u0E25\u0E14",
      placeholder: "\u0E40\u0E25\u0E37\u0E2D\u0E01",
      noData: "\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25"
    },
    pagination: {
      goto: "\u0E44\u0E1B\u0E17\u0E35\u0E48",
      pagesize: "/\u0E2B\u0E19\u0E49\u0E32",
      total: "\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14 {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21",
      confirm: "\u0E15\u0E01\u0E25\u0E07",
      cancel: "\u0E22\u0E01\u0E40\u0E25\u0E34\u0E01",
      error: "\u0E04\u0E38\u0E13\u0E1B\u0E49\u0E2D\u0E19\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07"
    },
    upload: {
      deleteTip: "\u0E01\u0E14\u0E1B\u0E38\u0E48\u0E21 \"\u0E25\u0E1A\" \u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E25\u0E1A\u0E2D\u0E2D\u0E01",
      delete: "\u0E25\u0E1A",
      preview: "\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E48\u0E32\u0E07",
      continue: "\u0E17\u0E33\u0E15\u0E48\u0E2D"
    },
    table: {
      emptyText: "\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25",
      confirmFilter: "\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19",
      resetFilter: "\u0E23\u0E35\u0E40\u0E0B\u0E47\u0E15",
      clearFilter: "\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14",
      sumText: "\u0E23\u0E27\u0E21"
    },
    tour: {
      next: "\u0E16\u0E31\u0E14\u0E44\u0E1B",
      previous: "\u0E22\u0E49\u0E2D\u0E19\u0E01\u0E25\u0E31\u0E1A",
      finish: "\u0E40\u0E2A\u0E23\u0E47\u0E08\u0E2A\u0E34\u0E49\u0E19"
    },
    tree: {
      emptyText: "\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25"
    },
    transfer: {
      noMatch: "\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E15\u0E23\u0E07\u0E01\u0E31\u0E19",
      noData: "\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25",
      titles: ["List 1", "List 2"],
      filterPlaceholder: "\u0E01\u0E23\u0E2D\u0E01\u0E04\u0E35\u0E22\u0E4C\u0E40\u0E27\u0E34\u0E23\u0E4C\u0E14",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} checked"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "\u0E22\u0E49\u0E2D\u0E19\u0E01\u0E25\u0E31\u0E1A"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tk.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/tk.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => tk
});
var tk = {
  name: "tk",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "Arassala"
    },
    datepicker: {
      now: "\u015Euwagt",
      today: "\u015E\xFCg\xFCn",
      cancel: "Bes et",
      clear: "Arassala",
      confirm: "OK",
      selectDate: "G\xFCni sa\xFDla\u0148",
      selectTime: "Wagty sa\xFDla\u0148",
      startDate: "Ba\u015Fla\xFDan g\xFCni",
      startTime: "Ba\u015Fla\xFDan wagty",
      endDate: "Gutar\xFDan g\xFCni",
      endTime: "Gutar\xFDan wagty",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      year: "",
      month1: "\xDDan",
      month2: "Few",
      month3: "Mar",
      month4: "Apr",
      month5: "Ma\xFD",
      month6: "I\xFDn",
      month7: "I\xFDl",
      month8: "Awg",
      month9: "Sen",
      month10: "Okt",
      month11: "No\xFD",
      month12: "Dek",
      weeks: {
        sun: "\xDDek",
        mon: "Du\u015F",
        tue: "Si\u015F",
        wed: "\xC7ar",
        thu: "Pen",
        fri: "Ann",
        sat: "\u015Een"
      },
      months: {
        jan: "\xDDan",
        feb: "Few",
        mar: "Mar",
        apr: "Apr",
        may: "Ma\xFD",
        jun: "I\xFDn",
        jul: "I\xFDl",
        aug: "Awg",
        sep: "Sep",
        oct: "Okt",
        nov: "No\xFD",
        dec: "Dek"
      }
    },
    select: {
      loading: "Indiril\xFD\xE4r",
      noMatch: "Hi\xE7zat tapylmady",
      noData: "Hi\xE7zat \xFDok",
      placeholder: "Sa\xFDla"
    },
    mention: {
      loading: "Indiril\xFD\xE4r"
    },
    cascader: {
      noMatch: "Hi\xE7zat tapylmady",
      loading: "Indiril\xFD\xE4r",
      placeholder: "Sa\xFDla\u0148",
      noData: "Hi\xE7zat \xFDok"
    },
    pagination: {
      goto: "Git",
      pagesize: "/sahypa",
      total: "Umumy {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Hat",
      confirm: "OK",
      cancel: "Bes et",
      error: "\xDDal\u0148y\u015F girizme"
    },
    upload: {
      deleteTip: "Pozmak \xFC\xE7in \"poz\" d\xFCwm\xE4 basy\u0148",
      delete: "Poz",
      preview: "G\xF6r",
      continue: "Dowam et"
    },
    table: {
      emptyText: "Maglumat \xFDok",
      confirmFilter: "Tassykla",
      resetFilter: "Arassala",
      clearFilter: "Hemmesi",
      sumText: "Jemi"
    },
    tree: {
      emptyText: "Maglumat \xFDok"
    },
    transfer: {
      noMatch: "Hi\xE7zat tapylmady",
      noData: "Hi\xE7zat \xFDok",
      titles: ["Sanaw 1", "Sanaw 2"],
      filterPlaceholder: "G\xF6zleg s\xF6zlerini girizi\u0148",
      noCheckedFormat: "{total} sany",
      hasCheckedFormat: "{checked}/{total} sa\xFDlanan"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tr.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/tr.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => tr
});
var tr = {
  name: "tr",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Onayla",
      clear: "Temizle"
    },
    datepicker: {
      now: "\u015Eimdi",
      today: "Bug\xFCn",
      cancel: "\u0130ptal",
      clear: "Temizle",
      confirm: "Onayla",
      selectDate: "Tarih se\xE7",
      selectTime: "Saat se\xE7",
      startDate: "Ba\u015Flang\u0131\xE7 Tarihi",
      startTime: "Ba\u015Flang\u0131\xE7 Saati",
      endDate: "Biti\u015F Tarihi",
      endTime: "Biti\u015F Saati",
      prevYear: "\xD6nceki Y\u0131l",
      nextYear: "Sonraki Y\u0131l",
      prevMonth: "\xD6nceki Ay",
      nextMonth: "Sonraki Ay",
      year: "",
      month1: "Ocak",
      month2: "\u015Eubat",
      month3: "Mart",
      month4: "Nisan",
      month5: "May\u0131s",
      month6: "Haziran",
      month7: "Temmuz",
      month8: "A\u011Fustos",
      month9: "Eyl\xFCl",
      month10: "Ekim",
      month11: "Kas\u0131m",
      month12: "Aral\u0131k",
      weeks: {
        sun: "Paz",
        mon: "Pzt",
        tue: "Sal",
        wed: "\xC7ar",
        thu: "Per",
        fri: "Cum",
        sat: "Cmt"
      },
      months: {
        jan: "Oca",
        feb: "\u015Eub",
        mar: "Mar",
        apr: "Nis",
        may: "May",
        jun: "Haz",
        jul: "Tem",
        aug: "A\u011Fu",
        sep: "Eyl",
        oct: "Eki",
        nov: "Kas",
        dec: "Ara"
      }
    },
    select: {
      loading: "Y\xFCkleniyor",
      noMatch: "E\u015Fle\u015Fen veri bulunamad\u0131",
      noData: "Veri yok",
      placeholder: "Se\xE7"
    },
    mention: {
      loading: "Y\xFCkleniyor"
    },
    cascader: {
      noMatch: "E\u015Fle\u015Fen veri bulunamad\u0131",
      loading: "Y\xFCkleniyor",
      placeholder: "Se\xE7",
      noData: "Veri yok"
    },
    pagination: {
      goto: "Git",
      pagesize: "/sayfa",
      total: "Toplam {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Mesaj",
      confirm: "Onayla",
      cancel: "\u0130ptal",
      error: "\u0130llegal giri\u015F"
    },
    upload: {
      deleteTip: "kald\u0131rmak i\xE7in delete tu\u015Funa bas",
      delete: "Sil",
      preview: "G\xF6r\xFCnt\xFCle",
      continue: "Devam"
    },
    table: {
      emptyText: "Veri yok",
      confirmFilter: "Onayla",
      resetFilter: "S\u0131f\u0131rla",
      clearFilter: "Hepsi",
      sumText: "Sum"
    },
    tree: {
      emptyText: "Veri yok"
    },
    transfer: {
      noMatch: "E\u015Fle\u015Fen veri bulunamad\u0131",
      noData: "Veri yok",
      titles: ["Liste 1", "Liste 2"],
      filterPlaceholder: "Anahtar kelimeleri gir",
      noCheckedFormat: "{total} adet",
      hasCheckedFormat: "{checked}/{total} se\xE7ildi"
    },
    image: {
      error: "BA\u015EARISIZ OLDU"
    },
    pageHeader: {
      title: "Geri"
    },
    popconfirm: {
      confirmButtonText: "Evet",
      cancelButtonText: "Hay\u0131r"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ug-cn.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/ug-cn.mjs                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => ugCn
});
var ugCn = {
  name: "ug-cn",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "\u062C\u06D5\u0632\u0645\u0644\u06D5\u0634",
      clear: "\u0642\u06C7\u0631\u06C7\u0642\u062F\u0627\u0634"
    },
    datepicker: {
      now: "\u06BE\u0627\u0632\u0649\u0631\u0642\u0649 \u06CB\u0627\u0642\u0649\u062A",
      today: "\u0628\u06C8\u06AF\u06C8\u0646",
      cancel: "\u0628\u0649\u0643\u0627\u0631 \u0642\u0649\u0644\u0649\u0634",
      clear: "\u0642\u06C7\u0631\u06C7\u0642\u062F\u0627\u0634",
      confirm: "\u062C\u06D5\u0632\u0645\u0644\u06D5\u0634",
      selectDate: "\u0686\u0649\u0633\u0644\u0627 \u062A\u0627\u0644\u0644\u0627\u06AD",
      selectTime: "\u06CB\u0627\u0642\u0649\u062A \u062A\u0627\u0644\u0644\u0627\u06AD",
      startDate: "\u0628\u0627\u0634\u0644\u0627\u0646\u063A\u0627\u0646 \u0686\u0649\u0633\u0644\u0627",
      startTime: "\u0628\u0627\u0634\u0644\u0627\u0646\u063A\u0627\u0646 \u06CB\u0627\u0642\u0649\u062A",
      endDate: "\u0626\u0627\u062E\u0649\u0631\u0644\u0627\u0634\u0642\u0627\u0646 \u0686\u0649\u0633\u0644\u0627",
      endTime: "\u0626\u0627\u062E\u0649\u0631\u0644\u0627\u0634\u0642\u0627\u0646 \u06CB\u0627\u0642\u0649\u062A",
      prevYear: "\u0626\u0627\u0644\u062F\u0649\u0646\u0642\u0649 \u064A\u0649\u0644",
      nextYear: "\u0643\u0649\u064A\u0649\u0646\u0643\u0649 \u064A\u0649\u0644",
      prevMonth: "\u0626\u0627\u0644\u062F\u0649\u0646\u0642\u0649 \u0626\u0627\u064A",
      nextMonth: "\u0643\u0649\u064A\u0649\u0646\u0643\u0649 \u0626\u0627\u064A",
      year: "- \u064A\u0649\u0644",
      month1: "1-\u0626\u0627\u064A",
      month2: "2-\u0626\u0627\u064A",
      month3: "3-\u0626\u0627\u064A",
      month4: "4-\u0626\u0627\u064A",
      month5: "5-\u0626\u0627\u064A",
      month6: "6-\u0626\u0627\u064A",
      month7: "7-\u0626\u0627\u064A",
      month8: "8-\u0626\u0627\u064A",
      month9: "9-\u0626\u0627\u064A",
      month10: "10-\u0626\u0627\u064A",
      month11: "11-\u0626\u0627\u064A",
      month12: "12-\u0626\u0627\u064A",
      weeks: {
        sun: "\u064A\u06D5\u0643\u0634\u06D5\u0646\u0628\u06D5",
        mon: "\u062F\u06C8\u0634\u06D5\u0646\u0628\u06D5",
        tue: "\u0633\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5",
        wed: "\u0686\u0627\u0631\u0634\u06D5\u0646\u0628\u06D5",
        thu: "\u067E\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5",
        fri: "\u062C\u06C8\u0645\u06D5",
        sat: "\u0634\u06D5\u0646\u0628\u06D5"
      },
      months: {
        jan: "1-\u0626\u0627\u064A",
        feb: "2-\u0626\u0627\u064A",
        mar: "3-\u0626\u0627\u064A",
        apr: "4-\u0626\u0627\u064A",
        may: "5-\u0626\u0627\u064A",
        jun: "6-\u0626\u0627\u064A",
        jul: "7-\u0626\u0627\u064A",
        aug: "8-\u0626\u0627\u064A",
        sep: "9-\u0626\u0627\u064A",
        oct: "10-\u0626\u0627\u064A",
        nov: "11-\u0626\u0627\u064A",
        dec: "12-\u0626\u0627\u064A"
      }
    },
    select: {
      loading: "\u064A\u06C8\u0643\u0644\u0649\u0646\u0649\u06CB\u0627\u062A\u0649\u062F\u06C7",
      noMatch: "\u0626\u06C7\u0686\u06C7\u0631 \u062A\u06D0\u067E\u0649\u0644\u0645\u0649\u062F\u0649",
      noData: "\u0626\u06C7\u0686\u06C7\u0631 \u064A\u0648\u0642",
      placeholder: "\u062A\u0627\u0644\u0644\u0627\u06AD"
    },
    mention: {
      loading: "\u064A\u06C8\u0643\u0644\u0649\u0646\u0649\u06CB\u0627\u062A\u0649\u062F\u06C7"
    },
    cascader: {
      noMatch: "\u0626\u06C7\u0686\u06C7\u0631 \u062A\u06D0\u067E\u0649\u0644\u0645\u0649\u062F\u0649",
      loading: "\u064A\u06C8\u0643\u0644\u0649\u0646\u0649\u06CB\u0627\u062A\u0649\u062F\u06C7",
      placeholder: "\u062A\u0627\u0644\u0644\u0627\u06AD",
      noData: "\u0626\u06C7\u0686\u06C7\u0631 \u064A\u0648\u0642"
    },
    pagination: {
      goto: "\u0643\u0649\u064A\u0649\u0646\u0643\u0649 \u0628\u06D5\u062A",
      pagesize: "\u062A\u0627\u0644/\u0628\u06D5\u062A",
      total: "\u062C\u06D5\u0645\u0626\u0649\u064A {total} \u062A\u0627\u0644",
      pageClassifier: "\u0628\u06D5\u062A",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u0626\u06D5\u0633\u0643\u06D5\u0631\u062A\u0649\u0634",
      confirm: "\u062C\u06D5\u0632\u0645\u0644\u06D5\u0634",
      cancel: "\u0628\u0649\u0643\u0627\u0631 \u0642\u0649\u0644\u0649\u0634",
      error: "\u0643\u0649\u0631\u06AF\u06C8\u0632\u06AF\u06D5\u0646 \u0626\u06C7\u0686\u06C7\u0631\u0649\u06AD\u0649\u0632\u062F\u0627 \u062E\u0627\u062A\u0627\u0644\u0649\u0642 \u0628\u0627\u0631!"
    },
    upload: {
      deleteTip: "delete \u0643\u06C7\u0646\u067E\u0643\u0649\u0633\u0649\u0646\u0649 \u0628\u06D0\u0633\u0649\u067E \u0626\u06C6\u0686\u06C8\u0631\u06D5\u0644\u06D5\u064A\u0633\u0649\u0632",
      delete: "\u0626\u06C6\u0686\u06C8\u0631\u06C8\u0634",
      preview: "\u0631\u06D5\u0633\u0649\u0645\u0646\u0649 \u0643\u06C6\u0631\u06C8\u0634",
      continue: "\u0631\u06D5\u0633\u0649\u0645 \u064A\u0648\u0644\u0644\u0627\u0634"
    },
    table: {
      emptyText: "\u0626\u06C7\u0686\u06C7\u0631 \u064A\u0648\u0642",
      confirmFilter: "\u0633\u06C8\u0632\u06AF\u06C8\u0686",
      resetFilter: "\u0642\u0627\u064A\u062A\u0627 \u062A\u0648\u0644\u062F\u06C7\u0631\u06C7\u0634",
      clearFilter: "\u06BE\u06D5\u0645\u0645\u06D5",
      sumText: "\u062C\u06D5\u0645\u0626\u0649\u064A"
    },
    tree: {
      emptyText: "\u0626\u06C7\u0686\u06C7\u0631 \u064A\u0648\u0642"
    },
    transfer: {
      noMatch: "\u0626\u06C7\u0686\u06C7\u0631 \u062A\u06D0\u067E\u0649\u0644\u0645\u0649\u062F\u0649",
      noData: "\u0626\u06C7\u0686\u06C7\u0631 \u064A\u0648\u0642",
      titles: ["\u062C\u06D5\u062F\u06CB\u06D5\u0644 1", "\u062C\u06D5\u062F\u06CB\u06D5\u0644 2"],
      filterPlaceholder: "\u0626\u0649\u0632\u062F\u0649\u0645\u06D5\u0643\u0686\u0649 \u0628\u0648\u0644\u063A\u0627\u0646 \u0645\u06D5\u0632\u0645\u06C7\u0646\u0646\u0649 \u0643\u0649\u0631\u06AF\u06C8\u0632\u06C8\u06AD",
      noCheckedFormat: "\u062C\u06D5\u0645\u0626\u0649\u064A {total} \u062A\u06C8\u0631",
      hasCheckedFormat: "\u062A\u0627\u0644\u0644\u0627\u0646\u063A\u0649\u0646\u0649 {checked}/{total} \u062A\u06C8\u0631"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"uk.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/uk.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => uk
});
var uk = {
  name: "uk",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "\u041E\u0447\u0438\u0441\u0442\u0438\u0442\u0438"
    },
    datepicker: {
      now: "\u0417\u0430\u0440\u0430\u0437",
      today: "\u0421\u044C\u043E\u0433\u043E\u0434\u043D\u0456",
      cancel: "\u0412\u0456\u0434\u043C\u0456\u043D\u0430",
      clear: "\u041E\u0447\u0438\u0441\u0442\u0438\u0442\u0438",
      confirm: "OK",
      selectDate: "\u0412\u0438\u0431\u0440\u0430\u0442\u0438 \u0434\u0430\u0442\u0443",
      selectTime: "\u0412\u0438\u0431\u0440\u0430\u0442\u0438 \u0447\u0430\u0441",
      startDate: "\u0414\u0430\u0442\u0430 \u043F\u043E\u0447\u0430\u0442\u043A\u0443",
      startTime: "\u0427\u0430\u0441 \u043F\u043E\u0447\u0430\u0442\u043A\u0443",
      endDate: "\u0414\u0430\u0442\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u043D\u044F",
      endTime: "\u0427\u0430\u0441 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u043D\u044F",
      prevYear: "\u041F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456\u0439 \u0420\u0456\u043A",
      nextYear: "\u041D\u0430\u0441\u0442\u0443\u043F\u043D\u0438\u0439 \u0420\u0456\u043A",
      prevMonth: "\u041F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456\u0439 \u041C\u0456\u0441\u044F\u0446\u044C",
      nextMonth: "\u041D\u0430\u0441\u0442\u0443\u043F\u043D\u0438\u0439 \u041C\u0456\u0441\u044F\u0446\u044C",
      year: "",
      month1: "\u0421\u0456\u0447\u0435\u043D\u044C",
      month2: "\u041B\u044E\u0442\u0438\u0439",
      month3: "\u0411\u0435\u0440\u0435\u0437\u0435\u043D\u044C",
      month4: "\u041A\u0432\u0456\u0442\u0435\u043D\u044C",
      month5: "\u0422\u0440\u0430\u0432\u0435\u043D\u044C",
      month6: "\u0427\u0435\u0440\u0432\u0435\u043D\u044C",
      month7: "\u041B\u0438\u043F\u0435\u043D\u044C",
      month8: "\u0421\u0435\u0440\u043F\u0435\u043D\u044C",
      month9: "\u0412\u0435\u0440\u0435\u0441\u0435\u043D\u044C",
      month10: "\u0416\u043E\u0432\u0442\u0435\u043D\u044C",
      month11: "\u041B\u0438\u0441\u0442\u043E\u043F\u0430\u0434",
      month12: "\u0413\u0440\u0443\u0434\u0435\u043D\u044C",
      week: "\u0442\u0438\u0436\u0434\u0435\u043D\u044C",
      weeks: {
        sun: "\u041D\u0434",
        mon: "\u041F\u043D",
        tue: "\u0412\u0442",
        wed: "\u0421\u0440",
        thu: "\u0427\u0442",
        fri: "\u041F\u0442",
        sat: "\u0421\u0431"
      },
      months: {
        jan: "\u0421\u0456\u0447",
        feb: "\u041B\u044E\u0442",
        mar: "\u0411\u0435\u0440",
        apr: "\u041A\u0432\u0456",
        may: "\u0422\u0440\u0430",
        jun: "\u0427\u0435\u0440",
        jul: "\u041B\u0438\u043F",
        aug: "\u0421\u0435\u0440",
        sep: "\u0412\u0435\u0440",
        oct: "\u0416\u043E\u0432",
        nov: "\u041B\u0438\u0441",
        dec: "\u0413\u0440\u0443"
      }
    },
    select: {
      loading: "\u0417\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0435\u043D\u043D\u044F",
      noMatch: "\u0421\u043F\u0456\u0432\u043F\u0430\u0434\u0456\u043D\u044C \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E",
      noData: "\u041D\u0435\u043C\u0430\u0454 \u0434\u0430\u043D\u0438\u0445",
      placeholder: "\u041E\u0431\u0440\u0430\u0442\u0438"
    },
    mention: {
      loading: "\u0417\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0435\u043D\u043D\u044F"
    },
    cascader: {
      noMatch: "\u0421\u043F\u0456\u0432\u043F\u0430\u0434\u0456\u043D\u044C \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E",
      loading: "\u0417\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0435\u043D\u043D\u044F",
      placeholder: "\u041E\u0431\u0440\u0430\u0442\u0438",
      noData: "\u041D\u0435\u043C\u0430\u0454 \u0434\u0430\u043D\u0438\u0445"
    },
    pagination: {
      goto: "\u041F\u0435\u0440\u0435\u0439\u0442\u0438",
      pagesize: "\u043D\u0430 \u0441\u0442\u043E\u0440\u0456\u043D\u0446\u0456",
      total: "\u0412\u0441\u044C\u043E\u0433\u043E {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "\u041F\u043E\u0432\u0456\u0434\u043E\u043C\u043B\u0435\u043D\u043D\u044F",
      confirm: "OK",
      cancel: "\u0412\u0456\u0434\u043C\u0456\u043D\u0430",
      error: "\u041D\u0435\u043F\u0440\u0438\u043F\u0443\u0441\u0442\u0438\u043C\u0438\u0439 \u0432\u0432\u0456\u0434 \u0434\u0430\u043D\u0438\u0445"
    },
    upload: {
      deleteTip: "\u043D\u0430\u0442\u0438\u0441\u043D\u0456\u0442\u044C \u043A\u043D\u043E\u043F\u043A\u0443 \u0449\u043E\u0431 \u0432\u0438\u0434\u0430\u043B\u0438\u0442\u0438",
      delete: "\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438",
      preview: "\u041F\u0435\u0440\u0435\u0433\u043B\u044F\u0434",
      continue: "\u041F\u0440\u043E\u0434\u043E\u0432\u0436\u0438\u0442\u0438"
    },
    table: {
      emptyText: "\u041D\u0435\u043C\u0430\u0454 \u0434\u0430\u043D\u0438\u0445",
      confirmFilter: "\u041F\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0438",
      resetFilter: "\u0421\u043A\u0438\u043D\u0443\u0442\u0438",
      clearFilter: "\u0412\u0441\u0435",
      sumText: "\u0421\u0443\u043C\u0430"
    },
    tour: {
      next: "\u0414\u0430\u043B\u0456",
      previous: "\u041D\u0430\u0437\u0430\u0434",
      finish: "\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u0438"
    },
    tree: {
      emptyText: "\u041D\u0435\u043C\u0430\u0454 \u0434\u0430\u043D\u0438\u0445"
    },
    transfer: {
      noMatch: "\u0421\u043F\u0456\u0432\u043F\u0430\u0434\u0456\u043D\u044C \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E",
      noData: "\u041E\u0431\u0440\u0430\u0442\u0438",
      titles: ["\u0421\u043F\u0438\u0441\u043E\u043A 1", "\u0421\u043F\u0438\u0441\u043E\u043A 2"],
      filterPlaceholder: "\u0412\u0432\u0435\u0434\u0456\u0442\u044C \u043A\u043B\u044E\u0447\u043E\u0432\u0435 \u0441\u043B\u043E\u0432\u043E",
      noCheckedFormat: "{total} \u043F\u0443\u043D\u043A\u0442\u0456\u0432",
      hasCheckedFormat: "{checked}/{total} \u0432\u0438\u0431\u0440\u0430\u043D\u043E"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"uz-uz.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/uz-uz.mjs                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => uzUz
});
var uzUz = {
  name: "uz-uz",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "Qabul qilish",
      clear: "Tozalash"
    },
    datepicker: {
      now: "Hozir",
      today: "Bugun",
      cancel: "Bekor qilish",
      clear: "Tozalash",
      confirm: "Qabul qilish",
      selectDate: "Kunni tanlash",
      selectTime: "Soatni tanlash",
      startDate: "Boshlanish sanasi",
      startTime: "Boshlanish vaqti",
      endDate: "Tugash sanasi",
      endTime: "Tugash vaqti",
      prevYear: "O\u02BBtgan yil",
      nextYear: "Kelgusi yil",
      prevMonth: "O\u02BBtgan oy",
      nextMonth: "Kelgusi oy",
      year: "Yil",
      month1: "Yanvar",
      month2: "Fevral",
      month3: "Mart",
      month4: "Aprel",
      month5: "May",
      month6: "Iyun",
      month7: "Iyul",
      month8: "Avgust",
      month9: "Sentabr",
      month10: "Oktabr",
      month11: "Noyabr",
      month12: "Dekabr",
      week: "Hafta",
      weeks: {
        sun: "Yak",
        mon: "Dush",
        tue: "Sesh",
        wed: "Chor",
        thu: "Pay",
        fri: "Jum",
        sat: "Shan"
      },
      months: {
        jan: "Yan",
        feb: "Fev",
        mar: "Mar",
        apr: "Apr",
        may: "May",
        jun: "Iyun",
        jul: "Iyul",
        aug: "Avg",
        sep: "Sen",
        oct: "Okt",
        nov: "Noy",
        dec: "Dek"
      }
    },
    select: {
      loading: "Yuklanmoqda",
      noMatch: "Mos ma\u02BClumot yo\u02BBq",
      noData: "Ma\u02BClumot yo\u02BBq",
      placeholder: "Tanladizngiz"
    },
    mention: {
      loading: "Yuklanmoqda"
    },
    cascader: {
      noMatch: "Mos ma\u02BClumot topilmadi",
      loading: "Yuklanmoqda",
      placeholder: "Tanlash",
      noData: "Ma\u02BClumot yo\u02BBq"
    },
    pagination: {
      goto: "O\u02BBtish",
      pagesize: "/sahifa",
      total: "Barchasi {total} ta",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Xabar",
      confirm: "Qabul qilish",
      cancel: "Bekor qilish",
      error: "Xatolik"
    },
    upload: {
      deleteTip: "O\u02BBchirish tugmasini bosib o\u02BBchiring",
      delete: "O\u02BBchirish",
      preview: "Oldin ko\u02BBrish",
      continue: "Davom qilish"
    },
    table: {
      emptyText: "Bo\u02BBsh",
      confirmFilter: "Qabul qilish",
      resetFilter: "Oldingi holatga qaytarish",
      clearFilter: "Jami",
      sumText: "Summasi"
    },
    tree: {
      emptyText: "Ma\u02BClumot yo\u02BBq"
    },
    transfer: {
      noMatch: "Mos ma\u02BClumot topilmadi",
      noData: "Ma\u02BClumot yo\u02BBq",
      titles: ["1-jadval", "2-jadval"],
      filterPlaceholder: "Kalit so\u02BBzni kiriting",
      noCheckedFormat: "{total} ta element",
      hasCheckedFormat: "{checked}/{total} ta belgilandi"
    },
    image: {
      error: "Xatolik"
    },
    pageHeader: {
      title: "Orqaga"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"vi.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/vi.mjs                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => vi
});
var vi = {
  name: "vi",
  el: {
    breadcrumb: {
      label: "Breadcrumb"
    },
    colorpicker: {
      confirm: "OK",
      clear: "X\xF3a"
    },
    datepicker: {
      now: "Hi\u1EC7n t\u1EA1i",
      today: "H\xF4m nay",
      cancel: "H\u1EE7y",
      clear: "X\xF3a",
      confirm: "OK",
      selectDate: "Ch\u1ECDn ng\xE0y",
      selectTime: "Ch\u1ECDn gi\u1EDD",
      startDate: "Ng\xE0y b\u1EAFt \u0111\u1EA7u",
      startTime: "Th\u1EDDi gian b\u1EAFt \u0111\u1EA7u",
      endDate: "Ng\xE0y k\u1EBFt th\xFAc",
      endTime: "Th\u1EDDi gian k\u1EBFt th\xFAc",
      prevYear: "N\u0103m tr\u01B0\u1EDBc",
      nextYear: "N\u0103m t\u1EDBi",
      prevMonth: "Th\xE1ng tr\u01B0\u1EDBc",
      nextMonth: "Th\xE1ng t\u1EDBi",
      year: "N\u0103m",
      month1: "Th\xE1ng 1",
      month2: "Th\xE1ng 2",
      month3: "Th\xE1ng 3",
      month4: "Th\xE1ng 4",
      month5: "Th\xE1ng 5",
      month6: "Th\xE1ng 6",
      month7: "Th\xE1ng 7",
      month8: "Th\xE1ng 8",
      month9: "Th\xE1ng 9",
      month10: "Th\xE1ng 10",
      month11: "Th\xE1ng 11",
      month12: "Th\xE1ng 12",
      weeks: {
        sun: "CN",
        mon: "T2",
        tue: "T3",
        wed: "T4",
        thu: "T5",
        fri: "T6",
        sat: "T7"
      },
      months: {
        jan: "Th.1",
        feb: "Th.2",
        mar: "Th.3",
        apr: "Th.4",
        may: "Th.5",
        jun: "Th.6",
        jul: "Th.7",
        aug: "Th.8",
        sep: "Th.9",
        oct: "Th.10",
        nov: "Th.11",
        dec: "Th.12"
      }
    },
    select: {
      loading: "\u0110ang t\u1EA3i",
      noMatch: "D\u1EEF li\u1EC7u kh\xF4ng ph\xF9 h\u1EE3p",
      noData: "Kh\xF4ng t\xECm th\u1EA5y d\u1EEF li\u1EC7u",
      placeholder: "Ch\u1ECDn"
    },
    mention: {
      loading: "\u0110ang t\u1EA3i"
    },
    cascader: {
      noMatch: "D\u1EEF li\u1EC7u kh\xF4ng ph\xF9 h\u1EE3p",
      loading: "\u0110ang t\u1EA3i",
      placeholder: "Ch\u1ECDn",
      noData: "Kh\xF4ng t\xECm th\u1EA5y d\u1EEF li\u1EC7u"
    },
    pagination: {
      goto: "Nh\u1EA3y t\u1EDBi",
      pagesize: "/trang",
      total: "T\u1ED5ng {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages"
    },
    messagebox: {
      title: "Th\xF4ng b\xE1o",
      confirm: "OK",
      cancel: "H\u1EE7y",
      error: "D\u1EEF li\u1EC7u kh\xF4ng h\u1EE3p l\u1EC7"
    },
    upload: {
      deleteTip: "Nh\u1EA5n xo\xE1 \u0111\u1EC3 xo\xE1",
      delete: "X\xF3a",
      preview: "Xem tr\u01B0\u1EDBc",
      continue: "Ti\u1EBFp t\u1EE5c"
    },
    table: {
      emptyText: "Kh\xF4ng c\xF3 d\u1EEF li\u1EC7u",
      confirmFilter: "X\xE1c nh\u1EADn",
      resetFilter: "L\xE0m m\u1EDBi",
      clearFilter: "X\xF3a h\u1EBFt",
      sumText: "T\u1ED5ng"
    },
    tour: {
      next: "Ti\u1EBFp",
      previous: "Tr\u01B0\u1EDBc",
      finish: "Ho\xE0n th\xE0nh"
    },
    tree: {
      emptyText: "Kh\xF4ng c\xF3 d\u1EEF li\u1EC7u"
    },
    transfer: {
      noMatch: "D\u1EEF li\u1EC7u kh\xF4ng ph\xF9 h\u1EE3p",
      noData: "Kh\xF4ng t\xECm th\u1EA5y d\u1EEF li\u1EC7u",
      titles: ["Danh s\xE1ch 1", "Danh s\xE1ch 2"],
      filterPlaceholder: "Nh\u1EADp t\u1EEB kh\xF3a",
      noCheckedFormat: "{total} m\u1EE5c",
      hasCheckedFormat: "{checked}/{total} \u0111\xE3 ch\u1ECDn "
    },
    image: {
      error: "L\u1ED6I"
    },
    pageHeader: {
      title: "Quay l\u1EA1i"
    },
    popconfirm: {
      confirmButtonText: "Ok",
      cancelButtonText: "Hu\u1EF7"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"zh-cn.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/zh-cn.mjs                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => zhCn
});
var zhCn = {
  name: "zh-cn",
  el: {
    breadcrumb: {
      label: "\u9762\u5305\u5C51"
    },
    colorpicker: {
      confirm: "\u786E\u5B9A",
      clear: "\u6E05\u7A7A",
      defaultLabel: "\u989C\u8272\u9009\u62E9\u5668",
      description: "\u5F53\u524D\u989C\u8272 {color}\uFF0C\u6309 Enter \u952E\u9009\u62E9\u65B0\u989C\u8272",
      alphaLabel: "\u9009\u62E9\u900F\u660E\u5EA6\u7684\u503C"
    },
    datepicker: {
      now: "\u6B64\u523B",
      today: "\u4ECA\u5929",
      cancel: "\u53D6\u6D88",
      clear: "\u6E05\u7A7A",
      confirm: "\u786E\u5B9A",
      dateTablePrompt: "\u4F7F\u7528\u65B9\u5411\u952E\u4E0E Enter \u952E\u53EF\u9009\u62E9\u65E5\u671F",
      monthTablePrompt: "\u4F7F\u7528\u65B9\u5411\u952E\u4E0E Enter \u952E\u53EF\u9009\u62E9\u6708\u4EFD",
      yearTablePrompt: "\u4F7F\u7528\u65B9\u5411\u952E\u4E0E Enter \u952E\u53EF\u9009\u62E9\u5E74\u4EFD",
      selectedDate: "\u5DF2\u9009\u65E5\u671F",
      selectDate: "\u9009\u62E9\u65E5\u671F",
      selectTime: "\u9009\u62E9\u65F6\u95F4",
      startDate: "\u5F00\u59CB\u65E5\u671F",
      startTime: "\u5F00\u59CB\u65F6\u95F4",
      endDate: "\u7ED3\u675F\u65E5\u671F",
      endTime: "\u7ED3\u675F\u65F6\u95F4",
      prevYear: "\u524D\u4E00\u5E74",
      nextYear: "\u540E\u4E00\u5E74",
      prevMonth: "\u4E0A\u4E2A\u6708",
      nextMonth: "\u4E0B\u4E2A\u6708",
      year: "\u5E74",
      month1: "1 \u6708",
      month2: "2 \u6708",
      month3: "3 \u6708",
      month4: "4 \u6708",
      month5: "5 \u6708",
      month6: "6 \u6708",
      month7: "7 \u6708",
      month8: "8 \u6708",
      month9: "9 \u6708",
      month10: "10 \u6708",
      month11: "11 \u6708",
      month12: "12 \u6708",
      weeks: {
        sun: "\u65E5",
        mon: "\u4E00",
        tue: "\u4E8C",
        wed: "\u4E09",
        thu: "\u56DB",
        fri: "\u4E94",
        sat: "\u516D"
      },
      weeksFull: {
        sun: "\u661F\u671F\u65E5",
        mon: "\u661F\u671F\u4E00",
        tue: "\u661F\u671F\u4E8C",
        wed: "\u661F\u671F\u4E09",
        thu: "\u661F\u671F\u56DB",
        fri: "\u661F\u671F\u4E94",
        sat: "\u661F\u671F\u516D"
      },
      months: {
        jan: "\u4E00\u6708",
        feb: "\u4E8C\u6708",
        mar: "\u4E09\u6708",
        apr: "\u56DB\u6708",
        may: "\u4E94\u6708",
        jun: "\u516D\u6708",
        jul: "\u4E03\u6708",
        aug: "\u516B\u6708",
        sep: "\u4E5D\u6708",
        oct: "\u5341\u6708",
        nov: "\u5341\u4E00\u6708",
        dec: "\u5341\u4E8C\u6708"
      }
    },
    inputNumber: {
      decrease: "\u51CF\u5C11\u6570\u503C",
      increase: "\u589E\u52A0\u6570\u503C"
    },
    select: {
      loading: "\u52A0\u8F7D\u4E2D",
      noMatch: "\u65E0\u5339\u914D\u6570\u636E",
      noData: "\u65E0\u6570\u636E",
      placeholder: "\u8BF7\u9009\u62E9"
    },
    dropdown: {
      toggleDropdown: "\u5207\u6362\u4E0B\u62C9\u9009\u9879"
    },
    mention: {
      loading: "\u52A0\u8F7D\u4E2D"
    },
    cascader: {
      noMatch: "\u65E0\u5339\u914D\u6570\u636E",
      loading: "\u52A0\u8F7D\u4E2D",
      placeholder: "\u8BF7\u9009\u62E9",
      noData: "\u6682\u65E0\u6570\u636E"
    },
    pagination: {
      goto: "\u524D\u5F80",
      pagesize: "\u6761/\u9875",
      total: "\u5171 {total} \u6761",
      pageClassifier: "\u9875",
      page: "\u9875",
      prev: "\u4E0A\u4E00\u9875",
      next: "\u4E0B\u4E00\u9875",
      currentPage: "\u7B2C {pager} \u9875",
      prevPages: "\u5411\u524D {pager} \u9875",
      nextPages: "\u5411\u540E {pager} \u9875",
      deprecationWarning: "\u4F60\u4F7F\u7528\u4E86\u4E00\u4E9B\u5DF2\u88AB\u5E9F\u5F03\u7684\u7528\u6CD5\uFF0C\u8BF7\u53C2\u8003 el-pagination \u7684\u5B98\u65B9\u6587\u6863"
    },
    dialog: {
      close: "\u5173\u95ED\u6B64\u5BF9\u8BDD\u6846"
    },
    drawer: {
      close: "\u5173\u95ED\u6B64\u5BF9\u8BDD\u6846"
    },
    messagebox: {
      title: "\u63D0\u793A",
      confirm: "\u786E\u5B9A",
      cancel: "\u53D6\u6D88",
      error: "\u8F93\u5165\u7684\u6570\u636E\u4E0D\u5408\u6CD5!",
      close: "\u5173\u95ED\u6B64\u5BF9\u8BDD\u6846"
    },
    upload: {
      deleteTip: "\u6309 delete \u952E\u53EF\u5220\u9664",
      delete: "\u5220\u9664",
      preview: "\u67E5\u770B\u56FE\u7247",
      continue: "\u7EE7\u7EED\u4E0A\u4F20"
    },
    slider: {
      defaultLabel: "\u6ED1\u5757\u4ECB\u4E8E {min} \u81F3 {max}",
      defaultRangeStartLabel: "\u9009\u62E9\u8D77\u59CB\u503C",
      defaultRangeEndLabel: "\u9009\u62E9\u7ED3\u675F\u503C"
    },
    table: {
      emptyText: "\u6682\u65E0\u6570\u636E",
      confirmFilter: "\u7B5B\u9009",
      resetFilter: "\u91CD\u7F6E",
      clearFilter: "\u5168\u90E8",
      sumText: "\u5408\u8BA1"
    },
    tour: {
      next: "\u4E0B\u4E00\u6B65",
      previous: "\u4E0A\u4E00\u6B65",
      finish: "\u7ED3\u675F\u5BFC\u89C8"
    },
    tree: {
      emptyText: "\u6682\u65E0\u6570\u636E"
    },
    transfer: {
      noMatch: "\u65E0\u5339\u914D\u6570\u636E",
      noData: "\u65E0\u6570\u636E",
      titles: ["\u5217\u8868 1", "\u5217\u8868 2"],
      filterPlaceholder: "\u8BF7\u8F93\u5165\u641C\u7D22\u5185\u5BB9",
      noCheckedFormat: "\u5171 {total} \u9879",
      hasCheckedFormat: "\u5DF2\u9009 {checked}/{total} \u9879"
    },
    image: {
      error: "\u52A0\u8F7D\u5931\u8D25"
    },
    pageHeader: {
      title: "\u8FD4\u56DE"
    },
    popconfirm: {
      confirmButtonText: "\u786E\u5B9A",
      cancelButtonText: "\u53D6\u6D88"
    },
    carousel: {
      leftArrow: "\u4E0A\u4E00\u5F20\u5E7B\u706F\u7247",
      rightArrow: "\u4E0B\u4E00\u5F20\u5E7B\u706F\u7247",
      indicator: "\u5E7B\u706F\u7247\u5207\u6362\u81F3\u7D22\u5F15 {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"zh-tw.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locale/lang/zh-tw.mjs                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => zhTw
});
var zhTw = {
  name: "zh-tw",
  el: {
    breadcrumb: {
      label: "\u9762\u5305\u5C51"
    },
    colorpicker: {
      confirm: "\u78BA\u8A8D",
      clear: "\u6E05\u7A7A",
      defaultLabel: "\u8272\u5F69\u9078\u64C7\u5668",
      description: "\u76EE\u524D\u8272\u5F69\u70BA {color}\u3002\u6309\u4E00\u4E0B Enter \u4EE5\u9078\u64C7\u65B0\u8272\u5F69\u3002",
      alphaLabel: "\u9078\u64C7\u900F\u660E\u5EA6\u7684\u503C"
    },
    datepicker: {
      now: "\u73FE\u5728",
      today: "\u4ECA\u5929",
      cancel: "\u53D6\u6D88",
      clear: "\u6E05\u7A7A",
      confirm: "\u78BA\u8A8D",
      dateTablePrompt: "\u4F7F\u7528\u65B9\u5411\u9375\u8207 Enter \u9375\u4EE5\u9078\u64C7\u65E5\u671F",
      monthTablePrompt: "\u4F7F\u7528\u65B9\u5411\u9375\u8207 Enter \u9375\u4EE5\u9078\u64C7\u6708\u4EFD",
      yearTablePrompt: "\u4F7F\u7528\u65B9\u5411\u9375\u8207 Enter \u9375\u4EE5\u9078\u64C7\u5E74\u4EFD",
      selectedDate: "\u5DF2\u9078\u65E5\u671F",
      selectDate: "\u9078\u64C7\u65E5\u671F",
      selectTime: "\u9078\u64C7\u6642\u9593",
      startDate: "\u958B\u59CB\u65E5\u671F",
      startTime: "\u958B\u59CB\u6642\u9593",
      endDate: "\u7D50\u675F\u65E5\u671F",
      endTime: "\u7D50\u675F\u6642\u9593",
      prevYear: "\u524D\u4E00\u5E74",
      nextYear: "\u5F8C\u4E00\u5E74",
      prevMonth: "\u4E0A\u500B\u6708",
      nextMonth: "\u4E0B\u500B\u6708",
      year: "\u5E74",
      month1: "1 \u6708",
      month2: "2 \u6708",
      month3: "3 \u6708",
      month4: "4 \u6708",
      month5: "5 \u6708",
      month6: "6 \u6708",
      month7: "7 \u6708",
      month8: "8 \u6708",
      month9: "9 \u6708",
      month10: "10 \u6708",
      month11: "11 \u6708",
      month12: "12 \u6708",
      weeks: {
        sun: "\u65E5",
        mon: "\u4E00",
        tue: "\u4E8C",
        wed: "\u4E09",
        thu: "\u56DB",
        fri: "\u4E94",
        sat: "\u516D"
      },
      weeksFull: {
        sun: "\u661F\u671F\u65E5",
        mon: "\u661F\u671F\u4E00",
        tue: "\u661F\u671F\u4E8C",
        wed: "\u661F\u671F\u4E09",
        thu: "\u661F\u671F\u56DB",
        fri: "\u661F\u671F\u4E94",
        sat: "\u661F\u671F\u516D"
      },
      months: {
        jan: "\u4E00\u6708",
        feb: "\u4E8C\u6708",
        mar: "\u4E09\u6708",
        apr: "\u56DB\u6708",
        may: "\u4E94\u6708",
        jun: "\u516D\u6708",
        jul: "\u4E03\u6708",
        aug: "\u516B\u6708",
        sep: "\u4E5D\u6708",
        oct: "\u5341\u6708",
        nov: "\u5341\u4E00\u6708",
        dec: "\u5341\u4E8C\u6708"
      }
    },
    inputNumber: {
      decrease: "\u6E1B\u5C11\u6578\u503C",
      increase: "\u589E\u52A0\u6578\u503C"
    },
    select: {
      loading: "\u8F09\u5165\u4E2D",
      noMatch: "\u7121\u76F8\u7B26\u8CC7\u6599",
      noData: "\u7121\u8CC7\u6599",
      placeholder: "\u8ACB\u9078\u64C7"
    },
    mention: {
      loading: "\u8F09\u5165\u4E2D"
    },
    dropdown: {
      toggleDropdown: "\u5207\u63DB\u4E0B\u62C9\u9078\u55AE"
    },
    cascader: {
      noMatch: "\u7121\u76F8\u7B26\u8CC7\u6599",
      loading: "\u8F09\u5165\u4E2D",
      placeholder: "\u8ACB\u9078\u64C7",
      noData: "\u7121\u8CC7\u6599"
    },
    pagination: {
      goto: "\u524D\u5F80",
      pagesize: "\u9805/\u9801",
      total: "\u5171 {total} \u9805",
      pageClassifier: "\u9801",
      page: "\u9801",
      prev: "\u4E0A\u4E00\u9801",
      next: "\u4E0B\u4E00\u9801",
      currentPage: "\u7B2C {pager} \u9801",
      prevPages: "\u5411\u524D {pager} \u9801",
      nextPages: "\u5411\u5F8C {pager} \u9801",
      deprecationWarning: "\u5075\u6E2C\u5230\u5DF2\u904E\u6642\u7684\u4F7F\u7528\u65B9\u5F0F\uFF0C\u8ACB\u53C3\u95B1 el-pagination \u8AAA\u660E\u6587\u4EF6\u4EE5\u4E86\u89E3\u66F4\u591A\u8CC7\u8A0A"
    },
    dialog: {
      close: "\u95DC\u9589\u6B64\u5C0D\u8A71\u6846"
    },
    drawer: {
      close: "\u95DC\u9589\u6B64\u5C0D\u8A71\u6846"
    },
    messagebox: {
      title: "\u63D0\u793A",
      confirm: "\u78BA\u5B9A",
      cancel: "\u53D6\u6D88",
      error: "\u8F38\u5165\u7684\u8CC7\u6599\u4E0D\u7B26\u898F\u5B9A!",
      close: "\u95DC\u9589\u6B64\u5C0D\u8A71\u6846"
    },
    upload: {
      deleteTip: "\u6309\u4E00\u4E0B Delete \u9375\u4EE5\u522A\u9664",
      delete: "\u522A\u9664",
      preview: "\u67E5\u770B\u5716\u7247",
      continue: "\u7E7C\u7E8C\u4E0A\u50B3"
    },
    slider: {
      defaultLabel: "\u6ED1\u687F\u4ECB\u65BC {min} \u81F3 {max}",
      defaultRangeStartLabel: "\u9078\u64C7\u8D77\u59CB\u503C",
      defaultRangeEndLabel: "\u9078\u64C7\u7D50\u675F\u503C"
    },
    table: {
      emptyText: "\u66AB\u7121\u8CC7\u6599",
      confirmFilter: "\u7BE9\u9078",
      resetFilter: "\u91CD\u7F6E",
      clearFilter: "\u5168\u90E8",
      sumText: "\u5408\u8A08"
    },
    tour: {
      next: "\u4E0B\u4E00\u6B65",
      previous: "\u4E0A\u4E00\u6B65",
      finish: "\u7D50\u675F\u5C0E\u89BD"
    },
    tree: {
      emptyText: "\u66AB\u7121\u8CC7\u6599"
    },
    transfer: {
      noMatch: "\u7121\u76F8\u7B26\u8CC7\u6599",
      noData: "\u7121\u8CC7\u6599",
      titles: ["\u5217\u8868 1", "\u5217\u8868 2"],
      filterPlaceholder: "\u8ACB\u8F38\u5165\u641C\u5C0B\u5167\u5BB9",
      noCheckedFormat: "\u5171 {total} \u9805",
      hasCheckedFormat: "\u5DF2\u9078 {checked}/{total} \u9805"
    },
    image: {
      error: "\u8F09\u5165\u5931\u6557"
    },
    pageHeader: {
      title: "\u8FD4\u56DE"
    },
    popconfirm: {
      confirmButtonText: "\u78BA\u8A8D",
      cancelButtonText: "\u53D6\u6D88"
    },
    carousel: {
      leftArrow: "\u4E0A\u4E00\u5F35\u6295\u5F71\u7247",
      rightArrow: "\u4E0B\u4E00\u5F35\u6295\u5F71\u7247",
      indicator: "\u6295\u5F71\u7247\u5207\u63DB\u81F3\u7D22\u5F15 {index}"
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"locales.mjs":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/element-plus/es/locales.mjs                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {
  "use strict";
  try {
    module.link("./locale/lang/af.mjs", {
      default: "af"
    }, 0);
    module.link("./locale/lang/ar.mjs", {
      default: "ar"
    }, 1);
    module.link("./locale/lang/az.mjs", {
      default: "az"
    }, 2);
    module.link("./locale/lang/bg.mjs", {
      default: "bg"
    }, 3);
    module.link("./locale/lang/bn.mjs", {
      default: "bn"
    }, 4);
    module.link("./locale/lang/ca.mjs", {
      default: "ca"
    }, 5);
    module.link("./locale/lang/cs.mjs", {
      default: "cs"
    }, 6);
    module.link("./locale/lang/da.mjs", {
      default: "da"
    }, 7);
    module.link("./locale/lang/de.mjs", {
      default: "de"
    }, 8);
    module.link("./locale/lang/el.mjs", {
      default: "el"
    }, 9);
    module.link("./locale/lang/en.mjs", {
      default: "en"
    }, 10);
    module.link("./locale/lang/eo.mjs", {
      default: "eo"
    }, 11);
    module.link("./locale/lang/es.mjs", {
      default: "es"
    }, 12);
    module.link("./locale/lang/et.mjs", {
      default: "et"
    }, 13);
    module.link("./locale/lang/eu.mjs", {
      default: "eu"
    }, 14);
    module.link("./locale/lang/fa.mjs", {
      default: "fa"
    }, 15);
    module.link("./locale/lang/fi.mjs", {
      default: "fi"
    }, 16);
    module.link("./locale/lang/fr.mjs", {
      default: "fr"
    }, 17);
    module.link("./locale/lang/he.mjs", {
      default: "he"
    }, 18);
    module.link("./locale/lang/hr.mjs", {
      default: "hr"
    }, 19);
    module.link("./locale/lang/hu.mjs", {
      default: "hu"
    }, 20);
    module.link("./locale/lang/hy-am.mjs", {
      default: "hyAm"
    }, 21);
    module.link("./locale/lang/id.mjs", {
      default: "id"
    }, 22);
    module.link("./locale/lang/it.mjs", {
      default: "it"
    }, 23);
    module.link("./locale/lang/ja.mjs", {
      default: "ja"
    }, 24);
    module.link("./locale/lang/kk.mjs", {
      default: "kk"
    }, 25);
    module.link("./locale/lang/km.mjs", {
      default: "km"
    }, 26);
    module.link("./locale/lang/ko.mjs", {
      default: "ko"
    }, 27);
    module.link("./locale/lang/ku.mjs", {
      default: "ku"
    }, 28);
    module.link("./locale/lang/ky.mjs", {
      default: "ky"
    }, 29);
    module.link("./locale/lang/lt.mjs", {
      default: "lt"
    }, 30);
    module.link("./locale/lang/lv.mjs", {
      default: "lv"
    }, 31);
    module.link("./locale/lang/mn.mjs", {
      default: "mn"
    }, 32);
    module.link("./locale/lang/my.mjs", {
      default: "my"
    }, 33);
    module.link("./locale/lang/nb-no.mjs", {
      default: "nbNo"
    }, 34);
    module.link("./locale/lang/nl.mjs", {
      default: "nl"
    }, 35);
    module.link("./locale/lang/pa.mjs", {
      default: "pa"
    }, 36);
    module.link("./locale/lang/pl.mjs", {
      default: "pl"
    }, 37);
    module.link("./locale/lang/pt-br.mjs", {
      default: "ptBr"
    }, 38);
    module.link("./locale/lang/pt.mjs", {
      default: "pt"
    }, 39);
    module.link("./locale/lang/ro.mjs", {
      default: "ro"
    }, 40);
    module.link("./locale/lang/ru.mjs", {
      default: "ru"
    }, 41);
    module.link("./locale/lang/sk.mjs", {
      default: "sk"
    }, 42);
    module.link("./locale/lang/sl.mjs", {
      default: "sl"
    }, 43);
    module.link("./locale/lang/sr.mjs", {
      default: "sr"
    }, 44);
    module.link("./locale/lang/sv.mjs", {
      default: "sv"
    }, 45);
    module.link("./locale/lang/ta.mjs", {
      default: "ta"
    }, 46);
    module.link("./locale/lang/th.mjs", {
      default: "th"
    }, 47);
    module.link("./locale/lang/tk.mjs", {
      default: "tk"
    }, 48);
    module.link("./locale/lang/tr.mjs", {
      default: "tr"
    }, 49);
    module.link("./locale/lang/ug-cn.mjs", {
      default: "ugCn"
    }, 50);
    module.link("./locale/lang/uk.mjs", {
      default: "uk"
    }, 51);
    module.link("./locale/lang/uz-uz.mjs", {
      default: "uzUz"
    }, 52);
    module.link("./locale/lang/vi.mjs", {
      default: "vi"
    }, 53);
    module.link("./locale/lang/zh-cn.mjs", {
      default: "zhCn"
    }, 54);
    module.link("./locale/lang/zh-tw.mjs", {
      default: "zhTw"
    }, 55);
    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();
    __reify_async_result__();
  } catch (_reifyError) {
    return __reify_async_result__(_reifyError);
  }
  __reify_async_result__()
}, {
  self: this,
  async: false
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"@babel":{"runtime":{"helpers":{"objectSpread2.js":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/@babel/runtime/helpers/objectSpread2.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.useNode();
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"objectWithoutProperties.js":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/@babel/runtime/helpers/objectWithoutProperties.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.useNode();
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"asyncIterator.js":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/@babel/runtime/helpers/asyncIterator.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.useNode();
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"package.json":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/@babel/runtime/package.json                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = {
  "name": "@babel/runtime",
  "version": "7.26.0",
  "description": "babel's modular runtime helpers",
  "license": "MIT",
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel.git",
    "directory": "packages/babel-runtime"
  },
  "homepage": "https://babel.dev/docs/en/next/babel-runtime",
  "author": "The Babel Team (https://babel.dev/team)",
  "dependencies": {
    "regenerator-runtime": "^0.14.0"
  },
  "exports": {
    "./helpers/OverloadYield": [
      {
        "node": "./helpers/OverloadYield.js",
        "import": "./helpers/esm/OverloadYield.js",
        "default": "./helpers/OverloadYield.js"
      },
      "./helpers/OverloadYield.js"
    ],
    "./helpers/esm/OverloadYield": "./helpers/esm/OverloadYield.js",
    "./helpers/applyDecoratedDescriptor": [
      {
        "node": "./helpers/applyDecoratedDescriptor.js",
        "import": "./helpers/esm/applyDecoratedDescriptor.js",
        "default": "./helpers/applyDecoratedDescriptor.js"
      },
      "./helpers/applyDecoratedDescriptor.js"
    ],
    "./helpers/esm/applyDecoratedDescriptor": "./helpers/esm/applyDecoratedDescriptor.js",
    "./helpers/applyDecs2311": [
      {
        "node": "./helpers/applyDecs2311.js",
        "import": "./helpers/esm/applyDecs2311.js",
        "default": "./helpers/applyDecs2311.js"
      },
      "./helpers/applyDecs2311.js"
    ],
    "./helpers/esm/applyDecs2311": "./helpers/esm/applyDecs2311.js",
    "./helpers/arrayLikeToArray": [
      {
        "node": "./helpers/arrayLikeToArray.js",
        "import": "./helpers/esm/arrayLikeToArray.js",
        "default": "./helpers/arrayLikeToArray.js"
      },
      "./helpers/arrayLikeToArray.js"
    ],
    "./helpers/esm/arrayLikeToArray": "./helpers/esm/arrayLikeToArray.js",
    "./helpers/arrayWithHoles": [
      {
        "node": "./helpers/arrayWithHoles.js",
        "import": "./helpers/esm/arrayWithHoles.js",
        "default": "./helpers/arrayWithHoles.js"
      },
      "./helpers/arrayWithHoles.js"
    ],
    "./helpers/esm/arrayWithHoles": "./helpers/esm/arrayWithHoles.js",
    "./helpers/arrayWithoutHoles": [
      {
        "node": "./helpers/arrayWithoutHoles.js",
        "import": "./helpers/esm/arrayWithoutHoles.js",
        "default": "./helpers/arrayWithoutHoles.js"
      },
      "./helpers/arrayWithoutHoles.js"
    ],
    "./helpers/esm/arrayWithoutHoles": "./helpers/esm/arrayWithoutHoles.js",
    "./helpers/assertClassBrand": [
      {
        "node": "./helpers/assertClassBrand.js",
        "import": "./helpers/esm/assertClassBrand.js",
        "default": "./helpers/assertClassBrand.js"
      },
      "./helpers/assertClassBrand.js"
    ],
    "./helpers/esm/assertClassBrand": "./helpers/esm/assertClassBrand.js",
    "./helpers/assertThisInitialized": [
      {
        "node": "./helpers/assertThisInitialized.js",
        "import": "./helpers/esm/assertThisInitialized.js",
        "default": "./helpers/assertThisInitialized.js"
      },
      "./helpers/assertThisInitialized.js"
    ],
    "./helpers/esm/assertThisInitialized": "./helpers/esm/assertThisInitialized.js",
    "./helpers/asyncGeneratorDelegate": [
      {
        "node": "./helpers/asyncGeneratorDelegate.js",
        "import": "./helpers/esm/asyncGeneratorDelegate.js",
        "default": "./helpers/asyncGeneratorDelegate.js"
      },
      "./helpers/asyncGeneratorDelegate.js"
    ],
    "./helpers/esm/asyncGeneratorDelegate": "./helpers/esm/asyncGeneratorDelegate.js",
    "./helpers/asyncIterator": [
      {
        "node": "./helpers/asyncIterator.js",
        "import": "./helpers/esm/asyncIterator.js",
        "default": "./helpers/asyncIterator.js"
      },
      "./helpers/asyncIterator.js"
    ],
    "./helpers/esm/asyncIterator": "./helpers/esm/asyncIterator.js",
    "./helpers/asyncToGenerator": [
      {
        "node": "./helpers/asyncToGenerator.js",
        "import": "./helpers/esm/asyncToGenerator.js",
        "default": "./helpers/asyncToGenerator.js"
      },
      "./helpers/asyncToGenerator.js"
    ],
    "./helpers/esm/asyncToGenerator": "./helpers/esm/asyncToGenerator.js",
    "./helpers/awaitAsyncGenerator": [
      {
        "node": "./helpers/awaitAsyncGenerator.js",
        "import": "./helpers/esm/awaitAsyncGenerator.js",
        "default": "./helpers/awaitAsyncGenerator.js"
      },
      "./helpers/awaitAsyncGenerator.js"
    ],
    "./helpers/esm/awaitAsyncGenerator": "./helpers/esm/awaitAsyncGenerator.js",
    "./helpers/callSuper": [
      {
        "node": "./helpers/callSuper.js",
        "import": "./helpers/esm/callSuper.js",
        "default": "./helpers/callSuper.js"
      },
      "./helpers/callSuper.js"
    ],
    "./helpers/esm/callSuper": "./helpers/esm/callSuper.js",
    "./helpers/checkInRHS": [
      {
        "node": "./helpers/checkInRHS.js",
        "import": "./helpers/esm/checkInRHS.js",
        "default": "./helpers/checkInRHS.js"
      },
      "./helpers/checkInRHS.js"
    ],
    "./helpers/esm/checkInRHS": "./helpers/esm/checkInRHS.js",
    "./helpers/checkPrivateRedeclaration": [
      {
        "node": "./helpers/checkPrivateRedeclaration.js",
        "import": "./helpers/esm/checkPrivateRedeclaration.js",
        "default": "./helpers/checkPrivateRedeclaration.js"
      },
      "./helpers/checkPrivateRedeclaration.js"
    ],
    "./helpers/esm/checkPrivateRedeclaration": "./helpers/esm/checkPrivateRedeclaration.js",
    "./helpers/classCallCheck": [
      {
        "node": "./helpers/classCallCheck.js",
        "import": "./helpers/esm/classCallCheck.js",
        "default": "./helpers/classCallCheck.js"
      },
      "./helpers/classCallCheck.js"
    ],
    "./helpers/esm/classCallCheck": "./helpers/esm/classCallCheck.js",
    "./helpers/classNameTDZError": [
      {
        "node": "./helpers/classNameTDZError.js",
        "import": "./helpers/esm/classNameTDZError.js",
        "default": "./helpers/classNameTDZError.js"
      },
      "./helpers/classNameTDZError.js"
    ],
    "./helpers/esm/classNameTDZError": "./helpers/esm/classNameTDZError.js",
    "./helpers/classPrivateFieldGet2": [
      {
        "node": "./helpers/classPrivateFieldGet2.js",
        "import": "./helpers/esm/classPrivateFieldGet2.js",
        "default": "./helpers/classPrivateFieldGet2.js"
      },
      "./helpers/classPrivateFieldGet2.js"
    ],
    "./helpers/esm/classPrivateFieldGet2": "./helpers/esm/classPrivateFieldGet2.js",
    "./helpers/classPrivateFieldInitSpec": [
      {
        "node": "./helpers/classPrivateFieldInitSpec.js",
        "import": "./helpers/esm/classPrivateFieldInitSpec.js",
        "default": "./helpers/classPrivateFieldInitSpec.js"
      },
      "./helpers/classPrivateFieldInitSpec.js"
    ],
    "./helpers/esm/classPrivateFieldInitSpec": "./helpers/esm/classPrivateFieldInitSpec.js",
    "./helpers/classPrivateFieldLooseBase": [
      {
        "node": "./helpers/classPrivateFieldLooseBase.js",
        "import": "./helpers/esm/classPrivateFieldLooseBase.js",
        "default": "./helpers/classPrivateFieldLooseBase.js"
      },
      "./helpers/classPrivateFieldLooseBase.js"
    ],
    "./helpers/esm/classPrivateFieldLooseBase": "./helpers/esm/classPrivateFieldLooseBase.js",
    "./helpers/classPrivateFieldLooseKey": [
      {
        "node": "./helpers/classPrivateFieldLooseKey.js",
        "import": "./helpers/esm/classPrivateFieldLooseKey.js",
        "default": "./helpers/classPrivateFieldLooseKey.js"
      },
      "./helpers/classPrivateFieldLooseKey.js"
    ],
    "./helpers/esm/classPrivateFieldLooseKey": "./helpers/esm/classPrivateFieldLooseKey.js",
    "./helpers/classPrivateFieldSet2": [
      {
        "node": "./helpers/classPrivateFieldSet2.js",
        "import": "./helpers/esm/classPrivateFieldSet2.js",
        "default": "./helpers/classPrivateFieldSet2.js"
      },
      "./helpers/classPrivateFieldSet2.js"
    ],
    "./helpers/esm/classPrivateFieldSet2": "./helpers/esm/classPrivateFieldSet2.js",
    "./helpers/classPrivateGetter": [
      {
        "node": "./helpers/classPrivateGetter.js",
        "import": "./helpers/esm/classPrivateGetter.js",
        "default": "./helpers/classPrivateGetter.js"
      },
      "./helpers/classPrivateGetter.js"
    ],
    "./helpers/esm/classPrivateGetter": "./helpers/esm/classPrivateGetter.js",
    "./helpers/classPrivateMethodInitSpec": [
      {
        "node": "./helpers/classPrivateMethodInitSpec.js",
        "import": "./helpers/esm/classPrivateMethodInitSpec.js",
        "default": "./helpers/classPrivateMethodInitSpec.js"
      },
      "./helpers/classPrivateMethodInitSpec.js"
    ],
    "./helpers/esm/classPrivateMethodInitSpec": "./helpers/esm/classPrivateMethodInitSpec.js",
    "./helpers/classPrivateSetter": [
      {
        "node": "./helpers/classPrivateSetter.js",
        "import": "./helpers/esm/classPrivateSetter.js",
        "default": "./helpers/classPrivateSetter.js"
      },
      "./helpers/classPrivateSetter.js"
    ],
    "./helpers/esm/classPrivateSetter": "./helpers/esm/classPrivateSetter.js",
    "./helpers/classStaticPrivateMethodGet": [
      {
        "node": "./helpers/classStaticPrivateMethodGet.js",
        "import": "./helpers/esm/classStaticPrivateMethodGet.js",
        "default": "./helpers/classStaticPrivateMethodGet.js"
      },
      "./helpers/classStaticPrivateMethodGet.js"
    ],
    "./helpers/esm/classStaticPrivateMethodGet": "./helpers/esm/classStaticPrivateMethodGet.js",
    "./helpers/construct": [
      {
        "node": "./helpers/construct.js",
        "import": "./helpers/esm/construct.js",
        "default": "./helpers/construct.js"
      },
      "./helpers/construct.js"
    ],
    "./helpers/esm/construct": "./helpers/esm/construct.js",
    "./helpers/createClass": [
      {
        "node": "./helpers/createClass.js",
        "import": "./helpers/esm/createClass.js",
        "default": "./helpers/createClass.js"
      },
      "./helpers/createClass.js"
    ],
    "./helpers/esm/createClass": "./helpers/esm/createClass.js",
    "./helpers/createForOfIteratorHelper": [
      {
        "node": "./helpers/createForOfIteratorHelper.js",
        "import": "./helpers/esm/createForOfIteratorHelper.js",
        "default": "./helpers/createForOfIteratorHelper.js"
      },
      "./helpers/createForOfIteratorHelper.js"
    ],
    "./helpers/esm/createForOfIteratorHelper": "./helpers/esm/createForOfIteratorHelper.js",
    "./helpers/createForOfIteratorHelperLoose": [
      {
        "node": "./helpers/createForOfIteratorHelperLoose.js",
        "import": "./helpers/esm/createForOfIteratorHelperLoose.js",
        "default": "./helpers/createForOfIteratorHelperLoose.js"
      },
      "./helpers/createForOfIteratorHelperLoose.js"
    ],
    "./helpers/esm/createForOfIteratorHelperLoose": "./helpers/esm/createForOfIteratorHelperLoose.js",
    "./helpers/createSuper": [
      {
        "node": "./helpers/createSuper.js",
        "import": "./helpers/esm/createSuper.js",
        "default": "./helpers/createSuper.js"
      },
      "./helpers/createSuper.js"
    ],
    "./helpers/esm/createSuper": "./helpers/esm/createSuper.js",
    "./helpers/decorate": [
      {
        "node": "./helpers/decorate.js",
        "import": "./helpers/esm/decorate.js",
        "default": "./helpers/decorate.js"
      },
      "./helpers/decorate.js"
    ],
    "./helpers/esm/decorate": "./helpers/esm/decorate.js",
    "./helpers/defaults": [
      {
        "node": "./helpers/defaults.js",
        "import": "./helpers/esm/defaults.js",
        "default": "./helpers/defaults.js"
      },
      "./helpers/defaults.js"
    ],
    "./helpers/esm/defaults": "./helpers/esm/defaults.js",
    "./helpers/defineAccessor": [
      {
        "node": "./helpers/defineAccessor.js",
        "import": "./helpers/esm/defineAccessor.js",
        "default": "./helpers/defineAccessor.js"
      },
      "./helpers/defineAccessor.js"
    ],
    "./helpers/esm/defineAccessor": "./helpers/esm/defineAccessor.js",
    "./helpers/defineProperty": [
      {
        "node": "./helpers/defineProperty.js",
        "import": "./helpers/esm/defineProperty.js",
        "default": "./helpers/defineProperty.js"
      },
      "./helpers/defineProperty.js"
    ],
    "./helpers/esm/defineProperty": "./helpers/esm/defineProperty.js",
    "./helpers/extends": [
      {
        "node": "./helpers/extends.js",
        "import": "./helpers/esm/extends.js",
        "default": "./helpers/extends.js"
      },
      "./helpers/extends.js"
    ],
    "./helpers/esm/extends": "./helpers/esm/extends.js",
    "./helpers/get": [
      {
        "node": "./helpers/get.js",
        "import": "./helpers/esm/get.js",
        "default": "./helpers/get.js"
      },
      "./helpers/get.js"
    ],
    "./helpers/esm/get": "./helpers/esm/get.js",
    "./helpers/getPrototypeOf": [
      {
        "node": "./helpers/getPrototypeOf.js",
        "import": "./helpers/esm/getPrototypeOf.js",
        "default": "./helpers/getPrototypeOf.js"
      },
      "./helpers/getPrototypeOf.js"
    ],
    "./helpers/esm/getPrototypeOf": "./helpers/esm/getPrototypeOf.js",
    "./helpers/identity": [
      {
        "node": "./helpers/identity.js",
        "import": "./helpers/esm/identity.js",
        "default": "./helpers/identity.js"
      },
      "./helpers/identity.js"
    ],
    "./helpers/esm/identity": "./helpers/esm/identity.js",
    "./helpers/importDeferProxy": [
      {
        "node": "./helpers/importDeferProxy.js",
        "import": "./helpers/esm/importDeferProxy.js",
        "default": "./helpers/importDeferProxy.js"
      },
      "./helpers/importDeferProxy.js"
    ],
    "./helpers/esm/importDeferProxy": "./helpers/esm/importDeferProxy.js",
    "./helpers/inherits": [
      {
        "node": "./helpers/inherits.js",
        "import": "./helpers/esm/inherits.js",
        "default": "./helpers/inherits.js"
      },
      "./helpers/inherits.js"
    ],
    "./helpers/esm/inherits": "./helpers/esm/inherits.js",
    "./helpers/inheritsLoose": [
      {
        "node": "./helpers/inheritsLoose.js",
        "import": "./helpers/esm/inheritsLoose.js",
        "default": "./helpers/inheritsLoose.js"
      },
      "./helpers/inheritsLoose.js"
    ],
    "./helpers/esm/inheritsLoose": "./helpers/esm/inheritsLoose.js",
    "./helpers/initializerDefineProperty": [
      {
        "node": "./helpers/initializerDefineProperty.js",
        "import": "./helpers/esm/initializerDefineProperty.js",
        "default": "./helpers/initializerDefineProperty.js"
      },
      "./helpers/initializerDefineProperty.js"
    ],
    "./helpers/esm/initializerDefineProperty": "./helpers/esm/initializerDefineProperty.js",
    "./helpers/initializerWarningHelper": [
      {
        "node": "./helpers/initializerWarningHelper.js",
        "import": "./helpers/esm/initializerWarningHelper.js",
        "default": "./helpers/initializerWarningHelper.js"
      },
      "./helpers/initializerWarningHelper.js"
    ],
    "./helpers/esm/initializerWarningHelper": "./helpers/esm/initializerWarningHelper.js",
    "./helpers/instanceof": [
      {
        "node": "./helpers/instanceof.js",
        "import": "./helpers/esm/instanceof.js",
        "default": "./helpers/instanceof.js"
      },
      "./helpers/instanceof.js"
    ],
    "./helpers/esm/instanceof": "./helpers/esm/instanceof.js",
    "./helpers/interopRequireDefault": [
      {
        "node": "./helpers/interopRequireDefault.js",
        "import": "./helpers/esm/interopRequireDefault.js",
        "default": "./helpers/interopRequireDefault.js"
      },
      "./helpers/interopRequireDefault.js"
    ],
    "./helpers/esm/interopRequireDefault": "./helpers/esm/interopRequireDefault.js",
    "./helpers/interopRequireWildcard": [
      {
        "node": "./helpers/interopRequireWildcard.js",
        "import": "./helpers/esm/interopRequireWildcard.js",
        "default": "./helpers/interopRequireWildcard.js"
      },
      "./helpers/interopRequireWildcard.js"
    ],
    "./helpers/esm/interopRequireWildcard": "./helpers/esm/interopRequireWildcard.js",
    "./helpers/isNativeFunction": [
      {
        "node": "./helpers/isNativeFunction.js",
        "import": "./helpers/esm/isNativeFunction.js",
        "default": "./helpers/isNativeFunction.js"
      },
      "./helpers/isNativeFunction.js"
    ],
    "./helpers/esm/isNativeFunction": "./helpers/esm/isNativeFunction.js",
    "./helpers/isNativeReflectConstruct": [
      {
        "node": "./helpers/isNativeReflectConstruct.js",
        "import": "./helpers/esm/isNativeReflectConstruct.js",
        "default": "./helpers/isNativeReflectConstruct.js"
      },
      "./helpers/isNativeReflectConstruct.js"
    ],
    "./helpers/esm/isNativeReflectConstruct": "./helpers/esm/isNativeReflectConstruct.js",
    "./helpers/iterableToArray": [
      {
        "node": "./helpers/iterableToArray.js",
        "import": "./helpers/esm/iterableToArray.js",
        "default": "./helpers/iterableToArray.js"
      },
      "./helpers/iterableToArray.js"
    ],
    "./helpers/esm/iterableToArray": "./helpers/esm/iterableToArray.js",
    "./helpers/iterableToArrayLimit": [
      {
        "node": "./helpers/iterableToArrayLimit.js",
        "import": "./helpers/esm/iterableToArrayLimit.js",
        "default": "./helpers/iterableToArrayLimit.js"
      },
      "./helpers/iterableToArrayLimit.js"
    ],
    "./helpers/esm/iterableToArrayLimit": "./helpers/esm/iterableToArrayLimit.js",
    "./helpers/jsx": [
      {
        "node": "./helpers/jsx.js",
        "import": "./helpers/esm/jsx.js",
        "default": "./helpers/jsx.js"
      },
      "./helpers/jsx.js"
    ],
    "./helpers/esm/jsx": "./helpers/esm/jsx.js",
    "./helpers/maybeArrayLike": [
      {
        "node": "./helpers/maybeArrayLike.js",
        "import": "./helpers/esm/maybeArrayLike.js",
        "default": "./helpers/maybeArrayLike.js"
      },
      "./helpers/maybeArrayLike.js"
    ],
    "./helpers/esm/maybeArrayLike": "./helpers/esm/maybeArrayLike.js",
    "./helpers/newArrowCheck": [
      {
        "node": "./helpers/newArrowCheck.js",
        "import": "./helpers/esm/newArrowCheck.js",
        "default": "./helpers/newArrowCheck.js"
      },
      "./helpers/newArrowCheck.js"
    ],
    "./helpers/esm/newArrowCheck": "./helpers/esm/newArrowCheck.js",
    "./helpers/nonIterableRest": [
      {
        "node": "./helpers/nonIterableRest.js",
        "import": "./helpers/esm/nonIterableRest.js",
        "default": "./helpers/nonIterableRest.js"
      },
      "./helpers/nonIterableRest.js"
    ],
    "./helpers/esm/nonIterableRest": "./helpers/esm/nonIterableRest.js",
    "./helpers/nonIterableSpread": [
      {
        "node": "./helpers/nonIterableSpread.js",
        "import": "./helpers/esm/nonIterableSpread.js",
        "default": "./helpers/nonIterableSpread.js"
      },
      "./helpers/nonIterableSpread.js"
    ],
    "./helpers/esm/nonIterableSpread": "./helpers/esm/nonIterableSpread.js",
    "./helpers/nullishReceiverError": [
      {
        "node": "./helpers/nullishReceiverError.js",
        "import": "./helpers/esm/nullishReceiverError.js",
        "default": "./helpers/nullishReceiverError.js"
      },
      "./helpers/nullishReceiverError.js"
    ],
    "./helpers/esm/nullishReceiverError": "./helpers/esm/nullishReceiverError.js",
    "./helpers/objectDestructuringEmpty": [
      {
        "node": "./helpers/objectDestructuringEmpty.js",
        "import": "./helpers/esm/objectDestructuringEmpty.js",
        "default": "./helpers/objectDestructuringEmpty.js"
      },
      "./helpers/objectDestructuringEmpty.js"
    ],
    "./helpers/esm/objectDestructuringEmpty": "./helpers/esm/objectDestructuringEmpty.js",
    "./helpers/objectSpread2": [
      {
        "node": "./helpers/objectSpread2.js",
        "import": "./helpers/esm/objectSpread2.js",
        "default": "./helpers/objectSpread2.js"
      },
      "./helpers/objectSpread2.js"
    ],
    "./helpers/esm/objectSpread2": "./helpers/esm/objectSpread2.js",
    "./helpers/objectWithoutProperties": [
      {
        "node": "./helpers/objectWithoutProperties.js",
        "import": "./helpers/esm/objectWithoutProperties.js",
        "default": "./helpers/objectWithoutProperties.js"
      },
      "./helpers/objectWithoutProperties.js"
    ],
    "./helpers/esm/objectWithoutProperties": "./helpers/esm/objectWithoutProperties.js",
    "./helpers/objectWithoutPropertiesLoose": [
      {
        "node": "./helpers/objectWithoutPropertiesLoose.js",
        "import": "./helpers/esm/objectWithoutPropertiesLoose.js",
        "default": "./helpers/objectWithoutPropertiesLoose.js"
      },
      "./helpers/objectWithoutPropertiesLoose.js"
    ],
    "./helpers/esm/objectWithoutPropertiesLoose": "./helpers/esm/objectWithoutPropertiesLoose.js",
    "./helpers/possibleConstructorReturn": [
      {
        "node": "./helpers/possibleConstructorReturn.js",
        "import": "./helpers/esm/possibleConstructorReturn.js",
        "default": "./helpers/possibleConstructorReturn.js"
      },
      "./helpers/possibleConstructorReturn.js"
    ],
    "./helpers/esm/possibleConstructorReturn": "./helpers/esm/possibleConstructorReturn.js",
    "./helpers/readOnlyError": [
      {
        "node": "./helpers/readOnlyError.js",
        "import": "./helpers/esm/readOnlyError.js",
        "default": "./helpers/readOnlyError.js"
      },
      "./helpers/readOnlyError.js"
    ],
    "./helpers/esm/readOnlyError": "./helpers/esm/readOnlyError.js",
    "./helpers/regeneratorRuntime": [
      {
        "node": "./helpers/regeneratorRuntime.js",
        "import": "./helpers/esm/regeneratorRuntime.js",
        "default": "./helpers/regeneratorRuntime.js"
      },
      "./helpers/regeneratorRuntime.js"
    ],
    "./helpers/esm/regeneratorRuntime": "./helpers/esm/regeneratorRuntime.js",
    "./helpers/set": [
      {
        "node": "./helpers/set.js",
        "import": "./helpers/esm/set.js",
        "default": "./helpers/set.js"
      },
      "./helpers/set.js"
    ],
    "./helpers/esm/set": "./helpers/esm/set.js",
    "./helpers/setFunctionName": [
      {
        "node": "./helpers/setFunctionName.js",
        "import": "./helpers/esm/setFunctionName.js",
        "default": "./helpers/setFunctionName.js"
      },
      "./helpers/setFunctionName.js"
    ],
    "./helpers/esm/setFunctionName": "./helpers/esm/setFunctionName.js",
    "./helpers/setPrototypeOf": [
      {
        "node": "./helpers/setPrototypeOf.js",
        "import": "./helpers/esm/setPrototypeOf.js",
        "default": "./helpers/setPrototypeOf.js"
      },
      "./helpers/setPrototypeOf.js"
    ],
    "./helpers/esm/setPrototypeOf": "./helpers/esm/setPrototypeOf.js",
    "./helpers/skipFirstGeneratorNext": [
      {
        "node": "./helpers/skipFirstGeneratorNext.js",
        "import": "./helpers/esm/skipFirstGeneratorNext.js",
        "default": "./helpers/skipFirstGeneratorNext.js"
      },
      "./helpers/skipFirstGeneratorNext.js"
    ],
    "./helpers/esm/skipFirstGeneratorNext": "./helpers/esm/skipFirstGeneratorNext.js",
    "./helpers/slicedToArray": [
      {
        "node": "./helpers/slicedToArray.js",
        "import": "./helpers/esm/slicedToArray.js",
        "default": "./helpers/slicedToArray.js"
      },
      "./helpers/slicedToArray.js"
    ],
    "./helpers/esm/slicedToArray": "./helpers/esm/slicedToArray.js",
    "./helpers/superPropBase": [
      {
        "node": "./helpers/superPropBase.js",
        "import": "./helpers/esm/superPropBase.js",
        "default": "./helpers/superPropBase.js"
      },
      "./helpers/superPropBase.js"
    ],
    "./helpers/esm/superPropBase": "./helpers/esm/superPropBase.js",
    "./helpers/superPropGet": [
      {
        "node": "./helpers/superPropGet.js",
        "import": "./helpers/esm/superPropGet.js",
        "default": "./helpers/superPropGet.js"
      },
      "./helpers/superPropGet.js"
    ],
    "./helpers/esm/superPropGet": "./helpers/esm/superPropGet.js",
    "./helpers/superPropSet": [
      {
        "node": "./helpers/superPropSet.js",
        "import": "./helpers/esm/superPropSet.js",
        "default": "./helpers/superPropSet.js"
      },
      "./helpers/superPropSet.js"
    ],
    "./helpers/esm/superPropSet": "./helpers/esm/superPropSet.js",
    "./helpers/taggedTemplateLiteral": [
      {
        "node": "./helpers/taggedTemplateLiteral.js",
        "import": "./helpers/esm/taggedTemplateLiteral.js",
        "default": "./helpers/taggedTemplateLiteral.js"
      },
      "./helpers/taggedTemplateLiteral.js"
    ],
    "./helpers/esm/taggedTemplateLiteral": "./helpers/esm/taggedTemplateLiteral.js",
    "./helpers/taggedTemplateLiteralLoose": [
      {
        "node": "./helpers/taggedTemplateLiteralLoose.js",
        "import": "./helpers/esm/taggedTemplateLiteralLoose.js",
        "default": "./helpers/taggedTemplateLiteralLoose.js"
      },
      "./helpers/taggedTemplateLiteralLoose.js"
    ],
    "./helpers/esm/taggedTemplateLiteralLoose": "./helpers/esm/taggedTemplateLiteralLoose.js",
    "./helpers/tdz": [
      {
        "node": "./helpers/tdz.js",
        "import": "./helpers/esm/tdz.js",
        "default": "./helpers/tdz.js"
      },
      "./helpers/tdz.js"
    ],
    "./helpers/esm/tdz": "./helpers/esm/tdz.js",
    "./helpers/temporalRef": [
      {
        "node": "./helpers/temporalRef.js",
        "import": "./helpers/esm/temporalRef.js",
        "default": "./helpers/temporalRef.js"
      },
      "./helpers/temporalRef.js"
    ],
    "./helpers/esm/temporalRef": "./helpers/esm/temporalRef.js",
    "./helpers/temporalUndefined": [
      {
        "node": "./helpers/temporalUndefined.js",
        "import": "./helpers/esm/temporalUndefined.js",
        "default": "./helpers/temporalUndefined.js"
      },
      "./helpers/temporalUndefined.js"
    ],
    "./helpers/esm/temporalUndefined": "./helpers/esm/temporalUndefined.js",
    "./helpers/toArray": [
      {
        "node": "./helpers/toArray.js",
        "import": "./helpers/esm/toArray.js",
        "default": "./helpers/toArray.js"
      },
      "./helpers/toArray.js"
    ],
    "./helpers/esm/toArray": "./helpers/esm/toArray.js",
    "./helpers/toConsumableArray": [
      {
        "node": "./helpers/toConsumableArray.js",
        "import": "./helpers/esm/toConsumableArray.js",
        "default": "./helpers/toConsumableArray.js"
      },
      "./helpers/toConsumableArray.js"
    ],
    "./helpers/esm/toConsumableArray": "./helpers/esm/toConsumableArray.js",
    "./helpers/toPrimitive": [
      {
        "node": "./helpers/toPrimitive.js",
        "import": "./helpers/esm/toPrimitive.js",
        "default": "./helpers/toPrimitive.js"
      },
      "./helpers/toPrimitive.js"
    ],
    "./helpers/esm/toPrimitive": "./helpers/esm/toPrimitive.js",
    "./helpers/toPropertyKey": [
      {
        "node": "./helpers/toPropertyKey.js",
        "import": "./helpers/esm/toPropertyKey.js",
        "default": "./helpers/toPropertyKey.js"
      },
      "./helpers/toPropertyKey.js"
    ],
    "./helpers/esm/toPropertyKey": "./helpers/esm/toPropertyKey.js",
    "./helpers/toSetter": [
      {
        "node": "./helpers/toSetter.js",
        "import": "./helpers/esm/toSetter.js",
        "default": "./helpers/toSetter.js"
      },
      "./helpers/toSetter.js"
    ],
    "./helpers/esm/toSetter": "./helpers/esm/toSetter.js",
    "./helpers/typeof": [
      {
        "node": "./helpers/typeof.js",
        "import": "./helpers/esm/typeof.js",
        "default": "./helpers/typeof.js"
      },
      "./helpers/typeof.js"
    ],
    "./helpers/esm/typeof": "./helpers/esm/typeof.js",
    "./helpers/unsupportedIterableToArray": [
      {
        "node": "./helpers/unsupportedIterableToArray.js",
        "import": "./helpers/esm/unsupportedIterableToArray.js",
        "default": "./helpers/unsupportedIterableToArray.js"
      },
      "./helpers/unsupportedIterableToArray.js"
    ],
    "./helpers/esm/unsupportedIterableToArray": "./helpers/esm/unsupportedIterableToArray.js",
    "./helpers/usingCtx": [
      {
        "node": "./helpers/usingCtx.js",
        "import": "./helpers/esm/usingCtx.js",
        "default": "./helpers/usingCtx.js"
      },
      "./helpers/usingCtx.js"
    ],
    "./helpers/esm/usingCtx": "./helpers/esm/usingCtx.js",
    "./helpers/wrapAsyncGenerator": [
      {
        "node": "./helpers/wrapAsyncGenerator.js",
        "import": "./helpers/esm/wrapAsyncGenerator.js",
        "default": "./helpers/wrapAsyncGenerator.js"
      },
      "./helpers/wrapAsyncGenerator.js"
    ],
    "./helpers/esm/wrapAsyncGenerator": "./helpers/esm/wrapAsyncGenerator.js",
    "./helpers/wrapNativeSuper": [
      {
        "node": "./helpers/wrapNativeSuper.js",
        "import": "./helpers/esm/wrapNativeSuper.js",
        "default": "./helpers/wrapNativeSuper.js"
      },
      "./helpers/wrapNativeSuper.js"
    ],
    "./helpers/esm/wrapNativeSuper": "./helpers/esm/wrapNativeSuper.js",
    "./helpers/wrapRegExp": [
      {
        "node": "./helpers/wrapRegExp.js",
        "import": "./helpers/esm/wrapRegExp.js",
        "default": "./helpers/wrapRegExp.js"
      },
      "./helpers/wrapRegExp.js"
    ],
    "./helpers/esm/wrapRegExp": "./helpers/esm/wrapRegExp.js",
    "./helpers/writeOnlyError": [
      {
        "node": "./helpers/writeOnlyError.js",
        "import": "./helpers/esm/writeOnlyError.js",
        "default": "./helpers/writeOnlyError.js"
      },
      "./helpers/writeOnlyError.js"
    ],
    "./helpers/esm/writeOnlyError": "./helpers/esm/writeOnlyError.js",
    "./helpers/AwaitValue": [
      {
        "node": "./helpers/AwaitValue.js",
        "import": "./helpers/esm/AwaitValue.js",
        "default": "./helpers/AwaitValue.js"
      },
      "./helpers/AwaitValue.js"
    ],
    "./helpers/esm/AwaitValue": "./helpers/esm/AwaitValue.js",
    "./helpers/applyDecs": [
      {
        "node": "./helpers/applyDecs.js",
        "import": "./helpers/esm/applyDecs.js",
        "default": "./helpers/applyDecs.js"
      },
      "./helpers/applyDecs.js"
    ],
    "./helpers/esm/applyDecs": "./helpers/esm/applyDecs.js",
    "./helpers/applyDecs2203": [
      {
        "node": "./helpers/applyDecs2203.js",
        "import": "./helpers/esm/applyDecs2203.js",
        "default": "./helpers/applyDecs2203.js"
      },
      "./helpers/applyDecs2203.js"
    ],
    "./helpers/esm/applyDecs2203": "./helpers/esm/applyDecs2203.js",
    "./helpers/applyDecs2203R": [
      {
        "node": "./helpers/applyDecs2203R.js",
        "import": "./helpers/esm/applyDecs2203R.js",
        "default": "./helpers/applyDecs2203R.js"
      },
      "./helpers/applyDecs2203R.js"
    ],
    "./helpers/esm/applyDecs2203R": "./helpers/esm/applyDecs2203R.js",
    "./helpers/applyDecs2301": [
      {
        "node": "./helpers/applyDecs2301.js",
        "import": "./helpers/esm/applyDecs2301.js",
        "default": "./helpers/applyDecs2301.js"
      },
      "./helpers/applyDecs2301.js"
    ],
    "./helpers/esm/applyDecs2301": "./helpers/esm/applyDecs2301.js",
    "./helpers/applyDecs2305": [
      {
        "node": "./helpers/applyDecs2305.js",
        "import": "./helpers/esm/applyDecs2305.js",
        "default": "./helpers/applyDecs2305.js"
      },
      "./helpers/applyDecs2305.js"
    ],
    "./helpers/esm/applyDecs2305": "./helpers/esm/applyDecs2305.js",
    "./helpers/classApplyDescriptorDestructureSet": [
      {
        "node": "./helpers/classApplyDescriptorDestructureSet.js",
        "import": "./helpers/esm/classApplyDescriptorDestructureSet.js",
        "default": "./helpers/classApplyDescriptorDestructureSet.js"
      },
      "./helpers/classApplyDescriptorDestructureSet.js"
    ],
    "./helpers/esm/classApplyDescriptorDestructureSet": "./helpers/esm/classApplyDescriptorDestructureSet.js",
    "./helpers/classApplyDescriptorGet": [
      {
        "node": "./helpers/classApplyDescriptorGet.js",
        "import": "./helpers/esm/classApplyDescriptorGet.js",
        "default": "./helpers/classApplyDescriptorGet.js"
      },
      "./helpers/classApplyDescriptorGet.js"
    ],
    "./helpers/esm/classApplyDescriptorGet": "./helpers/esm/classApplyDescriptorGet.js",
    "./helpers/classApplyDescriptorSet": [
      {
        "node": "./helpers/classApplyDescriptorSet.js",
        "import": "./helpers/esm/classApplyDescriptorSet.js",
        "default": "./helpers/classApplyDescriptorSet.js"
      },
      "./helpers/classApplyDescriptorSet.js"
    ],
    "./helpers/esm/classApplyDescriptorSet": "./helpers/esm/classApplyDescriptorSet.js",
    "./helpers/classCheckPrivateStaticAccess": [
      {
        "node": "./helpers/classCheckPrivateStaticAccess.js",
        "import": "./helpers/esm/classCheckPrivateStaticAccess.js",
        "default": "./helpers/classCheckPrivateStaticAccess.js"
      },
      "./helpers/classCheckPrivateStaticAccess.js"
    ],
    "./helpers/esm/classCheckPrivateStaticAccess": "./helpers/esm/classCheckPrivateStaticAccess.js",
    "./helpers/classCheckPrivateStaticFieldDescriptor": [
      {
        "node": "./helpers/classCheckPrivateStaticFieldDescriptor.js",
        "import": "./helpers/esm/classCheckPrivateStaticFieldDescriptor.js",
        "default": "./helpers/classCheckPrivateStaticFieldDescriptor.js"
      },
      "./helpers/classCheckPrivateStaticFieldDescriptor.js"
    ],
    "./helpers/esm/classCheckPrivateStaticFieldDescriptor": "./helpers/esm/classCheckPrivateStaticFieldDescriptor.js",
    "./helpers/classExtractFieldDescriptor": [
      {
        "node": "./helpers/classExtractFieldDescriptor.js",
        "import": "./helpers/esm/classExtractFieldDescriptor.js",
        "default": "./helpers/classExtractFieldDescriptor.js"
      },
      "./helpers/classExtractFieldDescriptor.js"
    ],
    "./helpers/esm/classExtractFieldDescriptor": "./helpers/esm/classExtractFieldDescriptor.js",
    "./helpers/classPrivateFieldDestructureSet": [
      {
        "node": "./helpers/classPrivateFieldDestructureSet.js",
        "import": "./helpers/esm/classPrivateFieldDestructureSet.js",
        "default": "./helpers/classPrivateFieldDestructureSet.js"
      },
      "./helpers/classPrivateFieldDestructureSet.js"
    ],
    "./helpers/esm/classPrivateFieldDestructureSet": "./helpers/esm/classPrivateFieldDestructureSet.js",
    "./helpers/classPrivateFieldGet": [
      {
        "node": "./helpers/classPrivateFieldGet.js",
        "import": "./helpers/esm/classPrivateFieldGet.js",
        "default": "./helpers/classPrivateFieldGet.js"
      },
      "./helpers/classPrivateFieldGet.js"
    ],
    "./helpers/esm/classPrivateFieldGet": "./helpers/esm/classPrivateFieldGet.js",
    "./helpers/classPrivateFieldSet": [
      {
        "node": "./helpers/classPrivateFieldSet.js",
        "import": "./helpers/esm/classPrivateFieldSet.js",
        "default": "./helpers/classPrivateFieldSet.js"
      },
      "./helpers/classPrivateFieldSet.js"
    ],
    "./helpers/esm/classPrivateFieldSet": "./helpers/esm/classPrivateFieldSet.js",
    "./helpers/classPrivateMethodGet": [
      {
        "node": "./helpers/classPrivateMethodGet.js",
        "import": "./helpers/esm/classPrivateMethodGet.js",
        "default": "./helpers/classPrivateMethodGet.js"
      },
      "./helpers/classPrivateMethodGet.js"
    ],
    "./helpers/esm/classPrivateMethodGet": "./helpers/esm/classPrivateMethodGet.js",
    "./helpers/classPrivateMethodSet": [
      {
        "node": "./helpers/classPrivateMethodSet.js",
        "import": "./helpers/esm/classPrivateMethodSet.js",
        "default": "./helpers/classPrivateMethodSet.js"
      },
      "./helpers/classPrivateMethodSet.js"
    ],
    "./helpers/esm/classPrivateMethodSet": "./helpers/esm/classPrivateMethodSet.js",
    "./helpers/classStaticPrivateFieldDestructureSet": [
      {
        "node": "./helpers/classStaticPrivateFieldDestructureSet.js",
        "import": "./helpers/esm/classStaticPrivateFieldDestructureSet.js",
        "default": "./helpers/classStaticPrivateFieldDestructureSet.js"
      },
      "./helpers/classStaticPrivateFieldDestructureSet.js"
    ],
    "./helpers/esm/classStaticPrivateFieldDestructureSet": "./helpers/esm/classStaticPrivateFieldDestructureSet.js",
    "./helpers/classStaticPrivateFieldSpecGet": [
      {
        "node": "./helpers/classStaticPrivateFieldSpecGet.js",
        "import": "./helpers/esm/classStaticPrivateFieldSpecGet.js",
        "default": "./helpers/classStaticPrivateFieldSpecGet.js"
      },
      "./helpers/classStaticPrivateFieldSpecGet.js"
    ],
    "./helpers/esm/classStaticPrivateFieldSpecGet": "./helpers/esm/classStaticPrivateFieldSpecGet.js",
    "./helpers/classStaticPrivateFieldSpecSet": [
      {
        "node": "./helpers/classStaticPrivateFieldSpecSet.js",
        "import": "./helpers/esm/classStaticPrivateFieldSpecSet.js",
        "default": "./helpers/classStaticPrivateFieldSpecSet.js"
      },
      "./helpers/classStaticPrivateFieldSpecSet.js"
    ],
    "./helpers/esm/classStaticPrivateFieldSpecSet": "./helpers/esm/classStaticPrivateFieldSpecSet.js",
    "./helpers/classStaticPrivateMethodSet": [
      {
        "node": "./helpers/classStaticPrivateMethodSet.js",
        "import": "./helpers/esm/classStaticPrivateMethodSet.js",
        "default": "./helpers/classStaticPrivateMethodSet.js"
      },
      "./helpers/classStaticPrivateMethodSet.js"
    ],
    "./helpers/esm/classStaticPrivateMethodSet": "./helpers/esm/classStaticPrivateMethodSet.js",
    "./helpers/defineEnumerableProperties": [
      {
        "node": "./helpers/defineEnumerableProperties.js",
        "import": "./helpers/esm/defineEnumerableProperties.js",
        "default": "./helpers/defineEnumerableProperties.js"
      },
      "./helpers/defineEnumerableProperties.js"
    ],
    "./helpers/esm/defineEnumerableProperties": "./helpers/esm/defineEnumerableProperties.js",
    "./helpers/dispose": [
      {
        "node": "./helpers/dispose.js",
        "import": "./helpers/esm/dispose.js",
        "default": "./helpers/dispose.js"
      },
      "./helpers/dispose.js"
    ],
    "./helpers/esm/dispose": "./helpers/esm/dispose.js",
    "./helpers/objectSpread": [
      {
        "node": "./helpers/objectSpread.js",
        "import": "./helpers/esm/objectSpread.js",
        "default": "./helpers/objectSpread.js"
      },
      "./helpers/objectSpread.js"
    ],
    "./helpers/esm/objectSpread": "./helpers/esm/objectSpread.js",
    "./helpers/using": [
      {
        "node": "./helpers/using.js",
        "import": "./helpers/esm/using.js",
        "default": "./helpers/using.js"
      },
      "./helpers/using.js"
    ],
    "./helpers/esm/using": "./helpers/esm/using.js",
    "./package": "./package.json",
    "./package.json": "./package.json",
    "./regenerator": "./regenerator/index.js",
    "./regenerator/*.js": "./regenerator/*.js",
    "./regenerator/": "./regenerator/"
  },
  "engines": {
    "node": ">=6.9.0"
  },
  "type": "commonjs"
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"simpl-schema":{"package.json":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/package.json                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = {
  "name": "simpl-schema",
  "version": "3.4.6",
  "main": "./dist/cjs/main.js"
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"dist":{"cjs":{"main.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/main.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValidationContext = exports.toJsonSchema = exports.schemaDefinitionOptions = void 0;
require("./clean.js");
const SimpleSchema_js_1 = require("./SimpleSchema.js");
Object.defineProperty(exports, "schemaDefinitionOptions", { enumerable: true, get: function () { return SimpleSchema_js_1.schemaDefinitionOptions; } });
Object.defineProperty(exports, "ValidationContext", { enumerable: true, get: function () { return SimpleSchema_js_1.ValidationContext; } });
const toJsonSchema_js_1 = require("./toJsonSchema.js");
Object.defineProperty(exports, "toJsonSchema", { enumerable: true, get: function () { return toJsonSchema_js_1.toJsonSchema; } });
SimpleSchema_js_1.SimpleSchema.ValidationContext = SimpleSchema_js_1.ValidationContext;
exports.default = SimpleSchema_js_1.SimpleSchema;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"clean.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/clean.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const clone_1 = __importDefault(require("clone"));
const mongo_object_1 = __importDefault(require("mongo-object"));
const convertToProperType_js_1 = __importDefault(require("./clean/convertToProperType.js"));
const setAutoValues_js_1 = __importDefault(require("./clean/setAutoValues.js"));
const SimpleSchema_js_1 = require("./SimpleSchema.js");
const index_js_1 = require("./utility/index.js");
const index_js_2 = require("./validation/typeValidator/index.js");
const operatorsToIgnoreValue = ['$unset', '$currentDate'];
function log(message) {
    if (SimpleSchema_js_1.SimpleSchema.debug === true) {
        console.debug(message);
    }
}
/**
 * Cleans a document or modifier object. By default, will filter, automatically
 * type convert where possible, and inject automatic/default values. Use the options
 * to skip one or more of these.
 *
 * @param ss A SimpleSchema instance
 * @param doc Document or modifier to clean. Referenced object will be modified in place.
 * @param options Clean options
 * @returns The modified doc.
 */
function clean(ss, doc, options = {}) {
    var _a;
    // By default, doc will be filtered and auto-converted
    const cleanOptions = Object.assign(Object.assign({ isModifier: (0, index_js_1.looksLikeModifier)(doc), isUpsert: false }, ss._cleanOptions), options);
    Object.getOwnPropertyNames(cleanOptions).forEach((opt) => {
        if (!SimpleSchema_js_1.SimpleSchema.supportedCleanOptions.has(opt)) {
            console.warn(`Unsupported "${opt}" option passed to SimpleSchema clean`);
        }
    });
    // Clone so we do not mutate
    const cleanDoc = cleanOptions.mutate === true ? doc : (0, clone_1.default)(doc);
    const mongoObject = (_a = cleanOptions.mongoObject) !== null && _a !== void 0 ? _a : new mongo_object_1.default(cleanDoc, ss.blackboxKeys());
    // Clean loop
    if (cleanOptions.filter === true ||
        cleanOptions.autoConvert === true ||
        cleanOptions.removeEmptyStrings === true ||
        cleanOptions.trimStrings === true) {
        const removedPositions = []; // For removing now-empty objects after
        mongoObject.forEachNode(function eachNode() {
            // The value of a $unset is irrelevant, so no point in cleaning it.
            // Also we do not care if fields not in the schema are unset.
            // Other operators also have values that we wouldn't want to clean.
            if (operatorsToIgnoreValue.includes(this.operator))
                return;
            const gKey = this.genericKey;
            if (gKey == null)
                return;
            let val = this.value;
            if (val === undefined)
                return;
            let p;
            // Filter out props if necessary
            if ((cleanOptions.filter === true && !ss.allowsKey(gKey)) ||
                (cleanOptions.removeNullsFromArrays === true && this.isArrayItem && val === null)) {
                // XXX Special handling for $each; maybe this could be made nicer
                if (this.position.slice(-7) === '[$each]') {
                    mongoObject.removeValueForPosition(this.position.slice(0, -7));
                    removedPositions.push(this.position.slice(0, -7));
                }
                else {
                    this.remove();
                    removedPositions.push(this.position);
                }
                log(`SimpleSchema.clean: filtered out value that would have affected key "${gKey}", which is not allowed by the schema`);
                return; // no reason to do more
            }
            const outerDef = ss.schema(gKey);
            const defs = outerDef === null || outerDef === void 0 ? void 0 : outerDef.type.definitions;
            const def = defs === null || defs === void 0 ? void 0 : defs[0];
            // Auto-convert values if requested and if possible
            if (cleanOptions.autoConvert === true && defs !== undefined && def != null && !(0, index_js_2.isValueTypeValid)(defs, val, this.operator)) {
                const newVal = (0, convertToProperType_js_1.default)(val, def.type);
                if (newVal !== undefined && newVal !== val) {
                    log(`SimpleSchema.clean: auto-converted value ${String(val)} from ${typeof val} to ${typeof newVal} for ${gKey}`);
                    val = newVal;
                    this.updateValue(newVal);
                }
            }
            // Clean string values
            if (typeof val === 'string') {
                // Trim strings if
                // 1. The trimStrings option is `true` AND
                // 2. The field is not in the schema OR is in the schema with `trim` !== `false`
                if (cleanOptions.trimStrings === true &&
                    (def === null || def === void 0 ? void 0 : def.trim) !== false) {
                    val = val.trim();
                    this.updateValue(val);
                }
                // Remove empty strings if
                // 1. The removeEmptyStrings option is `true` AND
                // 2. The value is in a normal object or in the $set part of a modifier
                // 3. The value is an empty string.
                if (cleanOptions.removeEmptyStrings === true &&
                    (this.operator == null || this.operator === '$set') &&
                    val.length === 0) {
                    // For a document, we remove any fields that are being set to an empty string
                    this.remove();
                    // For a modifier, we $unset any fields that are being set to an empty string.
                    // But only if we're not already within an entire object that is being set.
                    if (this.operator === '$set') {
                        const matches = this.position.match(/\[/g);
                        if (matches !== null && matches.length < 2) {
                            p = this.position.replace('$set', '$unset');
                            mongoObject.setValueForPosition(p, '');
                        }
                    }
                }
            }
        }, { endPointsOnly: false });
        // Remove any objects that are now empty after filtering
        removedPositions.forEach((removedPosition) => {
            const lastBrace = removedPosition.lastIndexOf('[');
            if (lastBrace !== -1) {
                const removedPositionParent = removedPosition.slice(0, lastBrace);
                const value = mongoObject.getValueForPosition(removedPositionParent);
                if ((0, index_js_1.isEmptyObject)(value)) {
                    mongoObject.removeValueForPosition(removedPositionParent);
                }
            }
        });
        mongoObject.removeArrayItems();
    }
    // Set automatic values
    if (cleanOptions.getAutoValues === true) {
        (0, setAutoValues_js_1.default)(ss.autoValueFunctions(), mongoObject, cleanOptions.isModifier || false, cleanOptions.isUpsert || false, cleanOptions.extendAutoValueContext);
    }
    // Ensure we don't have any operators set to an empty object
    // since MongoDB 2.6+ will throw errors.
    if (cleanOptions.isModifier) {
        Object.keys(cleanDoc !== null && cleanDoc !== void 0 ? cleanDoc : {}).forEach((op) => {
            const operatorValue = cleanDoc[op];
            if (typeof operatorValue === 'object' &&
                operatorValue !== null &&
                (0, index_js_1.isEmptyObject)(operatorValue)) {
                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete
                delete cleanDoc[op];
            }
        });
    }
    return cleanDoc;
}
exports.default = clean;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"clean":{"convertToProperType.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/clean/convertToProperType.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SimpleSchema_js_1 = require("../SimpleSchema.js");
/**
 * Converts value to proper type
 *
 * @param value Value to try to convert
 * @param type A type
 * @returns Value converted to type.
 */
function convertToProperType(value, type) {
    // Can't and shouldn't convert arrays or objects or null
    if (value === null)
        return value;
    if (value === undefined)
        return value;
    if (Array.isArray(value))
        return value;
    if (value !== undefined &&
        (typeof value === 'function' || typeof value === 'object') &&
        !(value instanceof Date))
        return value;
    // Convert to String type
    if (type === String)
        return value.toString();
    // Convert to Number type
    if (type === Number || type === SimpleSchema_js_1.SimpleSchema.Integer) {
        if (typeof value === 'string' && value.length > 0) {
            // Try to convert numeric strings to numbers
            const numberVal = Number(value);
            if (!isNaN(numberVal))
                return numberVal;
        }
        // Leave it; will fail validation
        return value;
    }
    // If target type is a Date we can safely convert from either a
    // number (Integer value representing the number of milliseconds
    // since 1 January 1970 00:00:00 UTC) or a string that can be parsed
    // by Date.
    if (type === Date) {
        if (typeof value === 'string') {
            const parsedDate = Date.parse(value);
            if (!isNaN(parsedDate))
                return new Date(parsedDate);
        }
        if (typeof value === 'number')
            return new Date(value);
    }
    // Convert to Boolean type
    if (type === Boolean) {
        if (typeof value === 'string') {
            // Convert exact string 'true' and 'false' to true and false respectively
            if (value.toLowerCase() === 'true')
                return true;
            if (value.toLowerCase() === 'false')
                return false;
        }
        else if (typeof value === 'number' && !isNaN(value)) {
            // NaN can be error, so skipping it
            return Boolean(value);
        }
    }
    // If an array is what you want, I'll give you an array
    if (type === Array)
        return [value];
    // Could not convert
    return value;
}
exports.default = convertToProperType;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"setAutoValues.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/clean/setAutoValues.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sortAutoValueFunctions = void 0;
const AutoValueRunner_js_1 = __importDefault(require("./AutoValueRunner.js"));
const getPositionsForAutoValue_js_1 = __importDefault(require("./getPositionsForAutoValue.js"));
/**
 * @method sortAutoValueFunctions
 * @private
 * @param autoValueFunctions - Array of objects to be sorted
 * @returns Sorted array
 *
 * Stable sort of the autoValueFunctions (preserves order at the same field depth).
 */
function sortAutoValueFunctions(autoValueFunctions) {
    const defaultFieldOrder = autoValueFunctions.reduce((acc, { fieldName }, index) => {
        acc[fieldName] = index;
        return acc;
    }, {});
    // Sort by how many dots each field name has, asc, such that we can auto-create
    // objects and arrays before we run the autoValues for properties within them.
    // Fields of the same level (same number of dots) preserve should order from the original array.
    return autoValueFunctions.sort((a, b) => {
        const depthDiff = a.fieldName.split('.').length - b.fieldName.split('.').length;
        return depthDiff === 0
            ? defaultFieldOrder[a.fieldName] - defaultFieldOrder[b.fieldName]
            : depthDiff;
    });
}
exports.sortAutoValueFunctions = sortAutoValueFunctions;
/**
 * @method setAutoValues
 * @private
 * @param autoValueFunctions - An array of objects with func, fieldName, and closestSubschemaFieldName props
 * @param mongoObject
 * @param [isModifier=false] - Is it a modifier doc?
 * @param [extendedAutoValueContext] - Object that will be added to the context when calling each autoValue function
 *
 * Updates doc with automatic values from autoValue functions or default
 * values from defaultValue. Modifies the referenced object in place.
 */
function setAutoValues(autoValueFunctions, mongoObject, isModifier, isUpsert, extendedAutoValueContext) {
    const sortedAutoValueFunctions = sortAutoValueFunctions(autoValueFunctions);
    sortedAutoValueFunctions.forEach(({ func, fieldName, closestSubschemaFieldName }) => {
        const avRunner = new AutoValueRunner_js_1.default({
            closestSubschemaFieldName,
            extendedAutoValueContext,
            func,
            isModifier,
            isUpsert,
            mongoObject
        });
        const positions = (0, getPositionsForAutoValue_js_1.default)({
            fieldName,
            isModifier,
            isUpsert,
            mongoObject
        });
        // Run the autoValue function once for each place in the object that
        // has a value or that potentially should.
        // @ts-expect-error
        positions.forEach(avRunner.runForPosition.bind(avRunner));
    });
}
exports.default = setAutoValues;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"AutoValueRunner.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/clean/AutoValueRunner.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const clone_1 = __importDefault(require("clone"));
const index_js_1 = require("../utility/index.js");
function getFieldInfo(mongoObject, key) {
    var _a;
    const keyInfo = (_a = mongoObject.getInfoForKey(key)) !== null && _a !== void 0 ? _a : {
        operator: null,
        value: undefined
    };
    return Object.assign(Object.assign({}, keyInfo), { isSet: keyInfo.value !== undefined });
}
class AutoValueRunner {
    constructor(options) {
        this.doneKeys = [];
        this.options = options;
    }
    runForPosition({ key: affectedKey, operator, position, value }) {
        const { closestSubschemaFieldName, extendedAutoValueContext, func, isModifier, isUpsert, mongoObject } = this.options;
        // If already called for this key, skip it
        if (this.doneKeys.includes(affectedKey))
            return;
        const fieldParentName = (0, index_js_1.getParentOfKey)(affectedKey, true);
        const parentFieldInfo = getFieldInfo(mongoObject, fieldParentName.slice(0, -1));
        let doUnset = false;
        if (Array.isArray(parentFieldInfo.value)) {
            const innerKey = affectedKey.split('.').slice(-1).pop();
            if (innerKey === undefined || isNaN(Number(innerKey))) {
                // parent is an array, but the key to be set is not an integer (see issue #80)
                return;
            }
        }
        const autoValueContext = Object.assign({ closestSubschemaFieldName: closestSubschemaFieldName.length > 0
                ? closestSubschemaFieldName
                : null, field(fName) {
                return getFieldInfo(mongoObject, closestSubschemaFieldName + fName);
            },
            isModifier,
            isUpsert, isSet: value !== undefined, key: affectedKey, operator,
            parentField() {
                return parentFieldInfo;
            },
            siblingField(fName) {
                return getFieldInfo(mongoObject, fieldParentName + fName);
            },
            unset() {
                doUnset = true;
            },
            value }, (extendedAutoValueContext !== null && extendedAutoValueContext !== void 0 ? extendedAutoValueContext : {}));
        const autoValue = func.call(autoValueContext, mongoObject.getObject());
        // Update tracking of which keys we've run autovalue for
        this.doneKeys.push(affectedKey);
        if (doUnset && position != null)
            mongoObject.removeValueForPosition(position);
        if (autoValue === undefined)
            return;
        // If the user's auto value is of the pseudo-modifier format, parse it
        // into operator and value.
        if (isModifier) {
            let op;
            let newValue;
            if (autoValue != null && typeof autoValue === 'object') {
                const avOperator = Object.keys(autoValue).find((avProp) => avProp.substring(0, 1) === '$');
                if (avOperator !== undefined) {
                    op = avOperator;
                    newValue = autoValue[avOperator];
                }
            }
            // Add $set for updates and upserts if necessary. Keep this
            // above the "if (op)" block below since we might change op
            // in this line.
            if (op == null && position.slice(0, 1) !== '$') {
                op = '$set';
                newValue = autoValue;
            }
            if (op != null) {
                // Update/change value
                mongoObject.removeValueForPosition(position);
                mongoObject.setValueForPosition(`${op}[${affectedKey}]`, (0, clone_1.default)(newValue));
                return;
            }
        }
        // Update/change value. Cloning is necessary in case it's an object, because
        // if we later set some keys within it, they'd be set on the original object, too.
        mongoObject.setValueForPosition(position, (0, clone_1.default)(autoValue));
    }
}
exports.default = AutoValueRunner;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"getPositionsForAutoValue.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/clean/getPositionsForAutoValue.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongo_object_1 = __importDefault(require("mongo-object"));
const index_js_1 = require("../utility/index.js");
/**
 * A position is a place in the object where this field exists.
 * If no arrays are involved, then every field/key has at most 1 position.
 * If arrays are involved, then a field could have potentially unlimited positions.
 *
 * For example, the key 'a.b.$.c` would have these positions:
 *   `a[b][0][c]`
 *   `a[b][1][c]`
 *   `a[b][2][c]`
 *
 * For this object:
 * {
 *   a: {
 *     b: [
 *       { c: 1 },
 *       { c: 1 },
 *       { c: 1 },
 *     ],
 *   },
 * }
 *
 * To make matters more complicated, we want to include not only the existing positions
 * but also the positions that might exist due to their parent object existing or their
 * parent object being auto-created by a MongoDB modifier that implies it.
 */
function getPositionsForAutoValue({ fieldName, isModifier, isUpsert, mongoObject }) {
    // Positions for this field
    const positions = mongoObject.getPositionsInfoForGenericKey(fieldName);
    // If the field is an object and will be created by MongoDB,
    // we don't need (and can't have) a value for it
    if (isModifier === true &&
        mongoObject.getPositionsThatCreateGenericKey(fieldName).length > 0) {
        return positions;
    }
    // For simple top-level fields, just add an undefined would-be position
    // if there isn't a real position.
    if (!fieldName.includes('.') && positions.length === 0) {
        positions.push({
            key: fieldName,
            // @ts-expect-error incorrect type in mongo-object package
            value: undefined,
            operator: isModifier === true ? '$set' : null,
            position: isModifier === true ? `$set[${fieldName}]` : fieldName
        });
        return positions;
    }
    const parentPath = (0, index_js_1.getParentOfKey)(fieldName);
    const lastPart = (0, index_js_1.getLastPartOfKey)(fieldName, parentPath);
    const lastPartWithBraces = lastPart.replace(/\./g, '][');
    const parentPositions = mongoObject.getPositionsInfoForGenericKey(parentPath);
    if (parentPositions.length > 0) {
        parentPositions.forEach((info) => {
            const childPosition = `${info.position}[${lastPartWithBraces}]`;
            if (positions.find((i) => i.position === childPosition) == null) {
                positions.push({
                    key: `${info.key}.${lastPart}`,
                    // @ts-expect-error incorrect type in mongo-object package
                    value: undefined,
                    operator: info.operator,
                    position: childPosition
                });
            }
        });
    }
    else if (parentPath.slice(-2) !== '.$') {
        // positions that will create parentPath
        mongoObject.getPositionsThatCreateGenericKey(parentPath).forEach((info) => {
            const { operator, position } = info;
            let wouldBePosition;
            if (operator != null) {
                const next = position.slice(position.indexOf('[') + 1, position.indexOf(']'));
                const nextPieces = next.split('.');
                const newPieces = [];
                let newKey = '';
                while ((nextPieces.length > 0) && newKey !== parentPath) {
                    newPieces.push(nextPieces.shift());
                    newKey = newPieces.join('.');
                }
                newKey = `${newKey}.${fieldName.slice(newKey.length + 1)}`;
                wouldBePosition = `$set[${newKey}]`;
            }
            else {
                const lastPart2 = (0, index_js_1.getLastPartOfKey)(fieldName, parentPath);
                const lastPartWithBraces2 = lastPart2.replace(/\./g, '][');
                wouldBePosition = `${position.slice(0, position.lastIndexOf('['))}[${lastPartWithBraces2}]`;
            }
            if (positions.find((item) => item.position === wouldBePosition) == null) {
                const key = mongo_object_1.default._positionToKey(wouldBePosition);
                if (key != null) {
                    positions.push({
                        key,
                        // @ts-expect-error incorrect type in mongo-object package
                        value: undefined,
                        operator: operator == null ? null : '$set',
                        position: wouldBePosition
                    });
                }
            }
        });
    }
    // If we made it this far, we still want to call the autoValue
    // function once for the field, so we'll add a would-be position for it.
    if (positions.length === 0 && isModifier === true && isUpsert !== true) {
        positions.push({
            key: fieldName,
            // @ts-expect-error incorrect type in mongo-object package
            value: undefined,
            operator: '$set',
            position: `$set[${fieldName}]`
        });
    }
    return positions;
}
exports.default = getPositionsForAutoValue;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"SimpleSchema.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/SimpleSchema.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValidationContext = exports.SimpleSchema = exports.schemaDefinitionOptions = void 0;
/* eslint-disable no-undef */
const mongo_object_1 = __importDefault(require("mongo-object"));
const clean_js_1 = __importDefault(require("./clean.js"));
const defaultMessages_js_1 = require("./defaultMessages.js");
const errors_js_1 = require("./errors.js");
const expandShorthand_js_1 = __importDefault(require("./expandShorthand.js"));
const SimpleSchemaGroup_js_1 = __importDefault(require("./SimpleSchemaGroup.js"));
const index_js_1 = require("./utility/index.js");
const ValidationContext_js_1 = __importDefault(require("./ValidationContext.js"));
exports.ValidationContext = ValidationContext_js_1.default;
exports.schemaDefinitionOptions = [
    'autoValue',
    'defaultValue',
    'label',
    'optional',
    'required',
    'type'
];
const oneOfProps = [
    'allowedValues',
    'blackbox',
    'custom',
    'exclusiveMax',
    'exclusiveMin',
    'max',
    'maxCount',
    'min',
    'minCount',
    'regEx',
    'skipRegExCheckForEmptyStrings',
    'trim',
    'type'
];
const propsThatCanBeFunction = [
    'allowedValues',
    'exclusiveMax',
    'exclusiveMin',
    'label',
    'max',
    'maxCount',
    'min',
    'minCount',
    'optional',
    'regEx',
    'skipRegExCheckForEmptyStrings'
];
class SimpleSchema {
    constructor(schema = {}, options = {}) {
        var _a;
        this._autoValues = [];
        this._blackboxKeys = new Set();
        this._cleanOptions = {};
        this._constructorOptions = {};
        this._docValidators = [];
        this._firstLevelSchemaKeys = [];
        this._rawDefinition = null;
        this._schema = {};
        this._schemaKeys = [];
        // Named validation contexts
        this._validationContexts = {};
        this._validators = [];
        /**
         * @method SimpleSchema#pick
         * @param {[fields]} The list of fields to pick to instantiate the subschema
         * @returns {SimpleSchema} The subschema
         */
        this.pick = getPickOrOmit('pick');
        /**
         * @method SimpleSchema#omit
         * @param {[fields]} The list of fields to omit to instantiate the subschema
         * @returns {SimpleSchema} The subschema
         */
        this.omit = getPickOrOmit('omit');
        // Stash the options object
        this._constructorOptions = Object.assign(Object.assign({}, SimpleSchema._constructorOptionDefaults), options);
        delete this._constructorOptions.clean; // stored separately below
        Object.getOwnPropertyNames(this._constructorOptions).forEach((opt) => {
            if (!SimpleSchema.supportedConstructorOptions.has(opt)) {
                console.warn(`Unsupported "${opt}" option passed to SimpleSchema constructor`);
            }
        });
        // Schema-level defaults for cleaning
        this._cleanOptions = Object.assign(Object.assign({}, SimpleSchema._constructorOptionDefaults.clean), ((_a = options.clean) !== null && _a !== void 0 ? _a : {}));
        // Custom validators for this instance
        this._docValidators = [];
        // Clone, expanding shorthand, and store the schema object in this._schema
        this.extend(schema);
        // Clone raw definition and save if keepRawDefinition is active
        if (this._constructorOptions.keepRawDefinition === true) {
            this._rawDefinition = schema;
        }
        this.version = SimpleSchema.version;
    }
    /**
    /* @returns The entire raw schema definition passed in the constructor
    */
    get rawDefinition() {
        return this._rawDefinition;
    }
    forEachAncestorSimpleSchema(key, func) {
        const genericKey = mongo_object_1.default.makeKeyGeneric(key);
        if (genericKey == null)
            return;
        (0, index_js_1.forEachKeyAncestor)(genericKey, (ancestor) => {
            const def = this._schema[ancestor];
            if (def == null)
                return;
            def.type.definitions.forEach((typeDef) => {
                if (SimpleSchema.isSimpleSchema(typeDef.type)) {
                    func(typeDef.type, ancestor, genericKey.slice(ancestor.length + 1));
                }
            });
        });
    }
    /**
     * Returns whether the obj is a SimpleSchema object.
     * @param [obj] An object to test
     * @returns True if the given object appears to be a SimpleSchema instance
     */
    static isSimpleSchema(obj) {
        if (obj == null)
            return false;
        return obj instanceof SimpleSchema || Object.prototype.hasOwnProperty.call(obj, '_schema');
    }
    /**
     * @param key One specific or generic key for which to get the schema.
     * @returns Returns a 2-tuple.
     *
     *   First item: The SimpleSchema instance that actually defines the given key.
     *
     *   For example, if you have several nested objects, each their own SimpleSchema
     *   instance, and you pass in 'outerObj.innerObj.innermostObj.name' as the key, you'll
     *   get back the SimpleSchema instance for `outerObj.innerObj.innermostObj` key.
     *
     *   But if you pass in 'outerObj.innerObj.innermostObj.name' as the key and that key is
     *   defined in the main schema without use of subschemas, then you'll get back the main schema.
     *
     *   Second item: The part of the key that is in the found schema.
     *
     *   Always returns a tuple (array) but the values may be `null`.
     */
    nearestSimpleSchemaInstance(key) {
        if (key == null)
            return [null, null];
        const genericKey = mongo_object_1.default.makeKeyGeneric(key);
        if (genericKey == null)
            return [null, null];
        if (this._schema[genericKey] !== undefined)
            return [this, genericKey];
        // If not defined in this schema, see if it's defined in a sub-schema
        let innerKey;
        let nearestSimpleSchemaInstance = null;
        this.forEachAncestorSimpleSchema(key, (simpleSchema, ancestor, subSchemaKey) => {
            if ((nearestSimpleSchemaInstance == null) &&
                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions
                simpleSchema._schema[subSchemaKey]) {
                nearestSimpleSchemaInstance = simpleSchema;
                innerKey = subSchemaKey;
            }
        });
        return innerKey != null ? [nearestSimpleSchemaInstance, innerKey] : [null, null];
    }
    schema(key) {
        if (key == null)
            return this._schema;
        const genericKey = mongo_object_1.default.makeKeyGeneric(key);
        let keySchema = genericKey == null ? null : this._schema[genericKey];
        // If not defined in this schema, see if it's defined in a subschema
        if (keySchema == null) {
            let found = false;
            this.forEachAncestorSimpleSchema(key, (simpleSchema, ancestor, subSchemaKey) => {
                if (!found)
                    keySchema = simpleSchema.schema(subSchemaKey);
                if (keySchema != null)
                    found = true;
            });
        }
        return keySchema;
    }
    /**
     * @param key One specific or generic key for which to get all possible schemas.
     * @returns An potentially empty array of possible definitions for one key
     *
     * Note that this returns the raw, unevaluated definition object. Use `getDefinition`
     * if you want the evaluated definition, where any properties that are functions
     * have been run to produce a result.
     */
    schemas(key) {
        const schemas = [];
        const genericKey = mongo_object_1.default.makeKeyGeneric(key);
        const keySchema = genericKey == null ? null : this._schema[genericKey];
        if (keySchema != null)
            schemas.push(keySchema);
        // See if it's defined in any subschema
        this.forEachAncestorSimpleSchema(key, (simpleSchema, ancestor, subSchemaKey) => {
            const keyDef = simpleSchema.schema(subSchemaKey);
            if (keyDef != null)
                schemas.push(keyDef);
        });
        return schemas;
    }
    /**
     * @returns {Object} The entire schema object with subschemas merged. This is the
     * equivalent of what schema() returned in SimpleSchema < 2.0
     *
     * Note that this returns the raw, unevaluated definition object. Use `getDefinition`
     * if you want the evaluated definition, where any properties that are functions
     * have been run to produce a result.
     */
    mergedSchema() {
        const mergedSchema = {};
        this._schemaKeys.forEach((key) => {
            const keySchema = this._schema[key];
            mergedSchema[key] = keySchema;
            keySchema.type.definitions.forEach((typeDef) => {
                if (!SimpleSchema.isSimpleSchema(typeDef.type))
                    return;
                const childSchema = typeDef.type.mergedSchema();
                Object.keys(childSchema).forEach((subKey) => {
                    mergedSchema[`${key}.${subKey}`] = childSchema[subKey];
                });
            });
        });
        return mergedSchema;
    }
    /**
     * Returns the evaluated definition for one key in the schema
     *
     * @param key Generic or specific schema key
     * @param [propList] Array of schema properties you need; performance optimization
     * @param [functionContext] The context to use when evaluating schema options that are functions
     * @returns The schema definition for the requested key
     */
    getDefinition(key, propList, functionContext = {}) {
        const schemaKeyDefinition = this.schema(key);
        if (schemaKeyDefinition == null)
            return;
        return this.resolveDefinitionForSchema(key, schemaKeyDefinition, propList, functionContext);
    }
    /**
     * Returns the evaluated definition for one key in the schema
     *
     * @param key Generic or specific schema key
     * @param [propList] Array of schema properties you need; performance optimization
     * @param [functionContext] The context to use when evaluating schema options that are functions
     * @returns The schema definition for the requested key
     */
    getDefinitions(key, propList, functionContext = {}) {
        const schemaKeyDefinitions = this.schemas(key);
        return schemaKeyDefinitions.map((def) => {
            return this.resolveDefinitionForSchema(key, def, propList, functionContext);
        });
    }
    /**
     * Resolves the definition for one key in the schema
     *
     * @param key Generic or specific schema key
     * @param schemaKeyDefinition Unresolved definition as returned from simpleSchema.schema()
     * @param [propList] Array of schema properties you need; performance optimization
     * @param [functionContext] The context to use when evaluating schema options that are functions
     * @returns The schema definition for the requested key
     */
    resolveDefinitionForSchema(key, schemaKeyDefinition, propList, functionContext = {}) {
        var _a;
        const getPropIterator = (obj, newObj) => {
            return (prop) => {
                if (Array.isArray(propList) && !propList.includes(prop))
                    return;
                const val = obj[prop];
                // For any options that support specifying a function, evaluate the functions
                if (propsThatCanBeFunction.includes(prop) &&
                    typeof val === 'function') {
                    newObj[prop] = val.call(Object.assign({ key }, functionContext));
                    // Inflect label if undefined
                    if (prop === 'label' && typeof newObj.label !== 'string') {
                        newObj.label = inflectedLabel(key, this._constructorOptions.humanizeAutoLabels);
                    }
                }
                else {
                    newObj[prop] = val;
                }
            };
        };
        const result = {
            type: []
        };
        Object.keys(schemaKeyDefinition).forEach(getPropIterator(schemaKeyDefinition, result));
        // Resolve all the types and convert to a normal array to make it easier to use.
        if (Array.isArray((_a = schemaKeyDefinition.type) === null || _a === void 0 ? void 0 : _a.definitions)) {
            result.type = schemaKeyDefinition.type.definitions.map((typeDef) => {
                const newTypeDef = {
                    type: String // will be overwritten
                };
                Object.keys(typeDef).forEach(getPropIterator(typeDef, newTypeDef));
                return newTypeDef;
            });
        }
        return result;
    }
    /**
     * Returns a string identifying the best guess data type for a key. For keys
     * that allow multiple types, the first type is used. This can be useful for
     * building forms.
     *
     * @param key Generic or specific schema key
     * @returns A type string. One of:
     *  string, number, boolean, date, object, stringArray, numberArray, booleanArray,
     *  dateArray, objectArray
     */
    getQuickTypeForKey(key) {
        let type;
        const fieldSchema = this.schema(key);
        if (fieldSchema == null)
            return;
        const fieldType = (fieldSchema.type).singleType;
        if (fieldType === String) {
            type = 'string';
        }
        else if (fieldType === Number || fieldType === SimpleSchema.Integer) {
            type = 'number';
        }
        else if (fieldType === Boolean) {
            type = 'boolean';
        }
        else if (fieldType === Date) {
            type = 'date';
        }
        else if (fieldType === Array) {
            const arrayItemFieldSchema = this.schema(`${key}.$`);
            if (arrayItemFieldSchema == null)
                return;
            const arrayItemFieldType = (arrayItemFieldSchema.type).singleType;
            if (arrayItemFieldType === String) {
                type = 'stringArray';
            }
            else if (arrayItemFieldType === Number ||
                arrayItemFieldType === SimpleSchema.Integer) {
                type = 'numberArray';
            }
            else if (arrayItemFieldType === Boolean) {
                type = 'booleanArray';
            }
            else if (arrayItemFieldType === Date) {
                type = 'dateArray';
            }
            else if (arrayItemFieldType === Object ||
                SimpleSchema.isSimpleSchema(arrayItemFieldType)) {
                type = 'objectArray';
            }
        }
        else if (fieldType === Object) {
            type = 'object';
        }
        return type;
    }
    /**
     * Given a key that is an Object, returns a new SimpleSchema instance scoped to that object.
     *
     * @param key Generic or specific schema key
     */
    getObjectSchema(key) {
        const newSchemaDef = {};
        const genericKey = mongo_object_1.default.makeKeyGeneric(key);
        if (genericKey == null)
            throw new Error(`Unable to make a generic key for ${key}`);
        const searchString = `${genericKey}.`;
        const mergedSchema = this.mergedSchema();
        Object.keys(mergedSchema).forEach((k) => {
            if (k.indexOf(searchString) === 0) {
                newSchemaDef[k.slice(searchString.length)] = mergedSchema[k];
            }
        });
        return this._copyWithSchema(newSchemaDef);
    }
    // Returns an array of all the autovalue functions, including those in subschemas all the
    // way down the schema tree
    autoValueFunctions() {
        const result = [...this._autoValues];
        this._schemaKeys.forEach((key) => {
            this._schema[key].type.definitions.forEach((typeDef) => {
                if (!SimpleSchema.isSimpleSchema(typeDef.type))
                    return;
                result.push(...typeDef.type
                    .autoValueFunctions()
                    .map(({ func, fieldName, closestSubschemaFieldName }) => {
                    return {
                        func,
                        fieldName: `${key}.${fieldName}`,
                        closestSubschemaFieldName: closestSubschemaFieldName.length > 0
                            ? `${key}.${closestSubschemaFieldName}`
                            : key
                    };
                }));
            });
        });
        return result;
    }
    // Returns an array of all the blackbox keys, including those in subschemas
    blackboxKeys() {
        const blackboxKeys = new Set(this._blackboxKeys);
        this._schemaKeys.forEach((key) => {
            this._schema[key].type.definitions.forEach((typeDef) => {
                if (!SimpleSchema.isSimpleSchema(typeDef.type))
                    return;
                typeDef.type.blackboxKeys().forEach((blackboxKey) => {
                    blackboxKeys.add(`${key}.${blackboxKey}`);
                });
            });
        });
        return Array.from(blackboxKeys);
    }
    /**
     * Check if the key is a nested dot-syntax key inside of a blackbox object
     * @param key Key to check
     * @returns True if key is in a black box object
     */
    keyIsInBlackBox(key) {
        const genericKey = mongo_object_1.default.makeKeyGeneric(key);
        if (genericKey == null)
            return false;
        let isInBlackBox = false;
        (0, index_js_1.forEachKeyAncestor)(genericKey, (ancestor, remainder) => {
            if (this._blackboxKeys.has(ancestor)) {
                isInBlackBox = true;
            }
            else {
                const testKeySchema = this.schema(ancestor);
                if (testKeySchema != null) {
                    testKeySchema.type.definitions.forEach((typeDef) => {
                        if (!SimpleSchema.isSimpleSchema(typeDef.type))
                            return;
                        if (typeDef.type.keyIsInBlackBox(remainder))
                            isInBlackBox = true;
                    });
                }
            }
        });
        return isInBlackBox;
    }
    // Returns true if key is explicitly allowed by the schema or implied
    // by other explicitly allowed keys.
    // The key string should have $ in place of any numeric array positions.
    allowsKey(key) {
        // Loop through all keys in the schema
        return this._schemaKeys.some((loopKey) => {
            var _a;
            // If the schema key is the test key, it's allowed.
            if (loopKey === key)
                return true;
            const compare1 = key.slice(0, loopKey.length + 2);
            const compare2 = compare1.slice(0, -1);
            // Blackbox and subschema checks are needed only if key starts with
            // loopKey + a dot
            if (compare2 !== `${loopKey}.`)
                return false;
            // Black box handling
            if (this._blackboxKeys.has(loopKey)) {
                // If the test key is the black box key + ".$", then the test
                // key is NOT allowed because black box keys are by definition
                // only for objects, and not for arrays.
                return compare1 !== `${loopKey}.$`;
            }
            // Subschemas
            let allowed = false;
            const subKey = key.slice(loopKey.length + 1);
            (_a = this.schema(loopKey)) === null || _a === void 0 ? void 0 : _a.type.definitions.forEach((typeDef) => {
                if (!SimpleSchema.isSimpleSchema(typeDef.type))
                    return;
                if (typeDef.type.allowsKey(subKey))
                    allowed = true;
            });
            return allowed;
        });
    }
    /**
     * Returns all the child keys for the object identified by the generic prefix,
     * or all the top level keys if no prefix is supplied.
     *
     * @param [keyPrefix] The Object-type generic key for which to get child keys. Omit for
     *   top-level Object-type keys
     * @returns Array of child keys for the given object key
     */
    objectKeys(keyPrefix) {
        var _a;
        if (keyPrefix == null)
            return this._firstLevelSchemaKeys;
        const objectKeys = {};
        const setObjectKeys = (curSchema, schemaParentKey) => {
            Object.keys(curSchema).forEach((fieldName) => {
                var _a;
                const definition = curSchema[fieldName];
                fieldName = schemaParentKey != null ? `${schemaParentKey}.${fieldName}` : fieldName;
                if (fieldName.includes('.') && fieldName.slice(-2) !== '.$') {
                    const parentKey = fieldName.slice(0, fieldName.lastIndexOf('.'));
                    const parentKeyWithDot = `${parentKey}.`;
                    objectKeys[parentKeyWithDot] = (_a = objectKeys[parentKeyWithDot]) !== null && _a !== void 0 ? _a : [];
                    objectKeys[parentKeyWithDot].push(fieldName.slice(fieldName.lastIndexOf('.') + 1));
                }
                // If the current field is a nested SimpleSchema,
                // iterate over the child fields and cache their properties as well
                definition.type.definitions.forEach(({ type }) => {
                    if (SimpleSchema.isSimpleSchema(type)) {
                        setObjectKeys(type._schema, fieldName);
                    }
                });
            });
        };
        setObjectKeys(this._schema);
        return (_a = objectKeys[`${keyPrefix}.`]) !== null && _a !== void 0 ? _a : [];
    }
    /**
     * Copies this schema into a new instance with the same validators, messages,
     * and options, but with different keys as defined in `schema` argument
     *
     * @param schema
     * @returns The new SimpleSchema instance (chainable)
     */
    _copyWithSchema(schema) {
        const cl = new SimpleSchema(schema, Object.assign({}, this._constructorOptions));
        cl._cleanOptions = this._cleanOptions;
        return cl;
    }
    /**
     * Clones this schema into a new instance with the same schema keys, validators,
     * and options.
     *
     * @returns The new SimpleSchema instance (chainable)
     */
    clone() {
        return this._copyWithSchema(this._schema);
    }
    /**
     * Extends (mutates) this schema with another schema, key by key.
     *
     * @param schema The schema or schema definition to extend onto this one
     * @returns The SimpleSchema instance (chainable)
     */
    extend(schema = {}) {
        if (Array.isArray(schema)) {
            throw new Error('You may not pass an array of schemas to the SimpleSchema constructor or to extend()');
        }
        let schemaObj;
        if (SimpleSchema.isSimpleSchema(schema)) {
            schemaObj = schema._schema;
            this._validators = this._validators.concat(schema._validators);
            this._docValidators = this._docValidators.concat(schema._docValidators);
            Object.assign(this._cleanOptions, schema._cleanOptions);
            Object.assign(this._constructorOptions, schema._constructorOptions);
        }
        else {
            schemaObj = (0, expandShorthand_js_1.default)(schema);
        }
        const schemaKeys = Object.keys(schemaObj);
        const combinedKeys = new Set([...Object.keys(this._schema), ...schemaKeys]);
        // Update all of the information cached on the instance
        schemaKeys.forEach((fieldName) => {
            const definition = standardizeDefinition(schemaObj[fieldName]);
            // Merge/extend with any existing definition
            if (this._schema[fieldName] != null) {
                if (!Object.prototype.hasOwnProperty.call(this._schema, fieldName)) {
                    // fieldName is actually a method from Object itself!
                    throw new Error(`${fieldName} key is actually the name of a method on Object, please rename it`);
                }
                const { type } = definition, definitionWithoutType = __rest(definition, ["type"]); // eslint-disable-line no-unused-vars
                this._schema[fieldName] = Object.assign(Object.assign({}, this._schema[fieldName]), definitionWithoutType);
                if (definition.type != null) {
                    this._schema[fieldName].type.extend(definition.type);
                }
            }
            else {
                this._schema[fieldName] = definition;
            }
            checkAndScrubDefinition(fieldName, this._schema[fieldName], this._constructorOptions, combinedKeys);
        });
        checkSchemaOverlap(this._schema);
        // Set/Reset all of these
        this._schemaKeys = Object.keys(this._schema);
        this._autoValues = [];
        this._blackboxKeys = new Set();
        this._firstLevelSchemaKeys = [];
        // Update all of the information cached on the instance
        this._schemaKeys.forEach((fieldName) => {
            // Make sure parent has a definition in the schema. No implied objects!
            if (fieldName.includes('.')) {
                const parentFieldName = fieldName.slice(0, fieldName.lastIndexOf('.'));
                if (!Object.prototype.hasOwnProperty.call(this._schema, parentFieldName)) {
                    throw new Error(`"${fieldName}" is in the schema but "${parentFieldName}" is not`);
                }
            }
            const definition = this._schema[fieldName];
            // Keep list of all top level keys
            if (!fieldName.includes('.')) {
                this._firstLevelSchemaKeys.push(fieldName);
            }
            // Keep list of all blackbox keys for passing to MongoObject constructor
            // XXX For now if any oneOf type is blackbox, then the whole field is.
            /* eslint-disable no-restricted-syntax */
            for (const oneOfDef of definition.type.definitions) {
                // XXX If the type is SS.Any, also consider it a blackbox
                if (oneOfDef.blackbox === true || oneOfDef.type === SimpleSchema.Any) {
                    this._blackboxKeys.add(fieldName);
                    break;
                }
            }
            /* eslint-enable no-restricted-syntax */
            // Keep list of autoValue functions
            if (typeof definition.autoValue === 'function') {
                this._autoValues.push({
                    closestSubschemaFieldName: '',
                    fieldName,
                    func: definition.autoValue
                });
            }
        });
        return this;
    }
    getAllowedValuesForKey(key) {
        // For array fields, `allowedValues` is on the array item definition
        if (this.allowsKey(`${key}.$`)) {
            key = `${key}.$`;
        }
        const allowedValues = this.get(key, 'allowedValues');
        if (Array.isArray(allowedValues) || allowedValues instanceof Set) {
            return [...allowedValues];
        }
        return null;
    }
    newContext() {
        return new ValidationContext_js_1.default(this);
    }
    namedContext(name) {
        if (typeof name !== 'string')
            name = 'default';
        if (this._validationContexts[name] == null) {
            this._validationContexts[name] = new ValidationContext_js_1.default(this, name);
        }
        return this._validationContexts[name];
    }
    addValidator(func) {
        this._validators.push(func);
    }
    addDocValidator(func) {
        this._docValidators.push(func);
    }
    /**
     * @param obj Object or array of objects to validate.
     * @param options Same options object that ValidationContext#validate takes
     *
     * Throws an Error with name `ClientError` and `details` property containing the errors.
     */
    validate(obj, options = {}) {
        // obj can be an array, in which case we validate each object in it and
        // throw as soon as one has an error
        const objects = Array.isArray(obj) ? obj : [obj];
        objects.forEach((oneObj) => {
            const validationContext = this.newContext();
            const isValid = validationContext.validate(oneObj, options);
            if (isValid)
                return;
            const errors = validationContext.validationErrors();
            // In order for the message at the top of the stack trace to be useful,
            // we set it to the first validation error message.
            const message = this.messageForError(errors[0]);
            const error = new errors_js_1.ClientError(message, 'validation-error');
            // Add meaningful error messages for each validation error.
            // Useful for display messages when using 'mdg:validated-method'.
            error.details = errors.map((errorDetail) => (Object.assign(Object.assign({}, errorDetail), { message: this.messageForError(errorDetail) })));
            // The primary use for the validationErrorTransform is to convert the
            // vanilla Error into a Meteor.Error until DDP is able to pass
            // vanilla errors back to the client.
            if (typeof SimpleSchema.validationErrorTransform === 'function') {
                throw SimpleSchema.validationErrorTransform(error);
            }
            else {
                throw error;
            }
        });
    }
    /**
     * @param obj Object to validate.
     * @param options Same options object that ValidationContext#validate takes
     *
     * Returns a Promise that resolves with the errors
     */
    validateAndReturnErrorsPromise(obj, options) {
        return __awaiter(this, void 0, void 0, function* () {
            const validationContext = this.newContext();
            const isValid = validationContext.validate(obj, options);
            if (isValid)
                return [];
            // Add the `message` prop
            return validationContext.validationErrors().map((errorDetail) => {
                return Object.assign(Object.assign({}, errorDetail), { message: this.messageForError(errorDetail) });
            });
        });
    }
    // eslint-disable-next-line @typescript-eslint/no-invalid-void-type
    validator(options = {}) {
        return (obj) => {
            const { clean, returnErrorsPromise } = options, validationOptions = __rest(options
            // Do this here and pass into both functions for better performance
            , ["clean", "returnErrorsPromise"]);
            // Do this here and pass into both functions for better performance
            const mongoObject = new mongo_object_1.default(obj, this.blackboxKeys());
            if (clean === true) {
                this.clean(obj, { mongoObject });
            }
            return returnErrorsPromise === true ? this.validateAndReturnErrorsPromise(obj, Object.assign(Object.assign({}, validationOptions), { mongoObject })) : this.validate(obj, Object.assign(Object.assign({}, validationOptions), { mongoObject }));
        };
    }
    // eslint-disable-next-line @typescript-eslint/no-invalid-void-type
    getFormValidator(options = {}) {
        return this.validator(Object.assign(Object.assign({}, options), { returnErrorsPromise: true }));
    }
    clean(doc, options = {}) {
        return (0, clean_js_1.default)(this, doc, options);
    }
    /**
     * Change schema labels on the fly. Useful when the user changes the language.
     *
     * @param labels A dictionary of all the new label values, by schema key.
     */
    labels(labels) {
        for (const [key, label] of Object.entries(labels)) {
            if (typeof label !== 'string' && typeof label !== 'function')
                continue;
            // Support setting labels that were actually originally defined in a sub-schema
            const [schemaInstance, innerKey] = this.nearestSimpleSchemaInstance(key);
            if (schemaInstance == null || innerKey == null)
                continue;
            schemaInstance._schema[innerKey].label = label;
        }
    }
    label(key) {
        // Get all labels
        if (key === null || key === undefined) {
            const result = {};
            this._schemaKeys.forEach((schemaKey) => {
                result[schemaKey] = this.label(schemaKey);
            });
            return result;
        }
        // Get label for one field
        const label = this.get(key, 'label');
        return label !== null && label !== void 0 ? label : null;
    }
    /**
     * Gets a field's property
     *
     * @param key The schema key, specific or generic.
     * @param prop Name of the property to get for that schema key
     * @param functionContext The `this` context to use if prop is a function
     * @returns The property value
     */
    get(key, prop, functionContext) {
        const def = this.getDefinition(key, ['type', prop], functionContext);
        if (def == null)
            return undefined;
        if (exports.schemaDefinitionOptions.includes(prop)) {
            return def[prop];
        }
        const oneType = def.type[0];
        if (oneType === SimpleSchema.Any)
            return undefined;
        return oneType === null || oneType === void 0 ? void 0 : oneType[prop];
    }
    // shorthand for getting defaultValue
    defaultValue(key) {
        return this.get(key, 'defaultValue');
    }
    // Returns a string message for the given error type and key.
    // Defers to a user-provided getErrorMessage function, which
    // can do custom messages and translations, or falls back to
    // built-in English defaults.
    messageForError(errorInfo) {
        var _a, _b;
        const { name } = errorInfo;
        const label = this.label(name);
        let message;
        if (this._constructorOptions.getErrorMessage !== undefined) {
            message = this._constructorOptions.getErrorMessage(errorInfo, label);
            if (message !== undefined)
                return message;
        }
        if (((_a = globalThis.simpleSchemaGlobalConfig) === null || _a === void 0 ? void 0 : _a.getErrorMessage) !== undefined) {
            message = (_b = globalThis.simpleSchemaGlobalConfig) === null || _b === void 0 ? void 0 : _b.getErrorMessage(errorInfo, label);
            if (message !== undefined)
                return message;
        }
        return (0, defaultMessages_js_1.getDefaultErrorMessage)(errorInfo, label);
    }
    /**
     * If you need to allow properties other than those listed above, call this from your app or package
     * @param options Additional allowed options
     */
    static extendOptions(options) {
        exports.schemaDefinitionOptions.push(...options);
    }
    static defineValidationErrorTransform(transform) {
        if (typeof transform !== 'function') {
            throw new Error('SimpleSchema.defineValidationErrorTransform must be passed a function that accepts an Error and returns an Error');
        }
        SimpleSchema.validationErrorTransform = transform;
    }
    static validate(obj, schema, options) {
        // Allow passing just the schema object
        if (!SimpleSchema.isSimpleSchema(schema)) {
            schema = new SimpleSchema(schema);
        }
        return schema.validate(obj, options);
    }
    static oneOf(...definitions) {
        return new SimpleSchemaGroup_js_1.default(...definitions);
    }
    static addValidator(func) {
        SimpleSchema._validators.push(func);
    }
    static addDocValidator(func) {
        SimpleSchema._docValidators.push(func);
    }
    /**
     * @summary Get/set default values for SimpleSchema constructor options
     */
    static constructorOptionDefaults(options) {
        var _a;
        if (options == null)
            return SimpleSchema._constructorOptionDefaults;
        SimpleSchema._constructorOptionDefaults = Object.assign(Object.assign(Object.assign({}, SimpleSchema._constructorOptionDefaults), options), { clean: Object.assign(Object.assign({}, SimpleSchema._constructorOptionDefaults.clean), ((_a = options.clean) !== null && _a !== void 0 ? _a : {})) });
    }
}
exports.SimpleSchema = SimpleSchema;
/**
 * Packages that want to allow and check additional options
 * should add the option names to this set.
 */
SimpleSchema.supportedConstructorOptions = new Set([
    'clean',
    'getErrorMessage',
    'humanizeAutoLabels',
    'keepRawDefinition',
    'requiredByDefault',
    'defaultLabel'
]);
/**
 * Packages that want to allow and check additional options
 * should add the option names to this set.
 */
SimpleSchema.supportedCleanOptions = new Set([
    'autoConvert',
    'extendAutoValueContext',
    'filter',
    'getAutoValues',
    'isModifier',
    'isUpsert',
    'mongoObject',
    'mutate',
    'removeEmptyStrings',
    'removeNullsFromArrays',
    'trimStrings'
]);
SimpleSchema.version = 2;
// Global constructor options
SimpleSchema._constructorOptionDefaults = {
    clean: {
        autoConvert: true,
        extendAutoValueContext: {},
        filter: true,
        getAutoValues: true,
        removeEmptyStrings: true,
        removeNullsFromArrays: false,
        trimStrings: true
    },
    humanizeAutoLabels: true,
    requiredByDefault: true
};
SimpleSchema._docValidators = [];
SimpleSchema._validators = [];
SimpleSchema.Any = '___Any___';
SimpleSchema.ErrorTypes = {
    REQUIRED: 'required',
    MIN_STRING: 'minString',
    MAX_STRING: 'maxString',
    MIN_NUMBER: 'minNumber',
    MAX_NUMBER: 'maxNumber',
    MIN_NUMBER_EXCLUSIVE: 'minNumberExclusive',
    MAX_NUMBER_EXCLUSIVE: 'maxNumberExclusive',
    MIN_DATE: 'minDate',
    MAX_DATE: 'maxDate',
    BAD_DATE: 'badDate',
    MIN_COUNT: 'minCount',
    MAX_COUNT: 'maxCount',
    MUST_BE_INTEGER: 'noDecimal',
    VALUE_NOT_ALLOWED: 'notAllowed',
    EXPECTED_TYPE: 'expectedType',
    FAILED_REGULAR_EXPRESSION: 'regEx',
    KEY_NOT_IN_SCHEMA: 'keyNotInSchema'
};
SimpleSchema.Integer = 'SimpleSchema.Integer';
SimpleSchema.ValidationContext = ValidationContext_js_1.default;
/*
 * PRIVATE
 */
// Throws an error if any fields are `type` SimpleSchema but then also
// have subfields defined outside of that.
function checkSchemaOverlap(schema) {
    Object.keys(schema).forEach((key) => {
        const val = schema[key];
        if (val.type == null)
            throw new Error(`${key} key is missing "type"`);
        val.type.definitions.forEach((def) => {
            if (!SimpleSchema.isSimpleSchema(def.type))
                return;
            // @ts-expect-error
            Object.keys(def.type._schema).forEach((subKey) => {
                const newKey = `${key}.${subKey}`;
                if (Object.prototype.hasOwnProperty.call(schema, newKey)) {
                    throw new Error(`The type for "${key}" is set to a SimpleSchema instance that defines "${key}.${subKey}", but the parent SimpleSchema instance also tries to define "${key}.${subKey}"`);
                }
            });
        });
    });
}
/**
 * @param fieldName The full generic schema key
 * @param shouldHumanize Humanize it
 * @returns A label based on the key
 */
function inflectedLabel(fieldName, shouldHumanize = false) {
    const pieces = fieldName.split('.');
    let label;
    do {
        label = pieces.pop();
    } while (label === '$' && (pieces.length > 0));
    return (label != null && shouldHumanize) ? (0, index_js_1.humanize)(label) : (label !== null && label !== void 0 ? label : '');
}
function getDefaultAutoValueFunction(defaultValue) {
    return function defaultAutoValueFunction() {
        if (this.isSet)
            return;
        if (this.operator === null)
            return defaultValue;
        // Handle the case when pulling an object from an array the object contains a field
        // which has a defaultValue. We don't want the default value to be returned in this case
        if (this.operator === '$pull')
            return;
        // Handle the case where we are $pushing an object into an array of objects and we
        // want any fields missing from that object to be added if they have default values
        if (this.operator === '$push')
            return defaultValue;
        // If parent is set, we should update this position instead of $setOnInsert
        if (this.parentField().isSet)
            return defaultValue;
        // Make sure the default value is added on upsert insert
        if (this.isUpsert)
            return { $setOnInsert: defaultValue };
    };
}
// Mutates def into standardized object with SimpleSchemaGroup type
function standardizeDefinition(def) {
    const standardizedDef = {};
    for (const prop of Object.keys(def)) {
        if (!oneOfProps.includes(prop)) {
            // @ts-expect-error Copying properties
            standardizedDef[prop] = def[prop];
        }
    }
    // Internally, all definition types are stored as groups for simplicity of access.
    // If we are extending, there may not actually be def.type, but it's okay because
    // it will be added later when the two SimpleSchemaGroups are merged.
    if (def.type instanceof SimpleSchemaGroup_js_1.default) {
        standardizedDef.type = def.type.clone();
    }
    else {
        const groupProps = {};
        for (const prop of Object.keys(def)) {
            if (oneOfProps.includes(prop)) {
                // @ts-expect-error Copying properties
                groupProps[prop] = def[prop];
            }
        }
        standardizedDef.type = new SimpleSchemaGroup_js_1.default(groupProps);
    }
    return standardizedDef;
}
/**
 * @summary Checks and mutates definition. Clone it first.
 *   Throws errors if any problems are found.
 * @param fieldName Name of field / key
 * @param definition Field definition
 * @param options Options
 * @param allKeys Set of all field names / keys in entire schema
 */
function checkAndScrubDefinition(fieldName, definition, options, allKeys) {
    var _a;
    if (definition.type == null)
        throw new Error(`${fieldName} key is missing "type"`);
    // Validate the field definition
    Object.keys(definition).forEach((key) => {
        if (!exports.schemaDefinitionOptions.includes(key)) {
            throw new Error(`Invalid definition for ${fieldName} field: "${key}" is not a supported property`);
        }
    });
    // Make sure the `type`s are OK
    let couldBeArray = false;
    definition.type.definitions.forEach(({ type }) => {
        if (type == null) {
            throw new Error(`Invalid definition for ${fieldName} field: "type" option is required`);
        }
        if (Array.isArray(type)) {
            throw new Error(`Invalid definition for ${fieldName} field: "type" may not be an array. Change it to Array.`);
        }
        if (type.constructor === Object && (0, index_js_1.isEmptyObject)(type)) {
            throw new Error(`Invalid definition for ${fieldName} field: "type" may not be an object. Change it to Object`);
        }
        if (type === Array)
            couldBeArray = true;
        if (SimpleSchema.isSimpleSchema(type)) {
            // @ts-expect-error
            Object.keys(type._schema).forEach((subKey) => {
                const newKey = `${fieldName}.${subKey}`;
                if (allKeys.has(newKey)) {
                    throw new Error(`The type for "${fieldName}" is set to a SimpleSchema instance that defines "${newKey}", but the parent SimpleSchema instance also tries to define "${newKey}"`);
                }
            });
        }
    });
    // If at least one of the possible types is Array, then make sure we have a
    // definition for the array items, too.
    if (couldBeArray && !allKeys.has(`${fieldName}.$`)) {
        throw new Error(`"${fieldName}" is Array type but the schema does not include a "${fieldName}.$" definition for the array items"`);
    }
    // defaultValue -> autoValue
    // We support defaultValue shortcut by converting it immediately into an
    // autoValue.
    if ('defaultValue' in definition) {
        if ('autoValue' in definition && ((_a = definition.autoValue) === null || _a === void 0 ? void 0 : _a.isDefault) !== true) {
            console.warn(`SimpleSchema: Found both autoValue and defaultValue options for "${fieldName}". Ignoring defaultValue.`);
        }
        else {
            if (fieldName.endsWith('.$')) {
                throw new Error('An array item field (one that ends with ".$") cannot have defaultValue.');
            }
            definition.autoValue = getDefaultAutoValueFunction(definition.defaultValue);
            definition.autoValue.isDefault = true;
        }
    }
    // REQUIREDNESS
    if (fieldName.endsWith('.$')) {
        definition.optional = true;
    }
    else if (!Object.prototype.hasOwnProperty.call(definition, 'optional')) {
        if (Object.prototype.hasOwnProperty.call(definition, 'required')) {
            if (typeof definition.required === 'function') {
                // Save a reference to the `required` fn because
                // we are going to delete it from `definition` below
                const requiredFn = definition.required;
                definition.optional = function optional(...args) {
                    return !requiredFn.apply(this, args);
                };
            }
            else {
                definition.optional = definition.required !== true;
            }
        }
        else {
            definition.optional = options.requiredByDefault === false;
        }
    }
    delete definition.required;
    // LABELS
    if (!Object.prototype.hasOwnProperty.call(definition, 'label')) {
        if (options.defaultLabel != null) {
            definition.label = options.defaultLabel;
        }
        else if (SimpleSchema.defaultLabel != null) {
            definition.label = SimpleSchema.defaultLabel;
        }
        else {
            definition.label = inflectedLabel(fieldName, options.humanizeAutoLabels);
        }
    }
}
function getPickOrOmit(type) {
    return function pickOrOmit(...args) {
        // If they are picking/omitting an object or array field, we need to also include everything under it
        const newSchema = {};
        // @ts-expect-error
        this._schemaKeys.forEach((key) => {
            // Pick/omit it if it IS in the array of keys they want OR if it
            // STARTS WITH something that is in the array plus a period
            const includeIt = args.some((wantedField) => key === wantedField || key.indexOf(`${wantedField}.`) === 0);
            if ((includeIt && type === 'pick') || (!includeIt && type === 'omit')) {
                // @ts-expect-error
                newSchema[key] = this._schema[key];
            }
        });
        return this._copyWithSchema(newSchema);
    };
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"defaultMessages.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/defaultMessages.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefaultErrorMessage = void 0;
const defaultMessages = {
    badDate: (_, label) => `${String(label)} is not a valid date`,
    expectedType: ({ dataType }, label) => `${String(label)} must be of type ${String(dataType)}`,
    keyNotInSchema: ({ name }) => `${name} is not allowed by the schema`,
    maxCount: ({ maxCount }) => `You cannot specify more than ${String(maxCount)} values`,
    maxDate: ({ max }, label) => `${String(label)} cannot be after ${String(max)}`,
    maxNumber: ({ max }, label) => `${String(label)} cannot exceed ${String(max)}`,
    maxNumberExclusive: ({ max }, label) => `${String(label)} must be less than ${String(max)}`,
    maxString: ({ max }, label) => `${String(label)} cannot exceed ${String(max)} characters`,
    minCount: ({ minCount }) => `You must specify at least ${String(minCount)} values`,
    minDate: ({ min }, label) => `${String(label)} must be on or after ${String(min)}`,
    minNumber: ({ min }, label) => `${String(label)} must be at least ${String(min)}`,
    minNumberExclusive: ({ min }, label) => `${String(label)} must be greater than ${String(min)}`,
    minString: ({ min }, label) => `${String(label)} must be at least ${String(min)} characters`,
    noDecimal: (_, label) => `${String(label)} must be an integer`,
    notAllowed: ({ value }) => `${String(value)} is not an allowed value`,
    regEx: (_, label) => `${String(label)} failed regular expression validation`,
    required: (_, label) => `${String(label)} is required`
};
function getDefaultErrorMessage(errorInfo, label) {
    const msgFn = defaultMessages[errorInfo.type];
    return typeof msgFn === 'function' ? msgFn(errorInfo, label) : `${errorInfo.type} ${errorInfo.name}`;
}
exports.getDefaultErrorMessage = getDefaultErrorMessage;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"errors.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/errors.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClientError = void 0;
class ClientError extends Error {
    constructor(message, error) {
        super(message);
        this.errorType = 'ClientError';
        this.name = 'ClientError';
        this.error = error;
    }
}
exports.ClientError = ClientError;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"expandShorthand.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/expandShorthand.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongo_object_1 = __importDefault(require("mongo-object"));
/**
 * Clones a schema object, expanding shorthand as it does it.
 */
function expandShorthand(schema) {
    const schemaClone = {};
    Object.keys(schema).forEach((key) => {
        const definition = schema[key];
        // CASE 1: Not shorthand. Just clone
        if (mongo_object_1.default.isBasicObject(definition)) {
            // @ts-expect-error We're pretty sure it's correct
            schemaClone[key] = Object.assign({}, definition);
            return;
        }
        // CASE 2: The definition is an array of some type
        if (Array.isArray(definition)) {
            if (Array.isArray(definition[0])) {
                throw new Error(`Array shorthand may only be used to one level of depth (${key})`);
            }
            const type = definition[0];
            schemaClone[key] = { type: Array };
            // Also add the item key definition
            const itemKey = `${key}.$`;
            if (schema[itemKey] !== undefined) {
                throw new Error(`Array shorthand used for ${key} field but ${key}.$ key is already in the schema`);
            }
            if (type instanceof RegExp) {
                schemaClone[itemKey] = { type: String, regEx: type };
            }
            else {
                schemaClone[itemKey] = { type };
            }
            return;
        }
        // CASE 3: The definition is a regular expression
        if (definition instanceof RegExp) {
            schemaClone[key] = {
                type: String,
                regEx: definition
            };
            return;
        }
        // CASE 4: The definition is something, a type
        schemaClone[key] = { type: definition };
    });
    return schemaClone;
}
exports.default = expandShorthand;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"SimpleSchemaGroup.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/SimpleSchemaGroup.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongo_object_1 = __importDefault(require("mongo-object"));
class SimpleSchemaGroup {
    constructor(...definitions) {
        this.definitions = [];
        this.definitions = definitions.map((definition) => {
            if (mongo_object_1.default.isBasicObject(definition)) {
                return Object.assign({}, definition);
            }
            if (definition instanceof RegExp) {
                return {
                    type: String,
                    regEx: definition
                };
            }
            return { type: definition };
        });
    }
    get singleType() {
        return this.definitions[0].type;
    }
    clone() {
        return new SimpleSchemaGroup(...this.definitions);
    }
    extend(otherGroup) {
        // We extend based on index being the same. No better way I can think of at the moment.
        this.definitions = this.definitions.map((def, index) => {
            const otherDef = otherGroup.definitions[index];
            if (otherDef === undefined)
                return def;
            return Object.assign(Object.assign({}, def), otherDef);
        });
    }
}
exports.default = SimpleSchemaGroup;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"utility":{"index.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/utility/index.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.humanize = exports.looksLikeModifier = exports.isObjectWeShouldTraverse = exports.isEmptyObject = exports.getParentOfKey = exports.getLastPartOfKey = exports.getKeysWithValueInObj = exports.forEachKeyAncestor = exports.dateToDateString = exports.appendAffectedKey = void 0;
function appendAffectedKey(affectedKey, key) {
    if (key === '$each')
        return affectedKey;
    return affectedKey == null ? key : `${affectedKey}.${key}`;
}
exports.appendAffectedKey = appendAffectedKey;
/**
 * Given a Date instance, returns a date string of the format YYYY-MM-DD
 */
function dateToDateString(date) {
    let month = date.getUTCMonth() + 1;
    if (month < 10)
        month = `0${month}`;
    let day = date.getUTCDate();
    if (day < 10)
        day = `0${day}`;
    return `${date.getUTCFullYear()}-${month}-${day}`;
}
exports.dateToDateString = dateToDateString;
/**
 * Run loopFunc for each ancestor key in a dot-delimited key. For example,
 * if key is "a.b.c", loopFunc will be called first with ('a.b', 'c') and then with ('a', 'b.c')
 */
function forEachKeyAncestor(key, loopFunc) {
    let lastDot;
    // Iterate the dot-syntax hierarchy
    let ancestor = key;
    do {
        lastDot = ancestor.lastIndexOf('.');
        if (lastDot !== -1) {
            ancestor = ancestor.slice(0, lastDot);
            const remainder = key.slice(ancestor.length + 1);
            loopFunc(ancestor, remainder); // Remove last path component
        }
    } while (lastDot !== -1);
}
exports.forEachKeyAncestor = forEachKeyAncestor;
/**
 * Returns an array of keys that are in obj, have a value
 * other than null or undefined, and start with matchKey
 * plus a dot.
 */
function getKeysWithValueInObj(obj, matchKey) {
    const keysWithValue = [];
    const keyAdjust = (key) => key.slice(0, matchKey.length + 1);
    const matchKeyPlusDot = `${matchKey}.`;
    Object.keys(obj !== null && obj !== void 0 ? obj : {}).forEach((key) => {
        const val = obj[key];
        if (val === undefined || val === null)
            return;
        if (keyAdjust(key) === matchKeyPlusDot) {
            keysWithValue.push(key);
        }
    });
    return keysWithValue;
}
exports.getKeysWithValueInObj = getKeysWithValueInObj;
/**
 * Returns the ending of key, after stripping out the beginning
 * ancestorKey and any array placeholders
 *
 * getLastPartOfKey('a.b.c', 'a') returns 'b.c'
 * getLastPartOfKey('a.b.$.c', 'a.b') returns 'c'
 */
function getLastPartOfKey(key, ancestorKey) {
    let lastPart = '';
    const startString = `${ancestorKey}.`;
    if (key.indexOf(startString) === 0) {
        lastPart = key.replace(startString, '');
        if (lastPart.startsWith('$.'))
            lastPart = lastPart.slice(2);
    }
    return lastPart;
}
exports.getLastPartOfKey = getLastPartOfKey;
/**
 * Returns the parent of a key. For example, returns 'a.b' when passed 'a.b.c'.
 * If no parent, returns an empty string. If withEndDot is true, the return
 * value will have a dot appended when it isn't an empty string.
 */
function getParentOfKey(key, withEndDot = false) {
    const lastDot = key.lastIndexOf('.');
    return lastDot === -1 ? '' : key.slice(0, lastDot + Number(withEndDot));
}
exports.getParentOfKey = getParentOfKey;
/**
 * @summary Determines whether the object has any "own" properties
 * @param {Object} obj Object to test
 * @return {Boolean} True if it has no "own" properties
 */
function isEmptyObject(obj) {
    /* eslint-disable no-restricted-syntax */
    for (const key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            return false;
        }
    }
    /* eslint-enable no-restricted-syntax */
    return true;
}
exports.isEmptyObject = isEmptyObject;
function isObjectWeShouldTraverse(val) {
    // Some of these types don't exist in old browsers so we'll catch and return false in those cases
    try {
        if (val !== Object(val))
            return false;
        // There are some object types that we know we shouldn't traverse because
        // they will often result in overflows and it makes no sense to validate them.
        if (val instanceof Date)
            return false;
        if (val instanceof Int8Array)
            return false;
        if (val instanceof Uint8Array)
            return false;
        if (val instanceof Uint8ClampedArray)
            return false;
        if (val instanceof Int16Array)
            return false;
        if (val instanceof Uint16Array)
            return false;
        if (val instanceof Int32Array)
            return false;
        if (val instanceof Uint32Array)
            return false;
        if (val instanceof Float32Array)
            return false;
        if (val instanceof Float64Array)
            return false;
    }
    catch (e) {
        return false;
    }
    return true;
}
exports.isObjectWeShouldTraverse = isObjectWeShouldTraverse;
/**
 * Returns true if any of the keys of obj start with a $
 */
function looksLikeModifier(obj) {
    return Object.keys(obj !== null && obj !== void 0 ? obj : {}).some((key) => key.substring(0, 1) === '$');
}
exports.looksLikeModifier = looksLikeModifier;
var humanize_js_1 = require("./humanize.js");
Object.defineProperty(exports, "humanize", { enumerable: true, get: function () { return humanize_js_1.humanize; } });

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"humanize.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/utility/humanize.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
/*
  Code source:
    https://github.com/jxson/string-humanize
    https://github.com/jxson/string-capitalize
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.humanize = exports.extname = exports.underscore = exports.capitalize = void 0;
function capitalize(text) {
    text = text !== null && text !== void 0 ? text : '';
    text = text.trim();
    if (text[0] !== undefined) {
        text = text[0].toUpperCase() + text.substr(1).toLowerCase();
    }
    // Do "ID" instead of "id" or "Id"
    text = text.replace(/\bid\b/g, 'ID');
    text = text.replace(/\bId\b/g, 'ID');
    return text;
}
exports.capitalize = capitalize;
function underscore(text) {
    text = text !== null && text !== void 0 ? text : '';
    text = text.toString(); // might be a number
    text = text.trim();
    text = text.replace(/([a-z\d])([A-Z]+)/g, '$1_$2');
    text = text.replace(/[-\s]+/g, '_').toLowerCase();
    return text;
}
exports.underscore = underscore;
function extname(text) {
    const index = text.lastIndexOf('.');
    const ext = text.substring(index, text.length);
    return (index === -1) ? '' : ext;
}
exports.extname = extname;
function humanize(text) {
    text = text !== null && text !== void 0 ? text : '';
    text = text.toString(); // might be a number
    text = text.trim();
    text = text.replace(extname(text), '');
    text = underscore(text);
    text = text.replace(/[\W_]+/g, ' ');
    return capitalize(text);
}
exports.humanize = humanize;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"ValidationContext.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/ValidationContext.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongo_object_1 = __importDefault(require("mongo-object"));
const doValidation_js_1 = __importDefault(require("./doValidation.js"));
const index_js_1 = require("./utility/index.js");
class ValidationContext {
    /**
     * @param schema SimpleSchema instance to use for validation
     * @param name Optional context name, accessible on context.name.
     */
    constructor(schema, name) {
        this._validationErrors = [];
        this.name = name;
        this._simpleSchema = schema;
        this._schema = schema.schema();
        this._schemaKeys = Object.keys(this._schema);
    }
    setValidationErrors(errors) {
        this._validationErrors = errors;
    }
    addValidationErrors(errors) {
        errors.forEach((error) => this._validationErrors.push(error));
    }
    /**
     * Reset the validationErrors array
     */
    reset() {
        this.setValidationErrors([]);
    }
    /**
     * @param key The key to get an error for
     * @param genericKey The generic version of this key, if already known
     * @returns The first validation error for this key, if any
     */
    getErrorForKey(key, genericKey = mongo_object_1.default.makeKeyGeneric(key)) {
        const errors = this._validationErrors;
        const errorForKey = errors.find((error) => error.name === key);
        if (errorForKey != null)
            return errorForKey;
        return errors.find((error) => error.name === genericKey);
    }
    /**
     * @param key The key to check validity for
     * @param genericKey The generic version of this key, if already known
     * @returns True if this key is currently invalid; otherwise false.
     */
    keyIsInvalid(key, genericKey = mongo_object_1.default.makeKeyGeneric(key)) {
        return this.getErrorForKey(key, genericKey) != null;
    }
    /**
     * @param key The key get the first error message for
     * @param genericKey The generic version of this key, if already known
     * @returns The message for the first error for this key, or an empty string
     */
    keyErrorMessage(key, genericKey = mongo_object_1.default.makeKeyGeneric(key)) {
        const errorObj = this.getErrorForKey(key, genericKey);
        if (errorObj == null)
            return '';
        return this._simpleSchema.messageForError(errorObj);
    }
    /**
     * Validates the object against the SimpleSchema and sets an array of error objects
     * @param obj Object to be validated
     * @param options Validation options
     * @returns True if valid; otherwise false
     */
    validate(obj, { extendedCustomContext = {}, ignore: ignoreTypes = [], keys: keysToValidate, modifier: isModifier = false, mongoObject, upsert: isUpsert = false } = {}) {
        // First do some basic checks of the object, and throw errors if necessary
        if (obj == null || (typeof obj !== 'object' && typeof obj !== 'function')) {
            throw new Error('The first argument of validate() must be an object');
        }
        if (!isModifier && (0, index_js_1.looksLikeModifier)(obj)) {
            throw new Error('When the validation object contains mongo operators, you must set the modifier option to true');
        }
        const validationErrors = (0, doValidation_js_1.default)({
            extendedCustomContext,
            ignoreTypes,
            isModifier,
            isUpsert,
            keysToValidate,
            mongoObject,
            obj,
            schema: this._simpleSchema,
            validationContext: this
        });
        if (keysToValidate != null) {
            // We have only revalidated the listed keys, so if there
            // are any other existing errors that are NOT in the keys list,
            // we should keep these errors.
            for (const error of this._validationErrors) {
                const wasValidated = keysToValidate.some((key) => key === error.name || error.name.startsWith(`${key}.`));
                if (!wasValidated)
                    validationErrors.push(error);
            }
        }
        this.setValidationErrors(validationErrors);
        // Return true if it was valid; otherwise, return false
        return validationErrors.length === 0;
    }
    isValid() {
        return this._validationErrors.length === 0;
    }
    validationErrors() {
        return this._validationErrors;
    }
    clean(doc, options = {}) {
        return this._simpleSchema.clean(doc, options);
    }
}
exports.default = ValidationContext;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"doValidation.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/doValidation.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const validateDocument_js_1 = __importDefault(require("./validation/validateDocument.js"));
const validateField_js_1 = __importDefault(require("./validation/validateField.js"));
function shouldCheck(operator) {
    if (operator === '$pushAll') {
        throw new Error('$pushAll is not supported; use $push + $each');
    }
    return !['$pull', '$pullAll', '$pop', '$slice'].includes(operator);
}
function doValidation({ extendedCustomContext, ignoreTypes, isModifier, isUpsert, keysToValidate, mongoObject, obj, schema, validationContext }) {
    const validationErrors = [];
    // Kick off the validation
    if (isModifier) {
        // Loop through operators
        for (const [op, opObj] of Object.entries(obj)) {
            // If non-operators are mixed in, throw error
            if (op.slice(0, 1) !== '$') {
                throw new Error(`Expected '${op}' to be a modifier operator like '$set'`);
            }
            if (!shouldCheck(op))
                continue;
            const presentKeys = Object.keys(opObj);
            const fields = presentKeys.map((opKey) => {
                let value = opObj[opKey];
                if (op === '$push' || op === '$addToSet') {
                    if (typeof value === 'object' && '$each' in value) {
                        value = value.$each;
                    }
                    else {
                        opKey = `${opKey}.0`;
                    }
                }
                return { key: opKey, value };
            });
            // For an upsert, missing props would not be set if an insert is performed,
            // so we check them all with undefined value to force any 'required' checks to fail
            if (isUpsert && (op === '$set' || op === '$setOnInsert')) {
                for (const key of schema.objectKeys()) {
                    if (!presentKeys.includes(key)) {
                        fields.push({ key, value: undefined });
                    }
                }
            }
            for (const field of fields) {
                const fieldErrors = (0, validateField_js_1.default)({
                    affectedKey: field.key,
                    keysToValidate,
                    obj,
                    op,
                    schema,
                    val: field.value,
                    validationContext
                });
                if (fieldErrors.length > 0) {
                    validationErrors.push(...fieldErrors);
                }
            }
        }
    }
    else {
        const fieldErrors = (0, validateField_js_1.default)({
            keysToValidate,
            obj,
            schema,
            val: obj,
            validationContext
        });
        if (fieldErrors.length > 0) {
            validationErrors.push(...fieldErrors);
        }
    }
    const wholeDocumentErrors = (0, validateDocument_js_1.default)({
        extendedCustomContext,
        ignoreTypes,
        isModifier,
        isUpsert,
        keysToValidate,
        mongoObject,
        obj,
        schema,
        validationContext
    });
    if (wholeDocumentErrors.length > 0) {
        validationErrors.push(...wholeDocumentErrors);
    }
    const addedFieldNames = new Set();
    return validationErrors.filter((errObj) => {
        // Remove error types the user doesn't care about
        if ((ignoreTypes === null || ignoreTypes === void 0 ? void 0 : ignoreTypes.includes(errObj.type)) === true)
            return false;
        // Make sure there is only one error per fieldName
        if (addedFieldNames.has(errObj.name))
            return false;
        addedFieldNames.add(errObj.name);
        return true;
    });
}
exports.default = doValidation;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"validation":{"validateDocument.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/validation/validateDocument.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SimpleSchema_js_1 = require("../SimpleSchema.js");
function validateDocument({ extendedCustomContext, ignoreTypes, isModifier, isUpsert, keysToValidate, mongoObject, obj, schema, validationContext }) {
    // @ts-expect-error
    const docValidators = schema._docValidators.concat(
    // @ts-expect-error
    SimpleSchema_js_1.SimpleSchema._docValidators);
    const docValidatorContext = Object.assign({ ignoreTypes,
        isModifier,
        isUpsert,
        keysToValidate,
        mongoObject,
        obj,
        schema,
        validationContext }, (extendedCustomContext !== null && extendedCustomContext !== void 0 ? extendedCustomContext : {}));
    const validationErrors = [];
    for (const docValidator of docValidators) {
        const errors = docValidator.call(docValidatorContext, obj);
        if (!Array.isArray(errors)) {
            throw new Error('Custom doc validator must return an array of error objects');
        }
        if (errors.length > 0) {
            validationErrors.push(...errors);
        }
    }
    return validationErrors;
}
exports.default = validateDocument;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"validateField.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/validation/validateField.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongo_object_1 = __importDefault(require("mongo-object"));
const SimpleSchema_js_1 = require("../SimpleSchema.js");
const index_js_1 = require("../utility/index.js");
const allowedValuesValidator_js_1 = __importDefault(require("./allowedValuesValidator.js"));
const requiredValidator_js_1 = __importDefault(require("./requiredValidator.js"));
const index_js_2 = __importDefault(require("./typeValidator/index.js"));
function shouldValidateKey({ affectedKey, affectedKeyGeneric, keysToValidate }) {
    if (keysToValidate == null)
        return true;
    return keysToValidate.some((keyToValidate) => {
        var _a, _b;
        return keyToValidate === affectedKey ||
            keyToValidate === affectedKeyGeneric ||
            ((_a = affectedKey === null || affectedKey === void 0 ? void 0 : affectedKey.startsWith(`${keyToValidate}.`)) !== null && _a !== void 0 ? _a : false) ||
            ((_b = affectedKeyGeneric === null || affectedKeyGeneric === void 0 ? void 0 : affectedKeyGeneric.startsWith(`${keyToValidate}.`)) !== null && _b !== void 0 ? _b : false);
    });
}
function shouldCheckValue({ affectedKeyGeneric, isOptional, op, val }) {
    if (op === '$unset')
        return false;
    if (op === '$rename')
        return false;
    if (val === undefined || val === null) {
        return (affectedKeyGeneric === null || affectedKeyGeneric === void 0 ? void 0 : affectedKeyGeneric.slice(-2)) === '.$' &&
            val === null &&
            isOptional !== true;
    }
    return true;
}
function makeGenericKeyOrThrow(key) {
    const genericKey = mongo_object_1.default.makeKeyGeneric(key);
    if (genericKey == null)
        throw new Error(`Failed to get generic key for key "${key}"`);
    return genericKey;
}
/**
 * Validate a single field within an object being validated
 * @returns Array of all validation errors
 */
function validateField(props) {
    const { affectedKey, extendedCustomContext, isInArrayItemObject = false, isInSubObject = false, keysToValidate, obj, op = null, schema, validationContext } = props;
    let { val } = props;
    let affectedKeyGeneric;
    let def;
    const fieldValidationErrors = [];
    let mongoObject;
    function getFieldInfo(key) {
        var _a;
        // Create mongoObject if necessary, cache for speed
        if (mongoObject === undefined)
            mongoObject = new mongo_object_1.default(obj, schema.blackboxKeys());
        const keyInfo = (_a = mongoObject.getInfoForKey(key)) !== null && _a !== void 0 ? _a : {
            operator: null,
            value: undefined
        };
        return Object.assign(Object.assign({}, keyInfo), { isSet: keyInfo.value !== undefined });
    }
    if (affectedKey !== undefined) {
        // When we hit a blackbox key, we don't progress any further
        if (schema.keyIsInBlackBox(affectedKey))
            return [];
        affectedKeyGeneric = makeGenericKeyOrThrow(affectedKey);
        // Prepare the context object for the rule functions
        const fieldParentNameWithEndDot = (0, index_js_1.getParentOfKey)(affectedKey, true);
        const fieldParentName = fieldParentNameWithEndDot.slice(0, -1);
        const functionsContext = Object.assign({ field(fName) {
                return getFieldInfo(fName);
            }, genericKey: affectedKeyGeneric, isInArrayItemObject,
            isInSubObject, isModifier: op != null, isSet: val !== undefined, key: affectedKey, obj, operator: op, parentField() {
                return getFieldInfo(fieldParentName);
            },
            siblingField(fName) {
                return getFieldInfo(fieldParentNameWithEndDot + fName);
            },
            validationContext, value: val }, (extendedCustomContext !== null && extendedCustomContext !== void 0 ? extendedCustomContext : {}));
        if (shouldValidateKey({
            affectedKey,
            affectedKeyGeneric: affectedKeyGeneric !== null && affectedKeyGeneric !== void 0 ? affectedKeyGeneric : undefined,
            keysToValidate
        })) {
            // Perform validation for this key
            for (const currentDef of schema.getDefinitions(affectedKey, null, functionsContext)) {
                def = currentDef;
                // Whenever we try a new possible schema, clear any field errors from the previous tried schema
                fieldValidationErrors.length = 0;
                const validatorContext = Object.assign(Object.assign({}, functionsContext), { addValidationErrors(errors) {
                        errors.forEach((error) => fieldValidationErrors.push(error));
                    }, 
                    // Value checks are not necessary for null or undefined values, except
                    // for non-optional null array items, or for $unset or $rename values
                    valueShouldBeChecked: shouldCheckValue({
                        affectedKeyGeneric: affectedKeyGeneric !== null && affectedKeyGeneric !== void 0 ? affectedKeyGeneric : undefined,
                        isOptional: currentDef.optional,
                        op,
                        val
                    }) });
                // Loop through each of the definitions in the SimpleSchemaGroup.
                // If the value matches any, we are valid and can stop checking the rest.
                for (const [typeIndex, typeDef] of currentDef.type.entries()) {
                    // If the type is SimpleSchema.Any, then it is valid
                    if (typeDef === SimpleSchema_js_1.SimpleSchema.Any)
                        break;
                    const nonAnyTypeDefinition = typeDef;
                    const { type } = currentDef, definitionWithoutType = __rest(currentDef
                    // @ts-expect-error
                    , ["type"]);
                    // @ts-expect-error
                    const finalValidatorContext = Object.assign(Object.assign({}, validatorContext), { 
                        // Take outer definition props like "optional" and "label"
                        // and add them to inner props like "type" and "min"
                        definition: Object.assign(Object.assign({}, definitionWithoutType), nonAnyTypeDefinition) });
                    // Order of these validators is important
                    const customFieldValidator = nonAnyTypeDefinition.custom;
                    const fieldValidators = [
                        requiredValidator_js_1.default,
                        index_js_2.default,
                        allowedValuesValidator_js_1.default,
                        ...(customFieldValidator == null ? [] : [customFieldValidator]),
                        // @ts-expect-error It's fine to access private method from here
                        ...schema._validators,
                        // @ts-expect-error It's fine to access private method from here
                        ...SimpleSchema_js_1.SimpleSchema._validators
                    ];
                    const fieldValidationErrorsForThisType = [];
                    for (const fieldValidator of fieldValidators) {
                        const result = fieldValidator.call(finalValidatorContext);
                        // If the validator returns a string, assume it is the error type.
                        if (typeof result === 'string') {
                            fieldValidationErrorsForThisType.push({
                                name: affectedKey,
                                type: result,
                                value: val
                            });
                        }
                        // If the validator returns an object, assume it is an error object.
                        if (typeof result === 'object' && result !== null) {
                            fieldValidationErrorsForThisType.push(Object.assign({ name: affectedKey, value: val }, result));
                        }
                    }
                    if (val !== undefined && SimpleSchema_js_1.SimpleSchema.isSimpleSchema(nonAnyTypeDefinition.type)) {
                        const itemErrors = validateField({
                            extendedCustomContext,
                            keysToValidate,
                            obj: val,
                            op,
                            schema: nonAnyTypeDefinition.type,
                            val,
                            validationContext
                        });
                        if (itemErrors.length > 0) {
                            fieldValidationErrorsForThisType.push(...itemErrors.map((error) => (Object.assign(Object.assign({}, error), { name: `${affectedKey}.${error.name}` }))));
                        }
                    }
                    // As soon as we find a type for which the value is valid, stop checking more
                    if (fieldValidationErrorsForThisType.length === 0) {
                        // One we have chosen a valid schema, there is no need to validate the
                        // properties of this object because we validated all the way down
                        if (SimpleSchema_js_1.SimpleSchema.isSimpleSchema(nonAnyTypeDefinition.type)) {
                            return fieldValidationErrors;
                        }
                        break;
                    }
                    if (typeIndex === currentDef.type.length - 1) {
                        fieldValidationErrors.push(...fieldValidationErrorsForThisType);
                    }
                }
                // If it's valid with this schema, we don't need to try any more
                if (fieldValidationErrors.length === 0)
                    break;
            }
            // Mark invalid if not found in schema
            if (def == null) {
                // We don't need KEY_NOT_IN_SCHEMA error for $unset and we also don't need to continue
                if (op === '$unset' ||
                    (op === '$currentDate' && affectedKey.endsWith('.$type'))) {
                    return [];
                }
                return [
                    {
                        name: affectedKey,
                        type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.KEY_NOT_IN_SCHEMA,
                        value: val
                    }
                ];
            }
            // For $rename, make sure that the new name is allowed by the schema
            if (op === '$rename' && !schema.allowsKey(val)) {
                return [
                    {
                        name: val,
                        type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.KEY_NOT_IN_SCHEMA,
                        value: null
                    }
                ];
            }
        }
        // Loop through arrays
        if (Array.isArray(val)) {
            for (const [index, itemValue] of val.entries()) {
                const itemErrors = validateField(Object.assign(Object.assign({}, props), { affectedKey: `${affectedKey}.${index}`, val: itemValue }));
                if (itemErrors.length > 0) {
                    fieldValidationErrors.push(...itemErrors);
                }
            }
            return fieldValidationErrors;
        }
    }
    // If affectedKeyGeneric is undefined due to this being the first run of this
    // function, objectKeys will return the top-level keys.
    const childKeys = schema.objectKeys(affectedKeyGeneric !== null && affectedKeyGeneric !== void 0 ? affectedKeyGeneric : undefined);
    // Temporarily convert missing objects to empty objects
    // so that the looping code will be called and required
    // descendent keys can be validated.
    if ((val === undefined || val === null) &&
        ((def == null) || (def.optional !== true && childKeys.length > 0))) {
        val = {};
    }
    // Loop through object keys
    if ((0, index_js_1.isObjectWeShouldTraverse)(val) &&
        // @ts-expect-error
        ((def == null) || !schema._blackboxKeys.has(affectedKey !== null && affectedKey !== void 0 ? affectedKey : ''))) {
        // Check all present keys plus all keys defined by the schema.
        // This allows us to detect extra keys not allowed by the schema plus
        // any missing required keys, and to run any custom functions for other keys.
        for (const key of new Set([...Object.keys(val), ...childKeys])) {
            const childFieldErrors = validateField(Object.assign(Object.assign({}, props), { affectedKey: (0, index_js_1.appendAffectedKey)(affectedKey, key), 
                // If this object is within an array, make sure we check for required as if it's not a modifier
                isInArrayItemObject: (affectedKeyGeneric === null || affectedKeyGeneric === void 0 ? void 0 : affectedKeyGeneric.slice(-2)) === '.$', isInSubObject: true, val: val[key] }));
            if (childFieldErrors.length > 0) {
                fieldValidationErrors.push(...childFieldErrors);
            }
        }
    }
    return fieldValidationErrors;
}
exports.default = validateField;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"allowedValuesValidator.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/validation/allowedValuesValidator.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SimpleSchema_js_1 = require("../SimpleSchema.js");
function allowedValuesValidator() {
    if (!this.valueShouldBeChecked)
        return;
    const { allowedValues } = this.definition;
    if (allowedValues == null)
        return;
    let isAllowed;
    // set defined in scope and allowedValues is its instance
    if (typeof Set === 'function' && allowedValues instanceof Set) {
        // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion
        isAllowed = allowedValues.has(this.value);
    }
    else {
        isAllowed = allowedValues.includes(this.value);
    }
    return isAllowed ? true : SimpleSchema_js_1.SimpleSchema.ErrorTypes.VALUE_NOT_ALLOWED;
}
exports.default = allowedValuesValidator;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"requiredValidator.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/validation/requiredValidator.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SimpleSchema_js_1 = require("../SimpleSchema.js");
const index_js_1 = require("../utility/index.js");
// Check for missing required values. The general logic is this:
// * If the operator is $unset or $rename, it's invalid.
// * If the value is null, it's invalid.
// * If the value is undefined and one of the following are true, it's invalid:
//     * We're validating a key of a sub-object.
//     * We're validating a key of an object that is an array item.
//     * We're validating a document (as opposed to a modifier).
//     * We're validating a key under the $set operator in a modifier, and it's an upsert.
function requiredValidator() {
    const { definition, isInArrayItemObject, isInSubObject, key, obj, operator, value } = this;
    const { optional } = definition;
    if (optional === true)
        return;
    // If value is null, no matter what, we add required
    if (value === null)
        return SimpleSchema_js_1.SimpleSchema.ErrorTypes.REQUIRED;
    // If operator would remove, we add required
    if (operator === '$unset' || operator === '$rename') {
        return SimpleSchema_js_1.SimpleSchema.ErrorTypes.REQUIRED;
    }
    // The rest of these apply only if the value is undefined
    if (value !== undefined)
        return;
    // At this point, if it's a normal, non-modifier object, then a missing value is an error
    if (operator == null)
        return SimpleSchema_js_1.SimpleSchema.ErrorTypes.REQUIRED;
    // Everything beyond this point deals with modifier objects only
    // We can skip the required check for keys that are ancestors of those in $set or
    // $setOnInsert because they will be created by MongoDB while setting.
    const keysWithValueInSet = (0, index_js_1.getKeysWithValueInObj)(obj.$set, key);
    if (keysWithValueInSet.length > 0)
        return;
    const keysWithValueInSetOnInsert = (0, index_js_1.getKeysWithValueInObj)(obj.$setOnInsert, key);
    if (keysWithValueInSetOnInsert.length > 0)
        return;
    // In the case of $set and $setOnInsert, the value may be undefined here
    // but it is set in another operator. So check that first.
    const fieldInfo = this.field(key);
    if (fieldInfo.isSet && fieldInfo.value !== null)
        return;
    // Required if in an array or sub object
    if (isInArrayItemObject || isInSubObject) {
        return SimpleSchema_js_1.SimpleSchema.ErrorTypes.REQUIRED;
    }
    // If we've got this far with an undefined $set or $setOnInsert value, it's a required error.
    if (operator === '$set' || operator === '$setOnInsert') {
        return SimpleSchema_js_1.SimpleSchema.ErrorTypes.REQUIRED;
    }
}
exports.default = requiredValidator;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"typeValidator":{"index.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/validation/typeValidator/index.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isValueTypeValid = exports.checkValueType = void 0;
const SimpleSchema_js_1 = require("../../SimpleSchema.js");
const checkArrayValue_js_1 = __importDefault(require("./checkArrayValue.js"));
const checkDateValue_js_1 = __importDefault(require("./checkDateValue.js"));
const checkNumberValue_js_1 = __importDefault(require("./checkNumberValue.js"));
const checkStringValue_js_1 = __importDefault(require("./checkStringValue.js"));
function checkValueType(info) {
    const { definition: def, operator: op, value, valueShouldBeChecked } = info;
    if (!valueShouldBeChecked)
        return;
    const expectedType = def.type;
    if (expectedType === String)
        return (0, checkStringValue_js_1.default)(def, value);
    if (expectedType === Number)
        return (0, checkNumberValue_js_1.default)(def, value, op, false);
    if (expectedType === SimpleSchema_js_1.SimpleSchema.Integer)
        return (0, checkNumberValue_js_1.default)(def, value, op, true);
    if (expectedType === Boolean) {
        // Is it a boolean?
        if (typeof value === 'boolean')
            return;
        return { type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.EXPECTED_TYPE, dataType: 'Boolean' };
    }
    if (expectedType === Object || SimpleSchema_js_1.SimpleSchema.isSimpleSchema(expectedType)) {
        // Is it an object?
        if (value === Object(value) &&
            typeof value[Symbol.iterator] !== 'function' &&
            !(value instanceof Date)) {
            return;
        }
        return { type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.EXPECTED_TYPE, dataType: 'Object' };
    }
    if (expectedType === Array)
        return (0, checkArrayValue_js_1.default)(def, value);
    if (expectedType instanceof Function) {
        // Generic constructor checks
        if (!(value instanceof expectedType)) {
            // https://docs.mongodb.com/manual/reference/operator/update/currentDate/
            const dateTypeIsOkay = expectedType === Date &&
                op === '$currentDate' &&
                (value === true || JSON.stringify(value) === '{"$type":"date"}');
            if (expectedType !== Date || !dateTypeIsOkay) {
                return {
                    type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.EXPECTED_TYPE,
                    dataType: expectedType.name
                };
            }
        }
        // Date checks
        if (expectedType === Date) {
            // https://docs.mongodb.com/manual/reference/operator/update/currentDate/
            if (op === '$currentDate') {
                return (0, checkDateValue_js_1.default)(def, new Date());
            }
            return (0, checkDateValue_js_1.default)(def, value);
        }
    }
}
exports.checkValueType = checkValueType;
function isValueTypeValid(typeDefinitions, value, operator) {
    return typeDefinitions.some((definition) => {
        const typeValidationError = checkValueType({
            valueShouldBeChecked: true,
            definition,
            value,
            operator
        });
        return typeValidationError === undefined;
    });
}
exports.isValueTypeValid = isValueTypeValid;
function typeValidator() {
    return checkValueType(this);
}
exports.default = typeValidator;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"checkArrayValue.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/validation/typeValidator/checkArrayValue.js                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SimpleSchema_js_1 = require("../../SimpleSchema.js");
function checkArrayValue(def, value) {
    // Is it an array?
    if (!Array.isArray(value)) {
        return { type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.EXPECTED_TYPE, dataType: 'Array' };
    }
    // Are there fewer than the minimum number of items in the array?
    if (def.minCount != null && value.length < def.minCount) {
        return { type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.MIN_COUNT, minCount: def.minCount };
    }
    // Are there more than the maximum number of items in the array?
    if (def.maxCount != null && value.length > def.maxCount) {
        return { type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.MAX_COUNT, maxCount: def.maxCount };
    }
}
exports.default = checkArrayValue;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"checkDateValue.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/validation/typeValidator/checkDateValue.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SimpleSchema_js_1 = require("../../SimpleSchema.js");
const index_js_1 = require("../../utility/index.js");
function checkDateValue(def, value) {
    // Is it an invalid date?
    if (isNaN(value.getTime())) {
        return { type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.BAD_DATE };
    }
    // Is it earlier than the minimum date?
    if (def.min !== undefined &&
        typeof def.min.getTime === 'function' &&
        def.min.getTime() > value.getTime()) {
        return {
            type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.MIN_DATE,
            min: (0, index_js_1.dateToDateString)(def.min)
        };
    }
    // Is it later than the maximum date?
    if (def.max !== undefined &&
        typeof def.max.getTime === 'function' &&
        def.max.getTime() < value.getTime()) {
        return {
            type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.MAX_DATE,
            max: (0, index_js_1.dateToDateString)(def.max)
        };
    }
}
exports.default = checkDateValue;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"checkNumberValue.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/validation/typeValidator/checkNumberValue.js                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SimpleSchema_js_1 = require("../../SimpleSchema.js");
function checkNumberValue(def, value, op, expectsInteger) {
    // Is it a valid number?
    if (typeof value !== 'number' || isNaN(value)) {
        return {
            type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.EXPECTED_TYPE,
            dataType: expectsInteger ? 'Integer' : 'Number'
        };
    }
    // Assuming we are not incrementing, is the value less than the maximum value?
    if (op !== '$inc' &&
        def.max !== null &&
        (def.exclusiveMax === true
            ? def.max <= value
            : def.max < value)) {
        return {
            type: def.exclusiveMax === true
                ? SimpleSchema_js_1.SimpleSchema.ErrorTypes.MAX_NUMBER_EXCLUSIVE
                : SimpleSchema_js_1.SimpleSchema.ErrorTypes.MAX_NUMBER,
            max: def.max
        };
    }
    // Assuming we are not incrementing, is the value more than the minimum value?
    if (op !== '$inc' &&
        def.min !== null &&
        (def.exclusiveMin === true
            ? def.min >= value
            : def.min > value)) {
        return {
            type: def.exclusiveMin === true
                ? SimpleSchema_js_1.SimpleSchema.ErrorTypes.MIN_NUMBER_EXCLUSIVE
                : SimpleSchema_js_1.SimpleSchema.ErrorTypes.MIN_NUMBER,
            min: def.min
        };
    }
    // Is it an integer if we expect an integer?
    if (expectsInteger && !Number.isInteger(value)) {
        return { type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.MUST_BE_INTEGER };
    }
}
exports.default = checkNumberValue;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"checkStringValue.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/validation/typeValidator/checkStringValue.js                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SimpleSchema_js_1 = require("../../SimpleSchema.js");
function checkStringValue(def, value) {
    // Is it a String?
    if (typeof value !== 'string') {
        return { type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.EXPECTED_TYPE, dataType: 'String' };
    }
    // Is the string too long?
    if (def.max !== null && def.max < value.length) {
        return { type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.MAX_STRING, max: def.max };
    }
    // Is the string too short?
    if (def.min !== null && def.min > value.length) {
        return { type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.MIN_STRING, min: def.min };
    }
    // Does the string match the regular expression?
    if ((def.skipRegExCheckForEmptyStrings !== true || value !== '') &&
        def.regEx instanceof RegExp &&
        !def.regEx.test(value)) {
        return {
            type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.FAILED_REGULAR_EXPRESSION,
            regExp: def.regEx.toString()
        };
    }
    // If regEx is an array of regular expressions, does the string match all of them?
    if (Array.isArray(def.regEx)) {
        let regExError;
        def.regEx.every((re) => {
            if (!re.test(value)) {
                regExError = {
                    type: SimpleSchema_js_1.SimpleSchema.ErrorTypes.FAILED_REGULAR_EXPRESSION,
                    regExp: re.toString()
                };
                return false;
            }
            return true;
        });
        if (regExError !== undefined)
            return regExError;
    }
}
exports.default = checkStringValue;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"toJsonSchema.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/simpl-schema/dist/cjs/toJsonSchema.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toJsonSchema = void 0;
const SimpleSchema_js_1 = require("./SimpleSchema.js");
const jsonSchemaVersion = 'https://json-schema.org/draft/2020-12/schema';
function toJSArray(ss, key, fieldDef) {
    const itemSchema = fieldDefToJsonSchema(ss, `${key}.$`);
    if (itemSchema == null)
        return null;
    const arrayDef = {
        type: 'array',
        items: [itemSchema],
        additionalItems: false
    };
    if (fieldDef.minCount !== undefined) {
        arrayDef.minItems = fieldDef.minCount;
    }
    if (fieldDef.maxCount !== undefined) {
        arrayDef.maxItems = fieldDef.maxCount;
    }
    return arrayDef;
}
function toJsProperties(ss) {
    const properties = {};
    const required = [];
    for (const key of ss.objectKeys()) {
        const fieldDef = ss.schema(key);
        if (fieldDef == null)
            continue;
        if (fieldDef.optional !== true)
            required.push(key);
        const schema = fieldDefToJsonSchema(ss, key);
        if (schema != null)
            properties[key] = schema;
    }
    return { properties, required };
}
function toJSObj(simpleSchema, additionalProperties = false) {
    return Object.assign(Object.assign({ type: 'object' }, toJsProperties(simpleSchema)), { additionalProperties });
}
function fieldDefToJsonSchema(ss, key) {
    var _a;
    const fieldDef = ss.schema(key);
    if (fieldDef == null)
        return null;
    const itemSchemas = [];
    for (const fieldTypeDef of fieldDef.type.definitions) {
        let itemSchema = null;
        switch (fieldTypeDef.type) {
            case String:
                itemSchema = { type: 'string' };
                if (fieldTypeDef.allowedValues !== undefined && typeof fieldTypeDef.allowedValues !== 'function') {
                    itemSchema.enum = [...fieldTypeDef.allowedValues];
                }
                if (fieldTypeDef.max !== undefined && typeof fieldTypeDef.max !== 'function') {
                    itemSchema.maxLength = fieldTypeDef.max;
                }
                if (fieldTypeDef.min !== undefined && typeof fieldTypeDef.min !== 'function') {
                    itemSchema.minLength = fieldTypeDef.min;
                }
                if (fieldTypeDef.regEx instanceof RegExp) {
                    itemSchema.pattern = String(fieldTypeDef.regEx);
                }
                break;
            case Number:
            case SimpleSchema_js_1.SimpleSchema.Integer:
                itemSchema = { type: fieldTypeDef.type === Number ? 'number' : 'integer' };
                if (fieldTypeDef.max !== undefined && typeof fieldTypeDef.max !== 'function') {
                    if (fieldTypeDef.exclusiveMax === true) {
                        itemSchema.exclusiveMaximum = fieldTypeDef.max;
                    }
                    else {
                        itemSchema.maximum = fieldTypeDef.max;
                    }
                }
                if (fieldTypeDef.min !== undefined && typeof fieldTypeDef.min !== 'function') {
                    if (fieldTypeDef.exclusiveMin === true) {
                        itemSchema.exclusiveMinimum = fieldTypeDef.min;
                    }
                    else {
                        itemSchema.minimum = fieldTypeDef.min;
                    }
                }
                break;
            case Boolean:
                itemSchema = { type: 'boolean' };
                break;
            case Date:
                itemSchema = {
                    type: 'string',
                    format: 'date-time'
                };
                break;
            case Array:
                itemSchema = toJSArray(ss, key, fieldDef);
                break;
            case Object:
                itemSchema = toJSObj(ss.getObjectSchema(key), fieldTypeDef.blackbox);
                break;
            case SimpleSchema_js_1.SimpleSchema.Any:
                // In JSONSchema an empty object means any type
                itemSchema = {};
                break;
            default:
                if (SimpleSchema_js_1.SimpleSchema.isSimpleSchema(fieldTypeDef.type)) {
                    itemSchema = toJSObj(fieldTypeDef.type, fieldTypeDef.blackbox);
                }
                else if (
                // support custom objects
                fieldTypeDef.type instanceof Function) {
                    itemSchema = toJSObj(ss.getObjectSchema(key), fieldTypeDef.blackbox);
                }
                break;
        }
        if (itemSchema != null && fieldTypeDef.defaultValue !== undefined) {
            itemSchema.default = fieldTypeDef.defaultValue;
        }
        if (itemSchema != null)
            itemSchemas.push(itemSchema);
    }
    if (itemSchemas.length > 1) {
        return { anyOf: itemSchemas };
    }
    return (_a = itemSchemas[0]) !== null && _a !== void 0 ? _a : null;
}
/**
 * Convert a SimpleSchema to a JSONSchema Document.
 *
 * Notes:
 * - Date fields will become string fields with built-in 'date-time' format.
 * - JSONSchema does not support minimum or maximum values for date fields
 * - Custom validators are ignored
 * - Field definition properties that are a function are ignored
 * - Custom objects are treated as regular objects
 *
 * @param simpleSchema SimpleSchema instance to convert
 * @param id Optional ID to use for the `$id` field
 * @returns JSONSchema Document
 */
function toJsonSchema(simpleSchema, id) {
    return Object.assign(Object.assign(Object.assign({}, (id != null ? { $id: id } : {})), { $schema: jsonSchemaVersion }), toJSObj(simpleSchema));
}
exports.toJsonSchema = toJsonSchema;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}},"clone":{"package.json":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/clone/package.json                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = {
  "name": "clone",
  "version": "2.1.2",
  "main": "clone.js"
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"clone.js":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/clone/clone.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.useNode();
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"mongo-object":{"package.json":function module(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/mongo-object/package.json                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = {
  "name": "mongo-object",
  "version": "3.0.1",
  "main": "./dist/cjs/main.js"
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"dist":{"cjs":{"main.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/mongo-object/dist/cjs/main.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MongoObject = exports.reportNulls = exports.makeKeyGeneric = exports.keyToPosition = exports.isBasicObject = exports.genericKeyAffectsOtherGenericKey = exports.extractOp = exports.expandKey = exports.cleanNulls = exports.appendAffectedKey = void 0;
const mongo_object_js_1 = __importDefault(require("./mongo-object.js"));
exports.MongoObject = mongo_object_js_1.default;
var util_js_1 = require("./util.js");
Object.defineProperty(exports, "appendAffectedKey", { enumerable: true, get: function () { return util_js_1.appendAffectedKey; } });
Object.defineProperty(exports, "cleanNulls", { enumerable: true, get: function () { return util_js_1.cleanNulls; } });
Object.defineProperty(exports, "expandKey", { enumerable: true, get: function () { return util_js_1.expandKey; } });
Object.defineProperty(exports, "extractOp", { enumerable: true, get: function () { return util_js_1.extractOp; } });
Object.defineProperty(exports, "genericKeyAffectsOtherGenericKey", { enumerable: true, get: function () { return util_js_1.genericKeyAffectsOtherGenericKey; } });
Object.defineProperty(exports, "isBasicObject", { enumerable: true, get: function () { return util_js_1.isBasicObject; } });
Object.defineProperty(exports, "keyToPosition", { enumerable: true, get: function () { return util_js_1.keyToPosition; } });
Object.defineProperty(exports, "makeKeyGeneric", { enumerable: true, get: function () { return util_js_1.makeKeyGeneric; } });
Object.defineProperty(exports, "reportNulls", { enumerable: true, get: function () { return util_js_1.reportNulls; } });
exports.default = mongo_object_js_1.default;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"mongo-object.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/mongo-object/dist/cjs/mongo-object.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_js_1 = require("./util.js");
const REMOVED_MARKER = '______MONGO_OBJECT_REMOVED______';
class MongoObject {
    /*
     * @constructor
     * @param obj
     * @param blackboxKeys A list of the names of keys that shouldn't be traversed
     * @returns {undefined}
     *
     * Creates a new MongoObject instance. The object passed as the first argument
     * will be modified in place by calls to instance methods. Also, immediately
     * upon creation of the instance, the object will have any `undefined` keys
     * removed recursively.
     */
    constructor(obj, blackboxKeys = []) {
        this._affectedKeys = {};
        this._arrayItemPositions = [];
        this._blackboxKeys = [];
        this._genericAffectedKeys = {};
        this._objectPositions = [];
        this._parentPositions = [];
        this._positionsByGenericKey = {};
        this._positionsInsideArrays = [];
        this._positionsThatCreateGenericKey = {};
        this._obj = obj;
        this._blackboxKeys = blackboxKeys;
        this._reParseObj();
    }
    _reParseObj() {
        const blackboxKeys = this._blackboxKeys;
        this._affectedKeys = {};
        this._genericAffectedKeys = {};
        this._positionsByGenericKey = {};
        this._positionsThatCreateGenericKey = {};
        this._parentPositions = [];
        this._positionsInsideArrays = [];
        this._objectPositions = [];
        this._arrayItemPositions = [];
        function parseObj(self, val, currentPosition, affectedKey, operator, adjusted, isWithinArray) {
            // Adjust for first-level modifier operators
            if (operator == null && (affectedKey === null || affectedKey === void 0 ? void 0 : affectedKey.substring(0, 1)) === '$') {
                operator = affectedKey;
                affectedKey = null;
            }
            let affectedKeyIsBlackBox = false;
            let stop = false;
            if (affectedKey != null) {
                // Adjust for $push and $addToSet and $pull and $pop
                if (adjusted !== true) {
                    if (operator === '$push' ||
                        operator === '$addToSet' ||
                        operator === '$pop') {
                        // Adjust for $each
                        // We can simply jump forward and pretend like the $each array
                        // is the array for the field. This has the added benefit of
                        // skipping past any $slice, which we also don't care about.
                        if ((0, util_js_1.isBasicObject)(val) && '$each' in val) {
                            val = val.$each;
                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
                            currentPosition = `${currentPosition}[$each]`;
                        }
                        else {
                            affectedKey = `${affectedKey}.0`;
                        }
                        adjusted = true;
                    }
                    else if (operator === '$pull') {
                        affectedKey = `${affectedKey}.0`;
                        if ((0, util_js_1.isBasicObject)(val)) {
                            stop = true;
                        }
                        adjusted = true;
                    }
                }
                // Make generic key
                const affectedKeyGeneric = (0, util_js_1.makeKeyGeneric)(affectedKey);
                if (affectedKeyGeneric === null)
                    throw new Error(`Failed to get generic key for key "${affectedKey}"`);
                // Determine whether affected key should be treated as a black box
                affectedKeyIsBlackBox = affectedKeyGeneric !== null &&
                    blackboxKeys.includes(affectedKeyGeneric);
                // Mark that this position affects this generic and non-generic key
                if (currentPosition != null) {
                    self._affectedKeys[currentPosition] = affectedKey;
                    self._genericAffectedKeys[currentPosition] = affectedKeyGeneric;
                    const positionInfo = {
                        key: affectedKey,
                        operator: operator !== null && operator !== void 0 ? operator : null,
                        position: currentPosition
                    };
                    if (self._positionsByGenericKey[affectedKeyGeneric] == null)
                        self._positionsByGenericKey[affectedKeyGeneric] = [];
                    self._positionsByGenericKey[affectedKeyGeneric].push(positionInfo);
                    // Operators other than $unset will cause ancestor object keys to
                    // be auto-created.
                    if (operator != null && operator !== '$unset') {
                        MongoObject.objectsThatGenericKeyWillCreate(affectedKeyGeneric).forEach((objGenericKey) => {
                            if (self._positionsThatCreateGenericKey[objGenericKey] === undefined) {
                                self._positionsThatCreateGenericKey[objGenericKey] = [];
                            }
                            self._positionsThatCreateGenericKey[objGenericKey].push(positionInfo);
                        });
                    }
                    // If we're within an array, mark this position so we can omit it from flat docs
                    if (isWithinArray === true)
                        self._positionsInsideArrays.push(currentPosition);
                }
            }
            if (stop)
                return;
            // Loop through arrays
            if (Array.isArray(val) && val.length > 0) {
                if (currentPosition != null) {
                    // Mark positions with arrays that should be ignored when we want endpoints only
                    self._parentPositions.push(currentPosition);
                }
                // Loop
                val.forEach((v, i) => {
                    if (currentPosition != null)
                        self._arrayItemPositions.push(`${currentPosition}[${i}]`);
                    parseObj(self, v, currentPosition != null ? `${currentPosition}[${i}]` : String(i), 
                    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
                    `${affectedKey}.${i}`, operator, adjusted, true);
                });
            }
            else if (((0, util_js_1.isBasicObject)(val) && !affectedKeyIsBlackBox) ||
                currentPosition == null) {
                // Loop through object keys, only for basic objects,
                // but always for the passed-in object, even if it
                // is a custom object.
                if (currentPosition != null && !(0, util_js_1.isEmpty)(val)) {
                    // Mark positions with objects that should be ignored when we want endpoints only
                    self._parentPositions.push(currentPosition);
                    // Mark positions with objects that should be left out of flat docs.
                    self._objectPositions.push(currentPosition);
                }
                // Loop
                Object.keys(val).forEach((k) => {
                    const v = val[k];
                    if (v === undefined) {
                        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete
                        delete val[k];
                    }
                    else if (k !== '$slice') {
                        parseObj(self, v, currentPosition != null ? `${currentPosition}[${k}]` : k, (0, util_js_1.appendAffectedKey)(affectedKey, k), operator, adjusted, isWithinArray);
                    }
                });
            }
        }
        parseObj(this, this._obj);
    }
    /**
     * @param func
     * @param [options]
     * @param [options.endPointsOnly=true] - Only call function for endpoints and not for nodes that contain other nodes
     * @returns
     *
     * Runs a function for each endpoint node in the object tree, including all items in every array.
     * The function arguments are
     * (1) the value at this node
     * (2) a string representing the node position
     * (3) the representation of what would be changed in mongo, using mongo dot notation
     * (4) the generic equivalent of argument 3, with '$' instead of numeric pieces
     */
    forEachNode(func, { endPointsOnly = true } = {}) {
        if (typeof func !== 'function')
            throw new Error('filter requires a loop function');
        const updatedValues = {};
        Object.keys(this._affectedKeys).forEach((position) => {
            if (endPointsOnly && this._parentPositions.includes(position))
                return; // Only endpoints
            func.call({
                value: this.getValueForPosition(position),
                isArrayItem: this._arrayItemPositions.includes(position),
                operator: (0, util_js_1.extractOp)(position),
                position,
                key: this._affectedKeys[position],
                genericKey: this._genericAffectedKeys[position],
                updateValue: (newVal) => {
                    updatedValues[position] = newVal;
                },
                remove: () => {
                    updatedValues[position] = undefined;
                }
            });
        });
        // Actually update/remove values as instructed
        Object.keys(updatedValues).forEach((position) => {
            this.setValueForPosition(position, updatedValues[position]);
        });
    }
    getValueForPosition(position) {
        const subkeys = position.split('[');
        let current = this._obj;
        const ln = subkeys.length;
        for (let i = 0; i < ln; i++) {
            let subkey = subkeys[i];
            // If the subkey ends in ']', remove the ending
            if (subkey.slice(-1) === ']')
                subkey = subkey.slice(0, -1);
            current = current[subkey];
            if (!Array.isArray(current) && !(0, util_js_1.isBasicObject)(current) && i < ln - 1)
                return;
        }
        if (current === REMOVED_MARKER)
            return;
        return current;
    }
    /**
     * @param position
     * @param value
     */
    setValueForPosition(position, value) {
        const subkeys = position.split('[');
        let current = this._obj;
        const ln = subkeys.length;
        let createdObjectsOrArrays = false;
        let affectedKey = '';
        for (let i = 0; i < ln; i++) {
            let subkey = subkeys[i];
            // If the subkey ends in "]", remove the ending
            if (subkey.slice(-1) === ']')
                subkey = subkey.slice(0, -1);
            // We don't store modifiers
            if (subkey.length > 0 && subkey.substring(0, 1) !== '$') {
                affectedKey = (0, util_js_1.appendAffectedKey)(affectedKey, subkey);
            }
            // If we've reached the key in the object tree that needs setting or
            // deleting, do it.
            if (i === ln - 1) {
                // If value is undefined, delete the property
                if (value === undefined) {
                    if (Array.isArray(current)) {
                        // We can't just delete it because indexes in the position strings will be off
                        // We will mark it uniquely and then parse this elsewhere
                        current[Number(subkey)] = REMOVED_MARKER;
                    }
                    else {
                        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete
                        delete current[subkey];
                    }
                }
                else {
                    current[subkey] = value;
                }
                this._affectedKeys[position] = affectedKey;
            }
            else {
                // Otherwise attempt to keep moving deeper into the object.
                // If we're setting (as opposed to deleting) a key and we hit a place
                // in the ancestor chain where the keys are not yet created, create them.
                if (current[subkey] === undefined && value !== undefined) {
                    // See if the next piece is a number
                    const nextPiece = subkeys[i + 1];
                    current[subkey] = Number.isNaN(parseInt(nextPiece, 10)) ? {} : [];
                    createdObjectsOrArrays = true;
                }
                // Move deeper into the object
                current = current[subkey];
                // If we can go no further, then quit
                if (!Array.isArray(current) && !(0, util_js_1.isBasicObject)(current) && i < ln - 1)
                    return;
            }
        }
        // If there are now new arrays or objects in the main object, we need to reparse it
        if (createdObjectsOrArrays ||
            Array.isArray(value) ||
            (0, util_js_1.isBasicObject)(value)) {
            this._reParseObj();
        }
    }
    removeValueForPosition(position) {
        this.setValueForPosition(position, undefined);
    }
    getKeyForPosition(position) {
        return this._affectedKeys[position];
    }
    getGenericKeyForPosition(position) {
        return this._genericAffectedKeys[position];
    }
    /**
     * @param key Non-generic key
     * @returns The value and operator of the requested non-generic key.
     *   Example: {value: 1, operator: "$pull"}
     */
    getInfoForKey(key) {
        // Get the info
        const position = this.getPositionForKey(key);
        if (position !== undefined) {
            return {
                value: this.getValueForPosition(position),
                operator: (0, util_js_1.extractOp)(position)
            };
        }
        // If we haven't returned yet, check to see if there is an array value
        // corresponding to this key
        // We find the first item within the array, strip the last piece off the
        // position string, and then return whatever is at that new position in
        // the original object.
        const positions = this.getPositionsForGenericKey(`${key}.$`);
        for (let index = 0; index < positions.length; index++) {
            const pos = positions[index];
            let value = this.getValueForPosition(pos);
            if (value === undefined) {
                const parentPosition = pos.slice(0, pos.lastIndexOf('['));
                value = this.getValueForPosition(parentPosition);
            }
            if (value !== undefined) {
                return {
                    value,
                    operator: (0, util_js_1.extractOp)(pos)
                };
            }
        }
    }
    /**
     * @method MongoObject.getPositionForKey
     * @param {String} key - Non-generic key
     * @returns The position string for the place in the object that
     *   affects the requested non-generic key.
     *   Example: 'foo[bar][0]'
     */
    getPositionForKey(key) {
        const positions = Object.getOwnPropertyNames(this._affectedKeys);
        for (let index = 0; index < positions.length; index++) {
            const position = positions[index];
            // We return the first one we find. While it's
            // possible that multiple update operators could
            // affect the same non-generic key, we'll assume that's not the case.
            if (this._affectedKeys[position] === key)
                return position;
        }
    }
    /**
     * @param genericKey Generic key
     * @returns An array of position strings for the places in the object that
     *   affect the requested generic key.
     *   Example: ['foo[bar][0]']
     */
    getPositionsForGenericKey(genericKey) {
        return this.getPositionsInfoForGenericKey(genericKey).map((p) => p.position);
    }
    /**
     * @param genericKey Generic key
     * @returns An array of position info for the places in the object that
     *   affect the requested generic key.
     */
    getPositionsInfoForGenericKey(genericKey) {
        let positions = this._positionsByGenericKey[genericKey];
        if (positions == null || positions.length === 0)
            positions = this._positionsByGenericKey[`${genericKey}.$`];
        if (positions == null || positions.length === 0)
            positions = [];
        return positions.map((info) => (Object.assign({ value: this.getValueForPosition(info.position) }, info)));
    }
    getPositionsThatCreateGenericKey(genericKey) {
        var _a;
        return (_a = this._positionsThatCreateGenericKey[genericKey]) !== null && _a !== void 0 ? _a : [];
    }
    /**
     * @deprecated Use getInfoForKey
     * @param {String} key - Non-generic key
     * @returns The value of the requested non-generic key
     */
    getValueForKey(key) {
        const position = this.getPositionForKey(key);
        if (position != null)
            return this.getValueForPosition(position);
    }
    /**
     * Adds `key` with value `val` under operator `op` to the source object.
     *
     * @param key Key to set
     * @param val Value to give this key
     * @param op Operator under which to set it, or `null` for a non-modifier object
     * @returns
     */
    addKey(key, val, op) {
        const position = op != null ? `${op}[${key}]` : (0, util_js_1.keyToPosition)(key);
        this.setValueForPosition(position, val);
    }
    /**
     * Removes anything that affects any of the generic keys in the list
     */
    removeGenericKeys(keys) {
        Object.getOwnPropertyNames(this._genericAffectedKeys).forEach((position) => {
            const genericKey = this._genericAffectedKeys[position];
            if (genericKey !== null && keys.includes(genericKey)) {
                this.removeValueForPosition(position);
            }
        });
    }
    /**
     * Removes anything that affects the requested generic key
     */
    removeGenericKey(key) {
        Object.getOwnPropertyNames(this._genericAffectedKeys).forEach((position) => {
            if (this._genericAffectedKeys[position] === key) {
                this.removeValueForPosition(position);
            }
        });
    }
    /**
     * Removes anything that affects the requested non-generic key
     */
    removeKey(key) {
        // We don't use getPositionForKey here because we want to be sure to
        // remove for all positions if there are multiple.
        Object.getOwnPropertyNames(this._affectedKeys).forEach((position) => {
            if (this._affectedKeys[position] === key) {
                this.removeValueForPosition(position);
            }
        });
    }
    /**
     * Removes anything that affects any of the non-generic keys in the list
     */
    removeKeys(keys) {
        keys.forEach((key) => this.removeKey(key));
    }
    /**
     * Passes all affected keys to a test function, which
     * should return false to remove whatever is affecting that key
     */
    filterGenericKeys(test) {
        const checkedKeys = [];
        const keysToRemove = [];
        Object.getOwnPropertyNames(this._genericAffectedKeys).forEach((position) => {
            const genericKey = this._genericAffectedKeys[position];
            if (genericKey !== null && !checkedKeys.includes(genericKey)) {
                checkedKeys.push(genericKey);
                if (genericKey != null && !test(genericKey)) {
                    keysToRemove.push(genericKey);
                }
            }
        });
        keysToRemove.forEach((key) => this.removeGenericKey(key));
    }
    /**
     * Sets the value for every place in the object that affects
     * the requested non-generic key
     */
    setValueForKey(key, val) {
        // We don't use getPositionForKey here because we want to be sure to
        // set the value for all positions if there are multiple.
        Object.getOwnPropertyNames(this._affectedKeys).forEach((position) => {
            if (this._affectedKeys[position] === key) {
                this.setValueForPosition(position, val);
            }
        });
    }
    /**
     * Sets the value for every place in the object that affects
     * the requested generic key
     */
    setValueForGenericKey(key, val) {
        // We don't use getPositionForKey here because we want to be sure to
        // set the value for all positions if there are multiple.
        Object.getOwnPropertyNames(this._genericAffectedKeys).forEach((position) => {
            if (this._genericAffectedKeys[position] === key) {
                this.setValueForPosition(position, val);
            }
        });
    }
    removeArrayItems() {
        // Traverse and pull out removed array items at this point
        function traverse(obj) {
            (0, util_js_1.each)(obj, (val, indexOrProp) => {
                // Move deeper into the object
                const next = obj[indexOrProp];
                // If we can go no further, then quit
                if ((0, util_js_1.isBasicObject)(next)) {
                    traverse(next);
                }
                else if (Array.isArray(next)) {
                    obj[indexOrProp] = next.filter((item) => item !== REMOVED_MARKER);
                    traverse(obj[indexOrProp]);
                }
                return undefined;
            });
        }
        traverse(this._obj);
    }
    /**
     * Get the source object, potentially modified by other method calls on this
     * MongoObject instance.
     */
    getObject() {
        return this._obj;
    }
    /**
     * Gets a flat object based on the MongoObject instance.
     * In a flat object, the key is the name of the non-generic affectedKey,
     * with mongo dot notation if necessary, and the value is the value for
     * that key.
     *
     * With `keepArrays: true`, we don't flatten within arrays. Currently
     * MongoDB does not see a key such as `a.0.b` and automatically assume
     * an array. Instead it would create an object with key '0' if there
     * wasn't already an array saved as the value of `a`, which is rarely
     * if ever what we actually want. To avoid this confusion, we
     * set entire arrays.
     */
    getFlatObject({ keepArrays = false } = {}) {
        const newObj = {};
        Object.keys(this._affectedKeys).forEach((position) => {
            const affectedKey = this._affectedKeys[position];
            if (typeof affectedKey === 'string' &&
                ((keepArrays &&
                    !this._positionsInsideArrays.includes(position) &&
                    !this._objectPositions.includes(position)) ||
                    (!keepArrays &&
                        !this._parentPositions.includes(position)))) {
                newObj[affectedKey] = this.getValueForPosition(position);
            }
        });
        return newObj;
    }
    /**
     * @method MongoObject.affectsKey
     * @param key Key to test
     * @returns True if the non-generic key is affected by this object
     */
    affectsKey(key) {
        return this.getPositionForKey(key) !== undefined;
    }
    /**
     * @method MongoObject.affectsGenericKey
     * @param key Key to test
     * @returns True if the generic key is affected by this object
     */
    affectsGenericKey(key) {
        const positions = Object.getOwnPropertyNames(this._genericAffectedKeys);
        for (let index = 0; index < positions.length; index++) {
            const position = positions[index];
            if (this._genericAffectedKeys[position] === key)
                return true;
        }
        return false;
    }
    /**
     * @method MongoObject.affectsGenericKeyImplicit
     * @param key Key to test
     * @returns Like affectsGenericKey, but will return true if a child key is affected
     */
    affectsGenericKeyImplicit(key) {
        const positions = Object.getOwnPropertyNames(this._genericAffectedKeys);
        for (let index = 0; index < positions.length; index++) {
            const position = positions[index];
            const affectedKey = this._genericAffectedKeys[position];
            if (affectedKey !== null &&
                (0, util_js_1.genericKeyAffectsOtherGenericKey)(key, affectedKey))
                return true;
        }
        return false;
    }
    /**
     * This is different from MongoObject.prototype.getKeyForPosition in that
     * this method does not depend on the requested position actually being
     * present in any particular MongoObject.
     *
     * @method MongoObject._positionToKey
     * @param position
     * @returns The key that this position in an object would affect.
     */
    static _positionToKey(position) {
        // XXX Probably a better way to do this, but this is
        // foolproof for now.
        const mDoc = new MongoObject({});
        mDoc.setValueForPosition(position, 1); // Value doesn't matter
        return mDoc.getKeyForPosition(position);
    }
    /**
     * @method MongoObject.docToModifier
     * @public
     * @param doc - An object to be converted into a MongoDB modifier
     * @param [options] Options
     * @returns A MongoDB modifier.
     *
     * Converts an object into a modifier by flattening it, putting keys with
     * null, undefined, and empty string values into `modifier.$unset`, and
     * putting the rest of the keys into `modifier.$set`.
     */
    static docToModifier(doc, { keepArrays = false, keepEmptyStrings = false } = {}) {
        // Flatten doc
        const mDoc = new MongoObject(doc);
        let flatDoc = mDoc.getFlatObject({ keepArrays });
        // Get a list of null, undefined, and empty string values so we can unset them instead
        const nulls = (0, util_js_1.reportNulls)(flatDoc, keepEmptyStrings);
        flatDoc = (0, util_js_1.cleanNulls)(flatDoc, false, keepEmptyStrings);
        const modifier = {};
        if (!(0, util_js_1.isEmpty)(flatDoc))
            modifier.$set = flatDoc;
        if (!(0, util_js_1.isEmpty)(nulls))
            modifier.$unset = nulls;
        return modifier;
    }
    static objAffectsKey(obj, key) {
        const mDoc = new MongoObject(obj);
        return mDoc.affectsKey(key);
    }
    /**
     * @param genericKey Generic key
     * @return Array of other generic keys that would be created by this generic key
     */
    static objectsThatGenericKeyWillCreate(genericKey) {
        const objs = [];
        do {
            const lastDotPosition = genericKey.lastIndexOf('.');
            genericKey = lastDotPosition === -1 ? '' : genericKey.slice(0, lastDotPosition);
            if (genericKey.length > 0 && !genericKey.endsWith('.$'))
                objs.push(genericKey);
        } while (genericKey.length > 0);
        return objs;
    }
    /**
     * Takes a flat object and returns an expanded version of it.
     */
    static expandObj(doc) {
        const newDoc = {};
        Object.keys(doc).forEach((key) => {
            const val = doc[key];
            const subkeys = key.split('.');
            const subkeylen = subkeys.length;
            let current = newDoc;
            for (let i = 0; i < subkeylen; i++) {
                const subkey = subkeys[i];
                if (typeof current[subkey] !== 'undefined' &&
                    !(0, util_js_1.isObject)(current[subkey])) {
                    break; // Already set for some reason; leave it alone
                }
                if (i === subkeylen - 1) {
                    // Last iteration; time to set the value
                    current[subkey] = val;
                }
                else {
                    // See if the next piece is a number
                    const nextPiece = subkeys[i + 1];
                    const nextPieceInt = parseInt(nextPiece, 10);
                    if (Number.isNaN(nextPieceInt) && !(0, util_js_1.isObject)(current[subkey])) {
                        current[subkey] = {};
                    }
                    else if (!Number.isNaN(nextPieceInt) &&
                        !Array.isArray(current[subkey])) {
                        current[subkey] = [];
                    }
                }
                current = current[subkey];
            }
        });
        return newDoc;
    }
}
exports.default = MongoObject;
/* STATIC */
MongoObject._keyToPosition = util_js_1.keyToPosition;
MongoObject.cleanNulls = util_js_1.cleanNulls;
MongoObject.expandKey = util_js_1.expandKey;
MongoObject.isBasicObject = util_js_1.isBasicObject;
MongoObject.makeKeyGeneric = util_js_1.makeKeyGeneric;
MongoObject.reportNulls = util_js_1.reportNulls;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"util.js":function module(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// node_modules/mongo-object/dist/cjs/util.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.expandKey = exports.keyToPosition = exports.makeKeyGeneric = exports.isObject = exports.isEmpty = exports.isPrototype = exports.each = exports.isArrayLike = exports.isLength = exports.isNullUndefinedOrEmptyString = exports.genericKeyAffectsOtherGenericKey = exports.extractOp = exports.appendAffectedKey = exports.reportNulls = exports.isBasicObject = exports.cleanNulls = void 0;
/** Used as references for various `Number` constants. */
const MAX_SAFE_INTEGER = 9007199254740991;
/**
 * @param doc Source object or array
 * @param isArray True if `doc` is an array
 * @param keepEmptyStrings Whether to keep empty strings
 * @returns An object in which all properties with null, undefined, or empty
 *   string values have been removed, recursively.
 */
function cleanNulls(doc, isArray = false, keepEmptyStrings = false) {
    const newDoc = isArray ? [] : {};
    Object.keys(doc).forEach((key) => {
        let val = doc[key];
        if (!Array.isArray(val) && isBasicObject(val)) {
            val = cleanNulls(val, false, keepEmptyStrings); // Recurse into plain objects
            if (!isEmpty(val))
                newDoc[key] = val;
        }
        else if (Array.isArray(val)) {
            val = cleanNulls(val, true, keepEmptyStrings); // Recurse into non-typed arrays
            if (!isEmpty(val))
                newDoc[key] = val;
        }
        else if (!isNullUndefinedOrEmptyString(val)) {
            newDoc[key] = val;
        }
        else if (keepEmptyStrings &&
            typeof val === 'string' &&
            val.length === 0) {
            newDoc[key] = val;
        }
    });
    return newDoc;
}
exports.cleanNulls = cleanNulls;
/**
 * @param obj Any reference to check
 * @returns True if obj is an Object as opposed to
 *   something that inherits from Object
 */
function isBasicObject(obj) {
    return obj === Object(obj) && Object.getPrototypeOf(obj) === Object.prototype;
}
exports.isBasicObject = isBasicObject;
/**
 * @method MongoObject.reportNulls
 * @public
 * @param flatDoc An object with no properties that are also objects.
 * @returns An object in which the keys represent the keys in the
 *   original object that were null, undefined, or empty strings, and the value
 *   of each key is "".
 */
function reportNulls(flatDoc, keepEmptyStrings = false) {
    const nulls = {};
    // Loop through the flat doc
    Object.keys(flatDoc).forEach((key) => {
        const val = flatDoc[key];
        if (val === null ||
            val === undefined ||
            (!keepEmptyStrings && typeof val === 'string' && val.length === 0) ||
            // If value is an array in which all the values recursively are undefined, null,
            // or an empty string
            (Array.isArray(val) &&
                cleanNulls(val, true, keepEmptyStrings).length === 0)) {
            nulls[key] = '';
        }
    });
    return nulls;
}
exports.reportNulls = reportNulls;
function appendAffectedKey(affectedKey, key) {
    if (key === '$each')
        return affectedKey;
    return (affectedKey != null && affectedKey.length > 0) ? `${affectedKey}.${key}` : key;
}
exports.appendAffectedKey = appendAffectedKey;
// Extracts operator piece, if present, from position string
function extractOp(position) {
    const firstPositionPiece = position.slice(0, position.indexOf('['));
    return firstPositionPiece.substring(0, 1) === '$' ? firstPositionPiece : null;
}
exports.extractOp = extractOp;
function genericKeyAffectsOtherGenericKey(key, affectedKey) {
    // If the affected key is the test key
    if (affectedKey === key)
        return true;
    // If the affected key implies the test key because the affected key
    // starts with the test key followed by a period
    if (affectedKey.substring(0, key.length + 1) === `${key}.`)
        return true;
    // If the affected key implies the test key because the affected key
    // starts with the test key and the test key ends with ".$"
    const lastTwo = key.slice(-2);
    if (lastTwo === '.$' && key.slice(0, -2) === affectedKey)
        return true;
    return false;
}
exports.genericKeyAffectsOtherGenericKey = genericKeyAffectsOtherGenericKey;
function isNullUndefinedOrEmptyString(val) {
    return (val === undefined ||
        val === null ||
        (typeof val === 'string' && val.length === 0));
}
exports.isNullUndefinedOrEmptyString = isNullUndefinedOrEmptyString;
function isLength(value) {
    return (typeof value === 'number' &&
        value > -1 &&
        value % 1 === 0 &&
        value <= MAX_SAFE_INTEGER);
}
exports.isLength = isLength;
function isArrayLike(value) {
    return value != null && typeof value !== 'function' && isLength(value.length);
}
exports.isArrayLike = isArrayLike;
function each(collection, iteratee) {
    if (collection == null) {
        return;
    }
    if (Array.isArray(collection)) {
        collection.forEach(iteratee);
        return;
    }
    const iterable = Object(collection);
    if (!isArrayLike(collection)) {
        Object.keys(iterable).forEach((key) => iteratee(iterable[key], key, iterable));
        return;
    }
    let index = -1;
    while (++index < collection.length) {
        if (iteratee(iterable[index], index, iterable) === false) {
            break;
        }
    }
}
exports.each = each;
function isPrototype(value) {
    const Ctor = value === null || value === void 0 ? void 0 : value.constructor;
    if (typeof Ctor !== 'function' || Ctor.prototype === undefined) {
        return value === Object.prototype;
    }
    return value === Ctor.prototype;
}
exports.isPrototype = isPrototype;
function isEmpty(value) {
    if (value === null || value === undefined) {
        return true;
    }
    if (Array.isArray(value) || typeof value === 'string') {
        return value.length === 0;
    }
    const tag = Object.prototype.toString.call(value);
    if (tag === '[object Map]' || tag === '[object Set]') {
        return value.size === 0;
    }
    if (isPrototype(value)) {
        return Object.keys(value).length === 0;
    }
    // eslint-disable-next-line no-restricted-syntax
    for (const key in value) {
        if (Object.hasOwnProperty.call(value, key)) {
            return false;
        }
    }
    return true;
}
exports.isEmpty = isEmpty;
function isObject(value) {
    const type = typeof value;
    return value != null && (type === 'object' || type === 'function');
}
exports.isObject = isObject;
/* Takes a specific string that uses any mongo-style positional update
 * dot notation and returns a generic string equivalent. Replaces all numeric
 * positional "pieces" (e.g. '.1') or any other positional operator
 * (e.g. '$[<identifier>]')  with a dollar sign ($).
 *
 * @param key A specific or generic key
 * @returns Generic name.
 */
function makeKeyGeneric(key) {
    if (typeof key !== 'string')
        return null;
    return key.replace(/\.([0-9]+|\$\[[^\]]*\])(?=\.|$)/g, '.$');
}
exports.makeKeyGeneric = makeKeyGeneric;
function keyToPosition(key, wrapAll = false) {
    let position = '';
    key.split('.').forEach((piece, i) => {
        if (i === 0 && !wrapAll) {
            position += piece;
        }
        else {
            position += `[${piece}]`;
        }
    });
    return position;
}
exports.keyToPosition = keyToPosition;
/**
 *  Takes a string representation of an object key and its value
 *  and updates "obj" to contain that key with that value.
 *
 *  Example keys and results if val is 1:
 *    "a" -> {a: 1}
 *    "a[b]" -> {a: {b: 1}}
 *    "a[b][0]" -> {a: {b: [1]}}
 *    'a[b.0.c]' -> {a: {'b.0.c': 1}}
 * @param val Value
 * @param key Key
 * @param obj Object
 */
function expandKey(val, key, obj) {
    const subkeys = key.split('[');
    let current = obj;
    for (let i = 0, ln = subkeys.length; i < ln; i++) {
        let subkey = subkeys[i];
        if (subkey.slice(-1) === ']') {
            subkey = subkey.slice(0, -1);
        }
        if (i === ln - 1) {
            // Last iteration; time to set the value; always overwrite
            current[subkey] = val;
            // If val is undefined, delete the property
            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete
            if (val === undefined)
                delete current[subkey];
        }
        else {
            // See if the next piece is a number
            const nextPiece = subkeys[i + 1];
            if (current[subkey] === undefined) {
                current[subkey] = Number.isNaN(parseInt(nextPiece, 10)) ? {} : [];
            }
        }
        current = current[subkey];
    }
}
exports.expandKey = expandKey;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}}},{
  "extensions": [
    ".js",
    ".json",
    ".ts",
    ".mjs"
  ]
});


/* Exports */
return {
  export: function () { return {
      meteorInstall: meteorInstall
    };},
  require: require,
  eagerModulePaths: [
    "/node_modules/meteor/modules/server.js"
  ],
  mainModulePath: "/node_modules/meteor/modules/server.js"
}});

//# sourceURL=meteor://💻app/packages/modules.js
//# sourceMappingURL=data:application/json;charset=utf8;base64,
